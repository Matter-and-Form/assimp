/*
Open Asset Import Library (ASSIMP)
----------------------------------------------------------------------

Copyright (c) 2006-2010, ASSIMP Development Team
All rights reserved.

Redistribution and use of this software in source and binary forms, 
with or without modification, are permitted provided that the 
following conditions are met:

* Redistributions of source code must retain the above
  copyright notice, this list of conditions and the
  following disclaimer.

* Redistributions in binary form must reproduce the above
  copyright notice, this list of conditions and the
  following disclaimer in the documentation and/or other
  materials provided with the distribution.

* Neither the name of the ASSIMP team, nor the names of its
  contributors may be used to endorse or promote products
  derived from this software without specific prior
  written permission of the ASSIMP Development Team.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

----------------------------------------------------------------------
*/

/** MACHINE-GENERATED by scripts/STEPImporter/CppGenerator.py */

#ifndef INCLUDED_STEP_READER_GEN_H
#define INCLUDED_STEP_READER_GEN_H

#include "STEPFile.h"

namespace Assimp {
namespace STEP {
	using namespace STEP;
	using namespace STEP::EXPRESS;
	
	
	struct NotImplemented : public ObjectHelper<NotImplemented,0> {
		
	};
	

	// ******************************************************************************
	// STEP Custom data types
	// ******************************************************************************


    // C++ wrapper type for STEPAbsorbed_Dose_Measure
    typedef REAL STEPAbsorbed_Dose_Measure;
    // C++ wrapper type for STEPAcceleration_Measure
    typedef REAL STEPAcceleration_Measure;
    // C++ wrapper type for STEPAction_Items
    typedef SELECT STEPAction_Items;
    // C++ wrapper type for STEPAction_Method_Items
    typedef SELECT STEPAction_Method_Items;
    // C++ wrapper type for STEPAction_Request_Item
    typedef SELECT STEPAction_Request_Item;
    // C++ wrapper type for STEPAhead_Or_Behind
    typedef ENUMERATION STEPAhead_Or_Behind;
    // C++ wrapper type for STEPAmount_Of_Substance_Measure
    typedef REAL STEPAmount_Of_Substance_Measure;
    // C++ wrapper type for STEPAngle_Direction_Reference_Select
    typedef SELECT STEPAngle_Direction_Reference_Select;
    // C++ wrapper type for STEPAngle_Direction_Reference_With_A2p3d_Select
    typedef SELECT STEPAngle_Direction_Reference_With_A2p3d_Select;
    // C++ wrapper type for STEPAngle_Relator
    typedef ENUMERATION STEPAngle_Relator;
    // C++ wrapper type for STEPAnnotation_Plane_Element
    typedef SELECT STEPAnnotation_Plane_Element;
    // C++ wrapper type for STEPAnnotation_Representation_Select
    typedef SELECT STEPAnnotation_Representation_Select;
    // C++ wrapper type for STEPAnnotation_Symbol_Occurrence_Item
    typedef SELECT STEPAnnotation_Symbol_Occurrence_Item;
    // C++ wrapper type for STEPAnnotation_Text_Occurrence_Item
    typedef SELECT STEPAnnotation_Text_Occurrence_Item;
    // C++ wrapper type for STEPApproval_Item
    typedef SELECT STEPApproval_Item;
    // C++ wrapper type for STEPApproved_Item
    typedef SELECT STEPApproved_Item;
    // C++ wrapper type for STEPArea_Measure
    typedef REAL STEPArea_Measure;
    // C++ wrapper type for STEPArea_Or_View
    typedef SELECT STEPArea_Or_View;
    // C++ wrapper type for STEPAttribute_Classification_Item
    typedef SELECT STEPAttribute_Classification_Item;
    // C++ wrapper type for STEPAttribute_Language_Item
    typedef SELECT STEPAttribute_Language_Item;
    // C++ wrapper type for STEPAttribute_Type
    typedef SELECT STEPAttribute_Type;
    // C++ wrapper type for STEPAxis2_Placement
    typedef SELECT STEPAxis2_Placement;
    // C++ wrapper type for STEPB_Spline_Curve_Form
    typedef ENUMERATION STEPB_Spline_Curve_Form;
    // C++ wrapper type for STEPB_Spline_Surface_Form
    typedef ENUMERATION STEPB_Spline_Surface_Form;
    // C++ wrapper type for STEPBase_Solid_Select
    typedef SELECT STEPBase_Solid_Select;
    // C++ wrapper type for STEPBlend_End_Condition_Select
    typedef SELECT STEPBlend_End_Condition_Select;
    // C++ wrapper type for STEPBlend_Radius_Variation_Type
    typedef ENUMERATION STEPBlend_Radius_Variation_Type;
    // C++ wrapper type for STEPBoolean_Operand
    typedef SELECT STEPBoolean_Operand;
    // C++ wrapper type for STEPBoolean_Operator
    typedef ENUMERATION STEPBoolean_Operator;
    // C++ wrapper type for STEPBox_Characteristic_Select
    typedef SELECT STEPBox_Characteristic_Select;
    // C++ wrapper type for STEPBox_Height
    typedef REAL STEPBox_Height;
    // C++ wrapper type for STEPBox_Rotate_Angle
    typedef REAL STEPBox_Rotate_Angle;
    // C++ wrapper type for STEPBox_Slant_Angle
    typedef REAL STEPBox_Slant_Angle;
    // C++ wrapper type for STEPBox_Width
    typedef REAL STEPBox_Width;
    // C++ wrapper type for STEPCamera_Model_D3_Multi_Clipping_Interection_Select
    typedef SELECT STEPCamera_Model_D3_Multi_Clipping_Interection_Select;
    // C++ wrapper type for STEPCamera_Model_D3_Multi_Clipping_Union_Select
    typedef SELECT STEPCamera_Model_D3_Multi_Clipping_Union_Select;
    // C++ wrapper type for STEPCapacitance_Measure
    typedef REAL STEPCapacitance_Measure;
    // C++ wrapper type for STEPCategory_Usage_Item
    typedef SELECT STEPCategory_Usage_Item;
    // C++ wrapper type for STEPCc_Classified_Item
    typedef SELECT STEPCc_Classified_Item;
    // C++ wrapper type for STEPCc_Person_Organization_Item
    typedef SELECT STEPCc_Person_Organization_Item;
    // C++ wrapper type for STEPCc_Specified_Item
    typedef SELECT STEPCc_Specified_Item;
    // C++ wrapper type for STEPCelsius_Temperature_Measure
    typedef REAL STEPCelsius_Temperature_Measure;
    // C++ wrapper type for STEPCentral_Or_Parallel
    typedef ENUMERATION STEPCentral_Or_Parallel;
    // C++ wrapper type for STEPCertification_Item
    typedef SELECT STEPCertification_Item;
    // C++ wrapper type for STEPCertified_Item
    typedef SELECT STEPCertified_Item;
    // C++ wrapper type for STEPChange_Request_Item
    typedef SELECT STEPChange_Request_Item;
    // C++ wrapper type for STEPCharacter_Spacing_Select
    typedef SELECT STEPCharacter_Spacing_Select;
    // C++ wrapper type for STEPCharacter_Style_Select
    typedef SELECT STEPCharacter_Style_Select;
    // C++ wrapper type for STEPCharacterized_Action_Definition
    typedef SELECT STEPCharacterized_Action_Definition;
    // C++ wrapper type for STEPCharacterized_Definition
    typedef SELECT STEPCharacterized_Definition;
    // C++ wrapper type for STEPCharacterized_Material_Property
    typedef SELECT STEPCharacterized_Material_Property;
    // C++ wrapper type for STEPCharacterized_Product_Composition_Value
    typedef SELECT STEPCharacterized_Product_Composition_Value;
    // C++ wrapper type for STEPCharacterized_Product_Definition
    typedef SELECT STEPCharacterized_Product_Definition;
    // C++ wrapper type for STEPClass_Usage_Effectivity_Context_Item
    typedef SELECT STEPClass_Usage_Effectivity_Context_Item;
    // C++ wrapper type for STEPClassification_Item
    typedef SELECT STEPClassification_Item;
    // C++ wrapper type for STEPClassified_Item
    typedef SELECT STEPClassified_Item;
    // C++ wrapper type for STEPCompound_Item_Definition
    typedef SELECT STEPCompound_Item_Definition;
    // C++ wrapper type for STEPConductance_Measure
    typedef REAL STEPConductance_Measure;
    // C++ wrapper type for STEPConfiguration_Design_Item
    typedef SELECT STEPConfiguration_Design_Item;
    // C++ wrapper type for STEPConfigured_Effectivity_Context_Item
    typedef SELECT STEPConfigured_Effectivity_Context_Item;
    // C++ wrapper type for STEPConfigured_Effectivity_Item
    typedef SELECT STEPConfigured_Effectivity_Item;
    // C++ wrapper type for STEPConstructive_Geometry_Representation_Or_Shape_Represenation
    typedef SELECT STEPConstructive_Geometry_Representation_Or_Shape_Represenation;
    // C++ wrapper type for STEPContext_Dependent_Measure
    typedef REAL STEPContext_Dependent_Measure;
    // C++ wrapper type for STEPContract_Item
    typedef SELECT STEPContract_Item;
    // C++ wrapper type for STEPContracted_Item
    typedef SELECT STEPContracted_Item;
    // C++ wrapper type for STEPCount_Measure
    typedef NUMBER STEPCount_Measure;
    // C++ wrapper type for STEPCsg_Primitive
    typedef SELECT STEPCsg_Primitive;
    // C++ wrapper type for STEPCsg_Select
    typedef SELECT STEPCsg_Select;
    // C++ wrapper type for STEPCurve_Font_Or_Scaled_Curve_Font_Select
    typedef SELECT STEPCurve_Font_Or_Scaled_Curve_Font_Select;
    // C++ wrapper type for STEPCurve_On_Surface
    typedef SELECT STEPCurve_On_Surface;
    // C++ wrapper type for STEPCurve_Or_Annotation_Curve_Occurrence
    typedef SELECT STEPCurve_Or_Annotation_Curve_Occurrence;
    // C++ wrapper type for STEPCurve_Or_Render
    typedef SELECT STEPCurve_Or_Render;
    // C++ wrapper type for STEPCurve_Style_Font_Select
    typedef SELECT STEPCurve_Style_Font_Select;
    // C++ wrapper type for STEPDate_And_Time_Item
    typedef SELECT STEPDate_And_Time_Item;
    // C++ wrapper type for STEPDate_Item
    typedef SELECT STEPDate_Item;
    // C++ wrapper type for STEPDate_Time_Item
    typedef SELECT STEPDate_Time_Item;
    // C++ wrapper type for STEPDate_Time_Or_Event_Occurrence
    typedef SELECT STEPDate_Time_Or_Event_Occurrence;
    // C++ wrapper type for STEPDate_Time_Select
    typedef SELECT STEPDate_Time_Select;
    // C++ wrapper type for STEPDay_In_Month_Number
    typedef INTEGER STEPDay_In_Month_Number;
    // C++ wrapper type for STEPDay_In_Week_Number
    typedef INTEGER STEPDay_In_Week_Number;
    // C++ wrapper type for STEPDay_In_Year_Number
    typedef INTEGER STEPDay_In_Year_Number;
    // C++ wrapper type for STEPDefined_Symbol_Select
    typedef SELECT STEPDefined_Symbol_Select;
    // C++ wrapper type for STEPDerived_Property_Select
    typedef SELECT STEPDerived_Property_Select;
    // C++ wrapper type for STEPDescription_Attribute_Select
    typedef SELECT STEPDescription_Attribute_Select;
    // C++ wrapper type for STEPDescriptive_Measure
    typedef STRING STEPDescriptive_Measure;
    // C++ wrapper type for STEPDimension_Count
    typedef INTEGER STEPDimension_Count;
    // C++ wrapper type for STEPDimension_Extent_Usage
    typedef ENUMERATION STEPDimension_Extent_Usage;
    // C++ wrapper type for STEPDimensional_Characteristic
    typedef SELECT STEPDimensional_Characteristic;
    // C++ wrapper type for STEPDirection_Count_Select
    typedef SELECT STEPDirection_Count_Select;
    // C++ wrapper type for STEPDocument_Identifier_Assigned_Item
    typedef SELECT STEPDocument_Identifier_Assigned_Item;
    // C++ wrapper type for STEPDocument_Reference_Item
    typedef SELECT STEPDocument_Reference_Item;
    // C++ wrapper type for STEPDose_Equivalent_Measure
    typedef REAL STEPDose_Equivalent_Measure;
    // C++ wrapper type for STEPDraughting_Callout_Element
    typedef SELECT STEPDraughting_Callout_Element;
    // C++ wrapper type for STEPDraughting_Model_Item_Association_Select
    typedef SELECT STEPDraughting_Model_Item_Association_Select;
    // C++ wrapper type for STEPDraughting_Model_Item_Select
    typedef SELECT STEPDraughting_Model_Item_Select;
    // C++ wrapper type for STEPDraughting_Titled_Item
    typedef SELECT STEPDraughting_Titled_Item;
    // C++ wrapper type for STEPEffectivity_Item
    typedef SELECT STEPEffectivity_Item;
    // C++ wrapper type for STEPElectric_Charge_Measure
    typedef REAL STEPElectric_Charge_Measure;
    // C++ wrapper type for STEPElectric_Current_Measure
    typedef REAL STEPElectric_Current_Measure;
    // C++ wrapper type for STEPElectric_Potential_Measure
    typedef REAL STEPElectric_Potential_Measure;
    // C++ wrapper type for STEPEnergy_Measure
    typedef REAL STEPEnergy_Measure;
    // C++ wrapper type for STEPEvent_Occurrence_Item
    typedef SELECT STEPEvent_Occurrence_Item;
    // C++ wrapper type for STEPExternal_Identification_Item
    typedef SELECT STEPExternal_Identification_Item;
    // C++ wrapper type for STEPFill_Area_Style_Tile_Shape_Select
    typedef SELECT STEPFill_Area_Style_Tile_Shape_Select;
    // C++ wrapper type for STEPFill_Style_Select
    typedef SELECT STEPFill_Style_Select;
    // C++ wrapper type for STEPFont_Select
    typedef SELECT STEPFont_Select;
    // C++ wrapper type for STEPForce_Measure
    typedef REAL STEPForce_Measure;
    // C++ wrapper type for STEPFounded_Item_Select
    typedef SELECT STEPFounded_Item_Select;
    // C++ wrapper type for STEPFrequency_Measure
    typedef REAL STEPFrequency_Measure;
    // C++ wrapper type for STEPGeneralized_Surface_Select
    typedef SELECT STEPGeneralized_Surface_Select;
    // C++ wrapper type for STEPGeometric_Item_Specific_Usage_Select
    typedef SELECT STEPGeometric_Item_Specific_Usage_Select;
    // C++ wrapper type for STEPGeometric_Set_Select
    typedef SELECT STEPGeometric_Set_Select;
    // C++ wrapper type for STEPGroupable_Item
    typedef SELECT STEPGroupable_Item;
    // C++ wrapper type for STEPHour_In_Day
    typedef INTEGER STEPHour_In_Day;
    // C++ wrapper type for STEPId_Attribute_Select
    typedef SELECT STEPId_Attribute_Select;
    // C++ wrapper type for STEPIdentification_Item
    typedef SELECT STEPIdentification_Item;
    // C++ wrapper type for STEPIdentifier
    typedef STRING STEPIdentifier;
    // C++ wrapper type for STEPIlluminance_Measure
    typedef REAL STEPIlluminance_Measure;
    // C++ wrapper type for STEPInductance_Measure
    typedef REAL STEPInductance_Measure;
    // C++ wrapper type for STEPInstance_Usage_Context_Select
    typedef SELECT STEPInstance_Usage_Context_Select;
    // C++ wrapper type for STEPInvisibility_Context
    typedef SELECT STEPInvisibility_Context;
    // C++ wrapper type for STEPInvisible_Item
    typedef SELECT STEPInvisible_Item;
    // C++ wrapper type for STEPIr_Usage_Item
    typedef SELECT STEPIr_Usage_Item;
    // C++ wrapper type for STEPKnot_Type
    typedef ENUMERATION STEPKnot_Type;
    // C++ wrapper type for STEPLabel
    typedef STRING STEPLabel;
    // C++ wrapper type for STEPLayered_Item
    typedef SELECT STEPLayered_Item;
    // C++ wrapper type for STEPLength_Measure
    typedef REAL STEPLength_Measure;
    // C++ wrapper type for STEPLimit_Condition
    typedef ENUMERATION STEPLimit_Condition;
    // C++ wrapper type for STEPList_Of_Reversible_Topology_Item
    typedef ListOf< SELECT, 0, 0 > STEPList_Of_Reversible_Topology_Item;
    // C++ wrapper type for STEPLuminous_Flux_Measure
    typedef REAL STEPLuminous_Flux_Measure;
    // C++ wrapper type for STEPLuminous_Intensity_Measure
    typedef REAL STEPLuminous_Intensity_Measure;
    // C++ wrapper type for STEPMagnetic_Flux_Density_Measure
    typedef REAL STEPMagnetic_Flux_Density_Measure;
    // C++ wrapper type for STEPMagnetic_Flux_Measure
    typedef REAL STEPMagnetic_Flux_Measure;
    // C++ wrapper type for STEPMarker_Select
    typedef SELECT STEPMarker_Select;
    // C++ wrapper type for STEPMarker_Type
    typedef ENUMERATION STEPMarker_Type;
    // C++ wrapper type for STEPMass_Measure
    typedef REAL STEPMass_Measure;
    // C++ wrapper type for STEPMeasure_Value
    typedef SELECT STEPMeasure_Value;
    // C++ wrapper type for STEPMechanical_Design_And_Draughting_Relationship_Select
    typedef SELECT STEPMechanical_Design_And_Draughting_Relationship_Select;
    // C++ wrapper type for STEPMechanical_Design_Geometric_Presentation_Area_Items
    typedef SELECT STEPMechanical_Design_Geometric_Presentation_Area_Items;
    // C++ wrapper type for STEPMechanical_Design_Geometric_Presentation_Representation_Items
    typedef SELECT STEPMechanical_Design_Geometric_Presentation_Representation_Items;
    // C++ wrapper type for STEPMessage
    typedef STRING STEPMessage;
    // C++ wrapper type for STEPMinute_In_Hour
    typedef INTEGER STEPMinute_In_Hour;
    // C++ wrapper type for STEPMonth_In_Year_Number
    typedef INTEGER STEPMonth_In_Year_Number;
    // C++ wrapper type for STEPMulti_Language_Attribute_Item
    typedef SELECT STEPMulti_Language_Attribute_Item;
    // C++ wrapper type for STEPName_Attribute_Select
    typedef SELECT STEPName_Attribute_Select;
    // C++ wrapper type for STEPName_Item
    typedef SELECT STEPName_Item;
    // C++ wrapper type for STEPNon_Negative_Length_Measure
    typedef REAL STEPNon_Negative_Length_Measure;
    // C++ wrapper type for STEPNonnegative_Integer
    typedef INTEGER STEPNonnegative_Integer;
    // C++ wrapper type for STEPNull_Style
    typedef ENUMERATION STEPNull_Style;
    // C++ wrapper type for STEPNumeric_Measure
    typedef NUMBER STEPNumeric_Measure;
    // C++ wrapper type for STEPOrganization_Item
    typedef SELECT STEPOrganization_Item;
    // C++ wrapper type for STEPOrientation_Basis_Select
    typedef SELECT STEPOrientation_Basis_Select;
    // C++ wrapper type for STEPParameter_Value
    typedef REAL STEPParameter_Value;
    // C++ wrapper type for STEPPcurve_Or_Surface
    typedef SELECT STEPPcurve_Or_Surface;
    // C++ wrapper type for STEPPerson_And_Organization_Item
    typedef SELECT STEPPerson_And_Organization_Item;
    // C++ wrapper type for STEPPerson_Organization_Select
    typedef SELECT STEPPerson_Organization_Select;
    // C++ wrapper type for STEPPicture_Representation_Item_Select
    typedef SELECT STEPPicture_Representation_Item_Select;
    // C++ wrapper type for STEPPlane_Angle_Measure
    typedef REAL STEPPlane_Angle_Measure;
    // C++ wrapper type for STEPPlane_Or_Planar_Box
    typedef SELECT STEPPlane_Or_Planar_Box;
    // C++ wrapper type for STEPPoint_And_Vector_Member
    typedef SELECT STEPPoint_And_Vector_Member;
    // C++ wrapper type for STEPPoint_And_Vector_Members
    typedef ListOf< SELECT, 2, 3 > STEPPoint_And_Vector_Members;
    // C++ wrapper type for STEPPositive_Integer
    typedef INTEGER STEPPositive_Integer;
    // C++ wrapper type for STEPPositive_Length_Measure
    typedef REAL STEPPositive_Length_Measure;
    // C++ wrapper type for STEPPositive_Plane_Angle_Measure
    typedef REAL STEPPositive_Plane_Angle_Measure;
    // C++ wrapper type for STEPPositive_Ratio_Measure
    typedef REAL STEPPositive_Ratio_Measure;
    // C++ wrapper type for STEPPower_Measure
    typedef REAL STEPPower_Measure;
    // C++ wrapper type for STEPPreferred_Surface_Curve_Representation
    typedef ENUMERATION STEPPreferred_Surface_Curve_Representation;
    // C++ wrapper type for STEPPresentable_Text
    typedef STRING STEPPresentable_Text;
    // C++ wrapper type for STEPPresentation_Representation_Select
    typedef SELECT STEPPresentation_Representation_Select;
    // C++ wrapper type for STEPPresentation_Size_Assignment_Select
    typedef SELECT STEPPresentation_Size_Assignment_Select;
    // C++ wrapper type for STEPPresentation_Style_Select
    typedef SELECT STEPPresentation_Style_Select;
    // C++ wrapper type for STEPPresented_Item_Select
    typedef SELECT STEPPresented_Item_Select;
    // C++ wrapper type for STEPPressure_Measure
    typedef REAL STEPPressure_Measure;
    // C++ wrapper type for STEPProduct_Definition_Or_Assembly_Relationship
    typedef SELECT STEPProduct_Definition_Or_Assembly_Relationship;
    // C++ wrapper type for STEPProduct_Definition_Or_Breakdown_Element_Usage
    typedef SELECT STEPProduct_Definition_Or_Breakdown_Element_Usage;
    // C++ wrapper type for STEPProduct_Definition_Or_Product_Definition_Relationship
    typedef SELECT STEPProduct_Definition_Or_Product_Definition_Relationship;
    // C++ wrapper type for STEPProduct_Or_Formation_Or_Definition
    typedef SELECT STEPProduct_Or_Formation_Or_Definition;
    // C++ wrapper type for STEPProject_Item
    typedef SELECT STEPProject_Item;
    // C++ wrapper type for STEPRadioactivity_Measure
    typedef REAL STEPRadioactivity_Measure;
    // C++ wrapper type for STEPRatio_Measure
    typedef REAL STEPRatio_Measure;
    // C++ wrapper type for STEPRendering_Properties_Select
    typedef SELECT STEPRendering_Properties_Select;
    // C++ wrapper type for STEPRepresented_Definition
    typedef SELECT STEPRepresented_Definition;
    // C++ wrapper type for STEPRequirement_Assigned_Item
    typedef SELECT STEPRequirement_Assigned_Item;
    // C++ wrapper type for STEPRequirement_Satisfaction_Item
    typedef SELECT STEPRequirement_Satisfaction_Item;
    // C++ wrapper type for STEPRequirement_Source_Item
    typedef SELECT STEPRequirement_Source_Item;
    // C++ wrapper type for STEPResistance_Measure
    typedef REAL STEPResistance_Measure;
    // C++ wrapper type for STEPReversible_Topology
    typedef SELECT STEPReversible_Topology;
    // C++ wrapper type for STEPReversible_Topology_Item
    typedef SELECT STEPReversible_Topology_Item;
    // C++ wrapper type for STEPRole_Select
    typedef SELECT STEPRole_Select;
    // C++ wrapper type for STEPRule_Superseded_Item
    typedef SELECT STEPRule_Superseded_Item;
    // C++ wrapper type for STEPSecond_In_Minute
    typedef REAL STEPSecond_In_Minute;
    // C++ wrapper type for STEPSecurity_Classification_Item
    typedef SELECT STEPSecurity_Classification_Item;
    // C++ wrapper type for STEPSet_Of_Reversible_Topology_Item
    typedef ListOf< SELECT, 0, 0 > STEPSet_Of_Reversible_Topology_Item;
    // C++ wrapper type for STEPShading_Curve_Method
    typedef ENUMERATION STEPShading_Curve_Method;
    // C++ wrapper type for STEPShading_Surface_Method
    typedef ENUMERATION STEPShading_Surface_Method;
    // C++ wrapper type for STEPShape_Definition
    typedef SELECT STEPShape_Definition;
    // C++ wrapper type for STEPShell
    typedef SELECT STEPShell;
    // C++ wrapper type for STEPSi_Prefix
    typedef ENUMERATION STEPSi_Prefix;
    // C++ wrapper type for STEPSi_Unit_Name
    typedef ENUMERATION STEPSi_Unit_Name;
    // C++ wrapper type for STEPSize_Select
    typedef SELECT STEPSize_Select;
    // C++ wrapper type for STEPSketch_Basis_Select
    typedef SELECT STEPSketch_Basis_Select;
    // C++ wrapper type for STEPSolid_Angle_Measure
    typedef REAL STEPSolid_Angle_Measure;
    // C++ wrapper type for STEPSource
    typedef ENUMERATION STEPSource;
    // C++ wrapper type for STEPSource_Item
    typedef SELECT STEPSource_Item;
    // C++ wrapper type for STEPStart_Request_Item
    typedef SELECT STEPStart_Request_Item;
    // C++ wrapper type for STEPString_Representation_Item_Select
    typedef SELECT STEPString_Representation_Item_Select;
    // C++ wrapper type for STEPStyle_Context_Select
    typedef SELECT STEPStyle_Context_Select;
    // C++ wrapper type for STEPSurface_Side
    typedef ENUMERATION STEPSurface_Side;
    // C++ wrapper type for STEPSurface_Side_Style_Select
    typedef SELECT STEPSurface_Side_Style_Select;
    // C++ wrapper type for STEPSurface_Style_Element_Select
    typedef SELECT STEPSurface_Style_Element_Select;
    // C++ wrapper type for STEPSymbol_Style_Select
    typedef SELECT STEPSymbol_Style_Select;
    // C++ wrapper type for STEPText
    typedef STRING STEPText;
    // C++ wrapper type for STEPText_Alignment
    typedef STRING STEPText_Alignment;
    // C++ wrapper type for STEPText_Delineation
    typedef STRING STEPText_Delineation;
    // C++ wrapper type for STEPText_Or_Character
    typedef SELECT STEPText_Or_Character;
    // C++ wrapper type for STEPText_Path
    typedef ENUMERATION STEPText_Path;
    // C++ wrapper type for STEPText_String_Representation_Item
    typedef SELECT STEPText_String_Representation_Item;
    // C++ wrapper type for STEPThermodynamic_Temperature_Measure
    typedef REAL STEPThermodynamic_Temperature_Measure;
    // C++ wrapper type for STEPTime_Interval_Item
    typedef SELECT STEPTime_Interval_Item;
    // C++ wrapper type for STEPTime_Measure
    typedef REAL STEPTime_Measure;
    // C++ wrapper type for STEPTolerance_Method_Definition
    typedef SELECT STEPTolerance_Method_Definition;
    // C++ wrapper type for STEPTransformation
    typedef SELECT STEPTransformation;
    // C++ wrapper type for STEPTransition_Code
    typedef ENUMERATION STEPTransition_Code;
    // C++ wrapper type for STEPTrim_Condition_Select
    typedef SELECT STEPTrim_Condition_Select;
    // C++ wrapper type for STEPTrim_Intent
    typedef ENUMERATION STEPTrim_Intent;
    // C++ wrapper type for STEPTrimming_Preference
    typedef ENUMERATION STEPTrimming_Preference;
    // C++ wrapper type for STEPTrimming_Select
    typedef SELECT STEPTrimming_Select;
    // C++ wrapper type for STEPU_Direction_Count
    typedef INTEGER STEPU_Direction_Count;
    // C++ wrapper type for STEPUnit
    typedef SELECT STEPUnit;
    // C++ wrapper type for STEPV_Direction_Count
    typedef INTEGER STEPV_Direction_Count;
    // C++ wrapper type for STEPValue_Qualifier
    typedef SELECT STEPValue_Qualifier;
    // C++ wrapper type for STEPVector_Or_Direction
    typedef SELECT STEPVector_Or_Direction;
    // C++ wrapper type for STEPVelocity_Measure
    typedef REAL STEPVelocity_Measure;
    // C++ wrapper type for STEPVolume_Measure
    typedef REAL STEPVolume_Measure;
    // C++ wrapper type for STEPWeek_In_Year_Number
    typedef INTEGER STEPWeek_In_Year_Number;
    // C++ wrapper type for STEPWork_Item
    typedef SELECT STEPWork_Item;
    // C++ wrapper type for STEPYear_Number
    typedef INTEGER STEPYear_Number;


	// ******************************************************************************
	// STEP Entities
	// ******************************************************************************

	typedef NotImplemented STEPMeasure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPAbsorbed_Dose_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPDerived_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPAbsorbed_Dose_Unit; // (not currently used by Assimp)
	struct STEPRepresentation_Item;
	struct STEPRepresentation;
	struct STEPProperty_Definition_Representation;
	typedef NotImplemented STEPProperty_Definition; // (not currently used by Assimp)
	struct STEPAbstract_Variable;
	typedef NotImplemented STEPAcceleration_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPAcceleration_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPAction; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Directive; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Method; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Method_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Method_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Method_Role; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Property; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Property_Representation; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Request_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Request_Solution; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Request_Status; // (not currently used by Assimp)
	typedef NotImplemented STEPAction_Status; // (not currently used by Assimp)
	typedef NotImplemented STEPAddress; // (not currently used by Assimp)
	struct STEPShape_Representation;
	struct STEPAdvanced_Brep_Shape_Representation;
	struct STEPTopological_Representation_Item;
	struct STEPGeometric_Representation_Item;
	struct STEPFace;
	struct STEPFace_Surface;
	struct STEPAdvanced_Face;
	typedef NotImplemented STEPAlternate_Product_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPAmount_Of_Substance_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPNamed_Unit;
	struct STEPAmount_Of_Substance_Unit;
	typedef NotImplemented STEPRepresentation_Item_Relationship; // (not currently used by Assimp)
	struct STEPAngle_Direction_Reference;
	struct STEPDraughting_Callout;
	struct STEPDimension_Curve_Directed_Callout;
	struct STEPAngular_Dimension;
	typedef NotImplemented STEPShape_Aspect_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPDimensional_Location; // (not currently used by Assimp)
	typedef NotImplemented STEPAngular_Location; // (not currently used by Assimp)
	typedef NotImplemented STEPDimensional_Size; // (not currently used by Assimp)
	typedef NotImplemented STEPAngular_Size; // (not currently used by Assimp)
	typedef NotImplemented STEPGeometric_Tolerance; // (not currently used by Assimp)
	typedef NotImplemented STEPGeometric_Tolerance_With_Datum_Reference; // (not currently used by Assimp)
	typedef NotImplemented STEPAngularity_Tolerance; // (not currently used by Assimp)
	struct STEPStyled_Item;
	struct STEPAnnotation_Occurrence;
	struct STEPAnnotation_Curve_Occurrence;
	struct STEPAnnotation_Fill_Area;
	struct STEPAnnotation_Fill_Area_Occurrence;
	typedef NotImplemented STEPAnnotation_Occurrence_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPAnnotation_Occurrence_Associativity; // (not currently used by Assimp)
	struct STEPAnnotation_Plane;
	struct STEPAnnotation_Symbol_Occurrence;
	struct STEPAnnotation_Subfigure_Occurrence;
	struct STEPMapped_Item;
	struct STEPAnnotation_Symbol;
	struct STEPAnnotation_Text;
	struct STEPAnnotation_Text_Character;
	struct STEPAnnotation_Text_Occurrence;
	typedef NotImplemented STEPShape_Aspect; // (not currently used by Assimp)
	typedef NotImplemented STEPDerived_Shape_Aspect; // (not currently used by Assimp)
	typedef NotImplemented STEPApex; // (not currently used by Assimp)
	typedef NotImplemented STEPApplication_Context; // (not currently used by Assimp)
	typedef NotImplemented STEPApplication_Context_Element; // (not currently used by Assimp)
	typedef NotImplemented STEPApplication_Protocol_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Action_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Action_Method_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Action_Request_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApproval_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Approval_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPAttribute_Classification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Attribute_Classification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPCertification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Certification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPClassification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Classification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPContract_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Contract_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPDate_And_Time_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Date_And_Time_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPDate_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Date_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_Reference; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Document_Reference; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_Usage_Constraint_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Document_Usage_Constraint_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPEffectivity_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Effectivity_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPEvent_Occurrence_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Event_Occurrence_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPIdentification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPExternal_Identification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_External_Identification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPGroup_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Group_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Identification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPName_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Name_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPOrganization_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Organization_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPOrganizational_Project_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Organizational_Project_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPPerson_And_Organization_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Person_And_Organization_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPPresented_Item; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Presented_Item; // (not currently used by Assimp)
	typedef NotImplemented STEPSecurity_Classification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Security_Classification_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPTime_Interval_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Time_Interval_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPApplied_Usage_Right; // (not currently used by Assimp)
	typedef NotImplemented STEPApproval; // (not currently used by Assimp)
	typedef NotImplemented STEPApproval_Date_Time; // (not currently used by Assimp)
	typedef NotImplemented STEPApproval_Person_Organization; // (not currently used by Assimp)
	typedef NotImplemented STEPApproval_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPApproval_Role; // (not currently used by Assimp)
	typedef NotImplemented STEPApproval_Status; // (not currently used by Assimp)
	typedef NotImplemented STEPArea_In_Set; // (not currently used by Assimp)
	typedef NotImplemented STEPArea_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPArea_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Usage; // (not currently used by Assimp)
	typedef NotImplemented STEPAssembly_Component_Usage; // (not currently used by Assimp)
	typedef NotImplemented STEPAssembly_Component_Usage_Substitute; // (not currently used by Assimp)
	typedef NotImplemented STEPAssigned_Requirement; // (not currently used by Assimp)
	struct STEPCompound_Representation_Item;
	struct STEPAtomic_Formula;
	typedef NotImplemented STEPFact_Type; // (not currently used by Assimp)
	struct STEPAttribute_Assertion;
	typedef NotImplemented STEPAttribute_Language_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPAttribute_Value_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPAttribute_Value_Role; // (not currently used by Assimp)
	struct STEPVariational_Representation_Item;
	struct STEPAuxiliary_Geometric_Representation_Item;
	struct STEPPlacement;
	struct STEPAxis1_Placement;
	struct STEPAxis2_Placement_2d;
	struct STEPAxis2_Placement_3d;
	struct STEPCurve;
	struct STEPBounded_Curve;
	struct STEPB_Spline_Curve;
	struct STEPB_Spline_Curve_With_Knots;
	struct STEPSurface;
	struct STEPBounded_Surface;
	struct STEPB_Spline_Surface;
	struct STEPB_Spline_Surface_With_Knots;
	typedef NotImplemented STEPProduct_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPRule_Software_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPRule_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPBack_Chaining_Rule; // (not currently used by Assimp)
	struct STEPBack_Chaining_Rule_Body;
	struct STEPColour;
	typedef NotImplemented STEPBackground_Colour; // (not currently used by Assimp)
	struct STEPBeveled_Sheet_Representation;
	struct STEPBezier_Curve;
	struct STEPBezier_Surface;
	typedef NotImplemented STEPGeneric_Expression; // (not currently used by Assimp)
	typedef NotImplemented STEPBinary_Generic_Expression; // (not currently used by Assimp)
	typedef NotImplemented STEPExpression; // (not currently used by Assimp)
	typedef NotImplemented STEPNumeric_Expression; // (not currently used by Assimp)
	typedef NotImplemented STEPBinary_Numeric_Expression; // (not currently used by Assimp)
	struct STEPBinary_Representation_Item;
	struct STEPBlock;
	typedef NotImplemented STEPBoolean_Expression; // (not currently used by Assimp)
	typedef NotImplemented STEPSimple_Generic_Expression; // (not currently used by Assimp)
	typedef NotImplemented STEPGeneric_Literal; // (not currently used by Assimp)
	typedef NotImplemented STEPSimple_Boolean_Expression; // (not currently used by Assimp)
	typedef NotImplemented STEPBoolean_Literal; // (not currently used by Assimp)
	struct STEPBoolean_Representation_Item;
	struct STEPBoolean_Result;
	struct STEPComposite_Curve;
	struct STEPComposite_Curve_On_Surface;
	struct STEPBoundary_Curve;
	struct STEPPcurve;
	struct STEPBounded_Pcurve;
	struct STEPSurface_Curve;
	struct STEPBounded_Surface_Curve;
	struct STEPFounded_Item;
	typedef NotImplemented STEPBox_Domain; // (not currently used by Assimp)
	struct STEPHalf_Space_Solid;
	struct STEPBoxed_Half_Space;
	typedef NotImplemented STEPBreakdown_Context; // (not currently used by Assimp)
	typedef NotImplemented STEPBreakdown_Element_Group_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPGroup; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Element_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPCharacterized_Object; // (not currently used by Assimp)
	typedef NotImplemented STEPBreakdown_Element_Realization; // (not currently used by Assimp)
	typedef NotImplemented STEPBreakdown_Element_Usage; // (not currently used by Assimp)
	typedef NotImplemented STEPBreakdown_Of; // (not currently used by Assimp)
	struct STEPSolid_Model;
	struct STEPManifold_Solid_Brep;
	struct STEPBrep_With_Voids;
	struct STEPBytes_Representation_Item;
	typedef NotImplemented STEPDate; // (not currently used by Assimp)
	typedef NotImplemented STEPCalendar_Date; // (not currently used by Assimp)
	struct STEPCamera_Image;
	struct STEPCamera_Image_3d_With_Scale;
	struct STEPCamera_Model;
	struct STEPCamera_Model_D3;
	struct STEPCamera_Model_D3_Multi_Clipping;
	struct STEPCamera_Model_D3_Multi_Clipping_Intersection;
	struct STEPCamera_Model_D3_Multi_Clipping_Union;
	struct STEPCamera_Model_D3_With_Hlhsr;
	struct STEPCamera_Model_With_Light_Sources;
	struct STEPRepresentation_Map;
	struct STEPCamera_Usage;
	typedef NotImplemented STEPCapacitance_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPCapacitance_Unit; // (not currently used by Assimp)
	struct STEPPoint;
	struct STEPCartesian_Point;
	struct STEPFunctionally_Defined_Transformation;
	struct STEPCartesian_Transformation_Operator;
	struct STEPCartesian_Transformation_Operator_2d;
	struct STEPCartesian_Transformation_Operator_3d;
	typedef NotImplemented STEPCc_Design_Approval; // (not currently used by Assimp)
	typedef NotImplemented STEPCc_Design_Certification; // (not currently used by Assimp)
	typedef NotImplemented STEPCc_Design_Contract; // (not currently used by Assimp)
	typedef NotImplemented STEPCc_Design_Date_And_Time_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPCc_Design_Person_And_Organization_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPCc_Design_Security_Classification; // (not currently used by Assimp)
	typedef NotImplemented STEPCc_Design_Specification_Reference; // (not currently used by Assimp)
	typedef NotImplemented STEPCelsius_Temperature_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPCentre_Of_Symmetry; // (not currently used by Assimp)
	typedef NotImplemented STEPCertification; // (not currently used by Assimp)
	typedef NotImplemented STEPCertification_Type; // (not currently used by Assimp)
	typedef NotImplemented STEPChange; // (not currently used by Assimp)
	typedef NotImplemented STEPChange_Request; // (not currently used by Assimp)
	typedef NotImplemented STEPCharacter_Glyph_Font_Usage; // (not currently used by Assimp)
	typedef NotImplemented STEPCharacter_Glyph_Style_Outline; // (not currently used by Assimp)
	typedef NotImplemented STEPCharacter_Glyph_Style_Stroke; // (not currently used by Assimp)
	struct STEPSymbol_Representation;
	struct STEPGeneric_Character_Glyph_Symbol;
	struct STEPCharacter_Glyph_Symbol;
	struct STEPCharacter_Glyph_Symbol_Outline;
	struct STEPCharacter_Glyph_Symbol_Stroke;
	typedef NotImplemented STEPGeneral_Property; // (not currently used by Assimp)
	typedef NotImplemented STEPCharacteristic_Data_Column_Header; // (not currently used by Assimp)
	typedef NotImplemented STEPGeneral_Property_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPCharacteristic_Data_Column_Header_Link; // (not currently used by Assimp)
	typedef NotImplemented STEPCharacteristic_Data_Table_Header; // (not currently used by Assimp)
	typedef NotImplemented STEPCharacteristic_Data_Table_Header_Decomposition; // (not currently used by Assimp)
	typedef NotImplemented STEPCharacteristic_Type; // (not currently used by Assimp)
	typedef NotImplemented STEPClass; // (not currently used by Assimp)
	typedef NotImplemented STEPCharacterized_Class; // (not currently used by Assimp)
	struct STEPConic;
	struct STEPCircle;
	typedef NotImplemented STEPCircular_Runout_Tolerance; // (not currently used by Assimp)
	typedef NotImplemented STEPClass_By_Extension; // (not currently used by Assimp)
	typedef NotImplemented STEPClass_By_Intension; // (not currently used by Assimp)
	typedef NotImplemented STEPClass_System; // (not currently used by Assimp)
	typedef NotImplemented STEPEffectivity_Context_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPClass_Usage_Effectivity_Context_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPClassification_Role; // (not currently used by Assimp)
	struct STEPConnected_Face_Set;
	struct STEPClosed_Shell;
	typedef NotImplemented STEPCoaxiality_Tolerance; // (not currently used by Assimp)
	struct STEPColour_Specification;
	struct STEPColour_Rgb;
	typedef NotImplemented STEPDatum; // (not currently used by Assimp)
	typedef NotImplemented STEPComposite_Shape_Aspect; // (not currently used by Assimp)
	typedef NotImplemented STEPCommon_Datum; // (not currently used by Assimp)
	typedef NotImplemented STEPComparison_Expression; // (not currently used by Assimp)
	struct STEPComplex_Clause;
	struct STEPComplex_Conjunctive_Clause;
	struct STEPComplex_Disjunctive_Clause;
	struct STEPModified_Solid;
	struct STEPShelled_Solid;
	struct STEPComplex_Shelled_Solid;
	typedef NotImplemented STEPComposite_Assembly_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPComposite_Assembly_Sequence_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPLaminate_Table; // (not currently used by Assimp)
	typedef NotImplemented STEPPart_Laminate_Table; // (not currently used by Assimp)
	typedef NotImplemented STEPComposite_Assembly_Table; // (not currently used by Assimp)
	struct STEPComposite_Curve_Segment;
	typedef NotImplemented STEPMaterial_Designation; // (not currently used by Assimp)
	typedef NotImplemented STEPComposite_Material_Designation; // (not currently used by Assimp)
	struct STEPComposite_Sheet_Representation;
	struct STEPComposite_Text;
	struct STEPComposite_Text_With_Associated_Curves;
	struct STEPComposite_Text_With_Blanking_Box;
	struct STEPComposite_Text_With_Delineation;
	struct STEPComposite_Text_With_Extent;
	struct STEPCompound_Shape_Representation;
	typedef NotImplemented STEPConcentricity_Tolerance; // (not currently used by Assimp)
	typedef NotImplemented STEPConcept_Feature_Operator; // (not currently used by Assimp)
	typedef NotImplemented STEPConcept_Feature_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPConcept_Feature_Relationship_With_Condition; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Concept_Feature; // (not currently used by Assimp)
	typedef NotImplemented STEPConditional_Concept_Feature; // (not currently used by Assimp)
	typedef NotImplemented STEPConductance_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPConductance_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPConfiguration_Item; // (not currently used by Assimp)
	typedef NotImplemented STEPConfigurable_Item; // (not currently used by Assimp)
	typedef NotImplemented STEPConfiguration_Design; // (not currently used by Assimp)
	typedef NotImplemented STEPEffectivity; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Effectivity; // (not currently used by Assimp)
	typedef NotImplemented STEPConfiguration_Effectivity; // (not currently used by Assimp)
	typedef NotImplemented STEPConfiguration_Item_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPConfiguration_Item_Hierarchical_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPConfiguration_Item_Revision_Sequence; // (not currently used by Assimp)
	typedef NotImplemented STEPConfigured_Effectivity_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPConfigured_Effectivity_Context_Assignment; // (not currently used by Assimp)
	struct STEPConical_Stepped_Hole_Transition;
	struct STEPElementary_Surface;
	struct STEPConical_Surface;
	struct STEPConnected_Edge_Set;
	struct STEPConnected_Face_Sub_Set;
	struct STEPConstructive_Geometry_Representation;
	typedef NotImplemented STEPRepresentation_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPConstructive_Geometry_Representation_Relationship; // (not currently used by Assimp)
	struct STEPContact_Ratio_Representation;
	typedef NotImplemented STEPInvisibility; // (not currently used by Assimp)
	typedef NotImplemented STEPContext_Dependent_Invisibility; // (not currently used by Assimp)
	struct STEPOver_Riding_Styled_Item;
	struct STEPContext_Dependent_Over_Riding_Styled_Item;
	typedef NotImplemented STEPContext_Dependent_Shape_Representation; // (not currently used by Assimp)
	struct STEPContext_Dependent_Unit;
	typedef NotImplemented STEPContract; // (not currently used by Assimp)
	typedef NotImplemented STEPContract_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPContract_Type; // (not currently used by Assimp)
	struct STEPConversion_Based_Unit;
	typedef NotImplemented STEPCoordinated_Universal_Time_Offset; // (not currently used by Assimp)
	struct STEPCsg_Shape_Representation;
	struct STEPCsg_Solid;
	struct STEPCurrency;
	typedef NotImplemented STEPCurrency_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPCurve_Bounded_Surface;
	struct STEPCurve_Dimension;
	struct STEPCurve_Replica;
	typedef NotImplemented STEPCurve_Style; // (not currently used by Assimp)
	typedef NotImplemented STEPCurve_Style_Font; // (not currently used by Assimp)
	typedef NotImplemented STEPCurve_Style_Font_And_Scaling; // (not currently used by Assimp)
	typedef NotImplemented STEPCurve_Style_Font_Pattern; // (not currently used by Assimp)
	typedef NotImplemented STEPCurve_Style_Rendering; // (not currently used by Assimp)
	struct STEPCurve_Swept_Solid_Shape_Representation;
	struct STEPCylindrical_Surface;
	typedef NotImplemented STEPCylindricity_Tolerance; // (not currently used by Assimp)
	typedef NotImplemented STEPData_Environment; // (not currently used by Assimp)
	typedef NotImplemented STEPDate_And_Time; // (not currently used by Assimp)
	struct STEPDate_Representation_Item;
	typedef NotImplemented STEPDate_Role; // (not currently used by Assimp)
	struct STEPDate_Time_Representation_Item;
	typedef NotImplemented STEPDate_Time_Role; // (not currently used by Assimp)
	typedef NotImplemented STEPDated_Effectivity; // (not currently used by Assimp)
	typedef NotImplemented STEPDatum_Feature; // (not currently used by Assimp)
	struct STEPDatum_Feature_Callout;
	typedef NotImplemented STEPDatum_Reference; // (not currently used by Assimp)
	typedef NotImplemented STEPDatum_Target; // (not currently used by Assimp)
	struct STEPDatum_Target_Callout;
	struct STEPDefault_Tolerance_Table;
	struct STEPDefault_Tolerance_Table_Cell;
	struct STEPDefined_Symbol;
	struct STEPDefinitional_Representation;
	typedef NotImplemented STEPDefinitional_Representation_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPDefinitional_Representation_Relationship_With_Same_Context; // (not currently used by Assimp)
	struct STEPDegenerate_Pcurve;
	struct STEPToroidal_Surface;
	struct STEPDegenerate_Toroidal_Surface;
	typedef NotImplemented STEPDerived_Unit_Element; // (not currently used by Assimp)
	typedef NotImplemented STEPDescription_Attribute; // (not currently used by Assimp)
	struct STEPDescriptive_Representation_Item;
	typedef NotImplemented STEPProduct_Definition_Context; // (not currently used by Assimp)
	typedef NotImplemented STEPDesign_Context; // (not currently used by Assimp)
	typedef NotImplemented STEPDesign_Make_From_Relationship; // (not currently used by Assimp)
	struct STEPDiameter_Dimension;
	typedef NotImplemented STEPRatio_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPDielectric_Constant_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPDimension_Callout;
	typedef NotImplemented STEPDraughting_Callout_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPDimension_Callout_Component_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPDimension_Callout_Relationship; // (not currently used by Assimp)
	struct STEPDimension_Curve;
	struct STEPTerminator_Symbol;
	struct STEPDimension_Curve_Terminator;
	typedef NotImplemented STEPDimension_Curve_Terminator_To_Projection_Curve_Associativity; // (not currently used by Assimp)
	typedef NotImplemented STEPDimension_Pair; // (not currently used by Assimp)
	typedef NotImplemented STEPDimension_Related_Tolerance_Zone_Element; // (not currently used by Assimp)
	struct STEPText_Literal;
	struct STEPDimension_Text_Associativity;
	typedef NotImplemented STEPDimensional_Characteristic_Representation; // (not currently used by Assimp)
	typedef NotImplemented STEPDimensional_Exponents; // (not currently used by Assimp)
	typedef NotImplemented STEPDimensional_Location_With_Path; // (not currently used by Assimp)
	typedef NotImplemented STEPDimensional_Size_With_Path; // (not currently used by Assimp)
	typedef NotImplemented STEPExecuted_Action; // (not currently used by Assimp)
	typedef NotImplemented STEPDirected_Action; // (not currently used by Assimp)
	typedef NotImplemented STEPDirected_Dimensional_Location; // (not currently used by Assimp)
	struct STEPDirection;
	typedef NotImplemented STEPDocument; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_File; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_Identifier; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_Identifier_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_Product_Association; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_Product_Equivalence; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_Representation_Type; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_Type; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_Usage_Constraint; // (not currently used by Assimp)
	typedef NotImplemented STEPDocument_Usage_Role; // (not currently used by Assimp)
	typedef NotImplemented STEPDose_Equivalent_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPDose_Equivalent_Unit; // (not currently used by Assimp)
	struct STEPDouble_Offset_Shelled_Solid;
	typedef NotImplemented STEPItem_Defined_Transformation; // (not currently used by Assimp)
	typedef NotImplemented STEPTransformation_With_Derived_Angle; // (not currently used by Assimp)
	typedef NotImplemented STEPDraped_Defined_Transformation; // (not currently used by Assimp)
	struct STEPDraughting_Annotation_Occurrence;
	struct STEPDraughting_Elements;
	struct STEPDraughting_Model;
	typedef NotImplemented STEPItem_Identified_Representation_Usage; // (not currently used by Assimp)
	typedef NotImplemented STEPDraughting_Model_Item_Association; // (not currently used by Assimp)
	struct STEPPre_Defined_Item;
	typedef NotImplemented STEPPre_Defined_Colour; // (not currently used by Assimp)
	typedef NotImplemented STEPDraughting_Pre_Defined_Colour; // (not currently used by Assimp)
	typedef NotImplemented STEPPre_Defined_Curve_Font; // (not currently used by Assimp)
	typedef NotImplemented STEPDraughting_Pre_Defined_Curve_Font; // (not currently used by Assimp)
	typedef NotImplemented STEPPre_Defined_Text_Font; // (not currently used by Assimp)
	typedef NotImplemented STEPDraughting_Pre_Defined_Text_Font; // (not currently used by Assimp)
	struct STEPDraughting_Subfigure_Representation;
	struct STEPDraughting_Symbol_Representation;
	struct STEPText_Literal_With_Delineation;
	struct STEPDraughting_Text_Literal_With_Delineation;
	typedef NotImplemented STEPDraughting_Title; // (not currently used by Assimp)
	typedef NotImplemented STEPDrawing_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPPresentation_Set; // (not currently used by Assimp)
	typedef NotImplemented STEPDrawing_Revision; // (not currently used by Assimp)
	typedef NotImplemented STEPDrawing_Revision_Sequence; // (not currently used by Assimp)
	struct STEPPresentation_Representation;
	struct STEPPresentation_Area;
	struct STEPDrawing_Sheet_Revision;
	typedef NotImplemented STEPDrawing_Sheet_Revision_Sequence; // (not currently used by Assimp)
	typedef NotImplemented STEPDrawing_Sheet_Revision_Usage; // (not currently used by Assimp)
	struct STEPEdge;
	struct STEPEdge_Based_Wireframe_Model;
	struct STEPEdge_Based_Wireframe_Shape_Representation;
	struct STEPEdge_Blended_Solid;
	struct STEPEdge_Curve;
	struct STEPPath;
	struct STEPLoop;
	struct STEPEdge_Loop;
	typedef NotImplemented STEPEffectivity_Context_Role; // (not currently used by Assimp)
	typedef NotImplemented STEPEffectivity_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPElectric_Charge_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPElectric_Charge_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPElectric_Current_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPElectric_Current_Unit;
	typedef NotImplemented STEPElectric_Potential_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPElectric_Potential_Unit; // (not currently used by Assimp)
	struct STEPElementary_Brep_Shape_Representation;
	struct STEPEllipse;
	typedef NotImplemented STEPEnergy_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPEnergy_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPEntity_Assertion; // (not currently used by Assimp)
	struct STEPEnum_Reference_Prefix;
	typedef NotImplemented STEPEnvironment; // (not currently used by Assimp)
	struct STEPEvaluated_Characteristic;
	struct STEPEvaluated_Degenerate_Pcurve;
	typedef NotImplemented STEPEvaluation_Product_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPEvent_Occurrence; // (not currently used by Assimp)
	typedef NotImplemented STEPEvent_Occurrence_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPEvent_Occurrence_Role; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Concept_Feature_Category; // (not currently used by Assimp)
	typedef NotImplemented STEPExclusive_Product_Concept_Feature_Category; // (not currently used by Assimp)
	typedef NotImplemented STEPUncertainty_Qualifier; // (not currently used by Assimp)
	typedef NotImplemented STEPStandard_Uncertainty; // (not currently used by Assimp)
	typedef NotImplemented STEPExpanded_Uncertainty; // (not currently used by Assimp)
	typedef NotImplemented STEPExplicit_Procedural_Representation_Item_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPExplicit_Procedural_Geometric_Representation_Item_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPExplicit_Procedural_Representation_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPExplicit_Procedural_Shape_Representation_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPVariable_Semantics; // (not currently used by Assimp)
	struct STEPExpression_Conversion_Based_Unit;
	typedef NotImplemented STEPExtension; // (not currently used by Assimp)
	typedef NotImplemented STEPExtent; // (not currently used by Assimp)
	typedef NotImplemented STEPExternal_Source; // (not currently used by Assimp)
	typedef NotImplemented STEPExternal_Class_Library; // (not currently used by Assimp)
	typedef NotImplemented STEPExternal_Source_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPExternally_Defined_Item; // (not currently used by Assimp)
	typedef NotImplemented STEPExternally_Defined_Class; // (not currently used by Assimp)
	typedef NotImplemented STEPExternally_Defined_Colour; // (not currently used by Assimp)
	struct STEPExternally_Defined_Context_Dependent_Unit;
	struct STEPExternally_Defined_Conversion_Based_Unit;
	struct STEPExternally_Defined_Currency;
	typedef NotImplemented STEPExternally_Defined_Curve_Font; // (not currently used by Assimp)
	typedef NotImplemented STEPExternally_Defined_Dimension_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPExternally_Defined_General_Property; // (not currently used by Assimp)
	struct STEPExternally_Defined_Hatch_Style;
	typedef NotImplemented STEPExternally_Defined_Item_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPPre_Defined_Marker; // (not currently used by Assimp)
	typedef NotImplemented STEPExternally_Defined_Symbol; // (not currently used by Assimp)
	typedef NotImplemented STEPExternally_Defined_Marker; // (not currently used by Assimp)
	struct STEPPicture_Representation_Item;
	struct STEPExternally_Defined_Picture_Representation_Item;
	struct STEPExternally_Defined_Representation_Item;
	struct STEPExternally_Defined_String;
	typedef NotImplemented STEPExternally_Defined_Terminator_Symbol; // (not currently used by Assimp)
	typedef NotImplemented STEPExternally_Defined_Text_Font; // (not currently used by Assimp)
	typedef NotImplemented STEPExternally_Defined_Tile; // (not currently used by Assimp)
	struct STEPExternally_Defined_Tile_Style;
	struct STEPSwept_Area_Solid;
	struct STEPExtruded_Area_Solid;
	struct STEPSwept_Face_Solid;
	struct STEPExtruded_Face_Solid;
	struct STEPExtruded_Face_Solid_With_Trim_Conditions;
	struct STEPExtruded_Face_Solid_With_Draft_Angle;
	struct STEPExtruded_Face_Solid_With_Multiple_Draft_Angles;
	struct STEPFace_Based_Surface_Model;
	struct STEPFace_Bound;
	struct STEPFace_Outer_Bound;
	struct STEPFaceted_Brep;
	struct STEPFaceted_Brep_Shape_Representation;
	struct STEPFill_Area_Style;
	struct STEPFill_Area_Style_Colour;
	struct STEPFill_Area_Style_Hatching;
	struct STEPFill_Area_Style_Tile_Coloured_Region;
	struct STEPFill_Area_Style_Tile_Curve_With_Style;
	struct STEPFill_Area_Style_Tile_Symbol_With_Style;
	struct STEPFill_Area_Style_Tiles;
	typedef NotImplemented STEPShape_Representation_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPFlat_Pattern_Ply_Representation_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPFlatness_Tolerance; // (not currently used by Assimp)
	typedef NotImplemented STEPForce_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPForce_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPForward_Chaining_Rule; // (not currently used by Assimp)
	struct STEPForward_Chaining_Rule_Premise;
	typedef NotImplemented STEPFrequency_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPFrequency_Unit; // (not currently used by Assimp)
	struct STEPFunc;
	typedef NotImplemented STEPFunctional_Breakdown_Context; // (not currently used by Assimp)
	typedef NotImplemented STEPFunctional_Element_Usage; // (not currently used by Assimp)
	typedef NotImplemented STEPGeneral_Material_Property; // (not currently used by Assimp)
	typedef NotImplemented STEPGeneral_Property_Association; // (not currently used by Assimp)
	typedef NotImplemented STEPGeneric_Variable; // (not currently used by Assimp)
	typedef NotImplemented STEPGeometric_Alignment; // (not currently used by Assimp)
	struct STEPGeometric_Set;
	struct STEPGeometric_Curve_Set;
	typedef NotImplemented STEPGeometric_Intersection; // (not currently used by Assimp)
	typedef NotImplemented STEPGeometric_Item_Specific_Usage; // (not currently used by Assimp)
	struct STEPGeometric_Model_Element_Relationship;
	struct STEPRepresentation_Context;
	struct STEPGeometric_Representation_Context;
	typedef NotImplemented STEPGeometric_Tolerance_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPGeometric_Tolerance_With_Defined_Unit; // (not currently used by Assimp)
	struct STEPGeometrical_Tolerance_Callout;
	struct STEPGeometrically_Bounded_2d_Wireframe_Representation;
	struct STEPGeometrically_Bounded_Surface_Shape_Representation;
	struct STEPGeometrically_Bounded_Wireframe_Shape_Representation;
	typedef NotImplemented STEPGlobal_Assignment; // (not currently used by Assimp)
	struct STEPGlobal_Uncertainty_Assigned_Context;
	struct STEPGlobal_Unit_Assigned_Context;
	struct STEPGround_Fact;
	typedef NotImplemented STEPGroup_Relationship; // (not currently used by Assimp)
	struct STEPHardness_Representation;
	struct STEPHidden_Element_Over_Riding_Styled_Item;
	struct STEPHyperbola;
	typedef NotImplemented STEPId_Attribute; // (not currently used by Assimp)
	typedef NotImplemented STEPIdentification_Role; // (not currently used by Assimp)
	typedef NotImplemented STEPIlluminance_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPIlluminance_Unit; // (not currently used by Assimp)
	struct STEPIncluded_Text_Block;
	typedef NotImplemented STEPInclusion_Product_Concept_Feature; // (not currently used by Assimp)
	struct STEPUser_Selected_Elements;
	struct STEPIndirectly_Selected_Elements;
	struct STEPUser_Selected_Shape_Elements;
	struct STEPIndirectly_Selected_Shape_Elements;
	typedef NotImplemented STEPInductance_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPInductance_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPInformation_Right; // (not currently used by Assimp)
	typedef NotImplemented STEPInformation_Usage_Right; // (not currently used by Assimp)
	typedef NotImplemented STEPInstance_Usage_Context_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPShape_Feature_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPInstanced_Feature; // (not currently used by Assimp)
	typedef NotImplemented STEPSimple_Numeric_Expression; // (not currently used by Assimp)
	typedef NotImplemented STEPLiteral_Number; // (not currently used by Assimp)
	typedef NotImplemented STEPInt_Literal; // (not currently used by Assimp)
	struct STEPInteger_Representation_Item;
	struct STEPIntersection_Curve;
	typedef NotImplemented STEPMultiple_Arity_Generic_Expression; // (not currently used by Assimp)
	typedef NotImplemented STEPInterval_Expression; // (not currently used by Assimp)
	struct STEPIso4217_Currency;
	typedef NotImplemented STEPKnown_Source; // (not currently used by Assimp)
	typedef NotImplemented STEPLaid_Defined_Transformation; // (not currently used by Assimp)
	typedef NotImplemented STEPLanguage; // (not currently used by Assimp)
	struct STEPLeader_Curve;
	struct STEPLeader_Directed_Callout;
	struct STEPLeader_Directed_Dimension;
	struct STEPLeader_Terminator;
	typedef NotImplemented STEPLength_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPLength_Unit;
	struct STEPLight_Source;
	struct STEPLight_Source_Ambient;
	struct STEPLight_Source_Directional;
	struct STEPLight_Source_Positional;
	struct STEPLight_Source_Spot;
	typedef NotImplemented STEPLimits_And_Fits; // (not currently used by Assimp)
	struct STEPLine;
	typedef NotImplemented STEPLine_Profile_Tolerance; // (not currently used by Assimp)
	struct STEPLinear_Dimension;
	struct STEPSimple_Clause;
	struct STEPLiteral_Conjunction;
	struct STEPLiteral_Disjunction;
	typedef NotImplemented STEPLocal_Time; // (not currently used by Assimp)
	typedef NotImplemented STEPLogical_Literal; // (not currently used by Assimp)
	struct STEPLogical_Representation_Item;
	typedef NotImplemented STEPLoss_Tangent_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPLot_Effectivity; // (not currently used by Assimp)
	typedef NotImplemented STEPLuminous_Flux_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPLuminous_Flux_Unit;
	typedef NotImplemented STEPLuminous_Intensity_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPLuminous_Intensity_Unit;
	typedef NotImplemented STEPMagnetic_Flux_Density_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPMagnetic_Flux_Density_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPMagnetic_Flux_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPMagnetic_Flux_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPMake_From_Usage_Option; // (not currently used by Assimp)
	struct STEPManifold_Subsurface_Shape_Representation;
	struct STEPManifold_Surface_Shape_Representation;
	typedef NotImplemented STEPMass_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPMass_Unit;
	typedef NotImplemented STEPMaterial_Designation_Characterization; // (not currently used by Assimp)
	typedef NotImplemented STEPMaterial_Property; // (not currently used by Assimp)
	typedef NotImplemented STEPMaterial_Property_Representation; // (not currently used by Assimp)
	typedef NotImplemented STEPMeasure_Qualification; // (not currently used by Assimp)
	struct STEPMeasure_Representation_Item;
	typedef NotImplemented STEPProduct_Context; // (not currently used by Assimp)
	typedef NotImplemented STEPMechanical_Context; // (not currently used by Assimp)
	typedef NotImplemented STEPMechanical_Design_And_Draughting_Relationship; // (not currently used by Assimp)
	struct STEPMechanical_Design_Geometric_Presentation_Area;
	struct STEPMechanical_Design_Geometric_Presentation_Representation;
	struct STEPMechanical_Design_Presentation_Representation_With_Draughting;
	struct STEPMechanical_Design_Shaded_Presentation_Area;
	struct STEPMechanical_Design_Shaded_Presentation_Representation;
	struct STEPMin_And_Major_Ply_Orientation_Basis;
	typedef NotImplemented STEPModified_Geometric_Tolerance; // (not currently used by Assimp)
	struct STEPModified_Solid_With_Placed_Configuration;
	struct STEPMoments_Of_Inertia_Representation;
	typedef NotImplemented STEPMulti_Language_Attribute_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPMultiple_Arity_Boolean_Expression; // (not currently used by Assimp)
	typedef NotImplemented STEPMultiple_Arity_Numeric_Expression; // (not currently used by Assimp)
	typedef NotImplemented STEPName_Attribute; // (not currently used by Assimp)
	typedef NotImplemented STEPNext_Assembly_Usage_Occurrence; // (not currently used by Assimp)
	struct STEPNon_Manifold_Surface_Shape_Representation;
	struct STEPNull_Representation_Item;
	typedef NotImplemented STEPObject_Role; // (not currently used by Assimp)
	struct STEPOffset_Curve_2d;
	struct STEPOffset_Curve_3d;
	struct STEPOffset_Surface;
	struct STEPOne_Direction_Repeat_Factor;
	struct STEPOpen_Shell;
	typedef NotImplemented STEPOrdinal_Date; // (not currently used by Assimp)
	struct STEPProjection_Directed_Callout;
	struct STEPOrdinate_Dimension;
	typedef NotImplemented STEPOrganization; // (not currently used by Assimp)
	typedef NotImplemented STEPOrganization_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPOrganization_Role; // (not currently used by Assimp)
	typedef NotImplemented STEPOrganizational_Address; // (not currently used by Assimp)
	typedef NotImplemented STEPOrganizational_Project; // (not currently used by Assimp)
	typedef NotImplemented STEPOrganizational_Project_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPOrganizational_Project_Role; // (not currently used by Assimp)
	struct STEPOriented_Closed_Shell;
	struct STEPOriented_Edge;
	struct STEPOriented_Face;
	struct STEPOriented_Open_Shell;
	struct STEPOriented_Path;
	struct STEPOriented_Surface;
	struct STEPOuter_Boundary_Curve;
	typedef NotImplemented STEPPackage_Product_Concept_Feature; // (not currently used by Assimp)
	struct STEPParabola;
	typedef NotImplemented STEPParallel_Offset; // (not currently used by Assimp)
	typedef NotImplemented STEPParallelism_Tolerance; // (not currently used by Assimp)
	struct STEPParametric_Representation_Context;
	typedef NotImplemented STEPPartial_Document_With_Structured_Text_Representation_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPPercentage_Laminate_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPZone_Structural_Makeup; // (not currently used by Assimp)
	typedef NotImplemented STEPPercentage_Laminate_Table; // (not currently used by Assimp)
	typedef NotImplemented STEPPercentage_Ply_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPPerpendicular_To; // (not currently used by Assimp)
	typedef NotImplemented STEPPerpendicularity_Tolerance; // (not currently used by Assimp)
	typedef NotImplemented STEPPerson; // (not currently used by Assimp)
	typedef NotImplemented STEPPerson_And_Organization; // (not currently used by Assimp)
	typedef NotImplemented STEPPersonal_Address; // (not currently used by Assimp)
	typedef NotImplemented STEPPerson_And_Organization_Address; // (not currently used by Assimp)
	typedef NotImplemented STEPPerson_And_Organization_Role; // (not currently used by Assimp)
	typedef NotImplemented STEPPhysical_Breakdown_Context; // (not currently used by Assimp)
	typedef NotImplemented STEPPhysical_Element_Usage; // (not currently used by Assimp)
	struct STEPPresentation_View;
	struct STEPPicture_Representation;
	typedef NotImplemented STEPPlaced_Datum_Target_Feature; // (not currently used by Assimp)
	typedef NotImplemented STEPPlaced_Feature; // (not currently used by Assimp)
	struct STEPPlanar_Extent;
	struct STEPPlanar_Box;
	struct STEPPlane;
	typedef NotImplemented STEPPlane_Angle_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPPlane_Angle_Unit;
	typedef NotImplemented STEPPlus_Minus_Tolerance; // (not currently used by Assimp)
	typedef NotImplemented STEPPly_Laminate_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPPly_Laminate_Sequence_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPPly_Laminate_Table; // (not currently used by Assimp)
	struct STEPPoint_And_Vector;
	struct STEPPoint_On_Curve;
	struct STEPPoint_On_Surface;
	struct STEPPoint_Path;
	struct STEPPoint_Replica;
	typedef NotImplemented STEPPoint_Style; // (not currently used by Assimp)
	typedef NotImplemented STEPPolar_Complex_Number_Literal; // (not currently used by Assimp)
	struct STEPPoly_Loop;
	struct STEPPolyline;
	typedef NotImplemented STEPPosition_Tolerance; // (not currently used by Assimp)
	struct STEPPositioned_Sketch;
	typedef NotImplemented STEPPower_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPPower_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPPre_Defined_Symbol; // (not currently used by Assimp)
	typedef NotImplemented STEPPre_Defined_Dimension_Symbol; // (not currently used by Assimp)
	typedef NotImplemented STEPPre_Defined_Geometrical_Tolerance_Symbol; // (not currently used by Assimp)
	typedef NotImplemented STEPPre_Defined_Point_Marker_Symbol; // (not currently used by Assimp)
	typedef NotImplemented STEPPre_Defined_Surface_Condition_Symbol; // (not currently used by Assimp)
	struct STEPPre_Defined_Surface_Side_Style;
	typedef NotImplemented STEPPre_Defined_Terminator_Symbol; // (not currently used by Assimp)
	typedef NotImplemented STEPPre_Defined_Tile; // (not currently used by Assimp)
	typedef NotImplemented STEPPrecision_Qualifier; // (not currently used by Assimp)
	struct STEPPredefined_Picture_Representation_Item;
	typedef NotImplemented STEPPresentation_Layer_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPPresentation_Size; // (not currently used by Assimp)
	struct STEPPresentation_Style_Assignment;
	struct STEPPresentation_Style_By_Context;
	typedef NotImplemented STEPPresented_Item_Representation; // (not currently used by Assimp)
	typedef NotImplemented STEPPressure_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPPressure_Unit; // (not currently used by Assimp)
	struct STEPProcedural_Representation;
	struct STEPProcedural_Representation_Sequence;
	struct STEPProcedural_Shape_Representation;
	struct STEPProcedural_Shape_Representation_Sequence;
	typedef NotImplemented STEPProduct; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Category; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Concept; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Class; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Concept_Context; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Concept_Feature_Association; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Concept_Feature_Category_Usage; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Concept_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Context_Association; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Context_Role; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Formation; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Formation_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Formation_With_Specified_Source; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Group_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Occurrence_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Shape; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_Substitute; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Definition_With_Associated_Documents; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Identification; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Material_Composition_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Related_Product_Category; // (not currently used by Assimp)
	typedef NotImplemented STEPProduct_Specification; // (not currently used by Assimp)
	typedef NotImplemented STEPTolerance_Zone_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPProjected_Zone_Definition; // (not currently used by Assimp)
	struct STEPProjection_Curve;
	typedef NotImplemented STEPPromissory_Usage_Occurrence; // (not currently used by Assimp)
	typedef NotImplemented STEPProperty_Definition_Relationship; // (not currently used by Assimp)
	struct STEPQualified_Representation_Item;
	typedef NotImplemented STEPQualitative_Uncertainty; // (not currently used by Assimp)
	typedef NotImplemented STEPQuantified_Assembly_Component_Usage; // (not currently used by Assimp)
	struct STEPQuasi_Uniform_Curve;
	struct STEPQuasi_Uniform_Surface;
	typedef NotImplemented STEPRadioactivity_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPRadioactivity_Unit; // (not currently used by Assimp)
	struct STEPRadius_Dimension;
	struct STEPRange_Characteristic;
	struct STEPRatio_Unit;
	struct STEPRational_B_Spline_Curve;
	struct STEPRational_B_Spline_Surface;
	typedef NotImplemented STEPSlash_Expression; // (not currently used by Assimp)
	struct STEPRational_Representation_Item;
	typedef NotImplemented STEPReal_Literal; // (not currently used by Assimp)
	struct STEPReal_Representation_Item;
	struct STEPRectangular_Composite_Surface;
	struct STEPRectangular_Trimmed_Surface;
	typedef NotImplemented STEPReferenced_Modified_Datum; // (not currently used by Assimp)
	typedef NotImplemented STEPRelative_Event_Occurrence; // (not currently used by Assimp)
	struct STEPRep_Item_Group;
	struct STEPReparametrised_Composite_Curve_Segment;
	typedef NotImplemented STEPRepresentation_Relationship_With_Transformation; // (not currently used by Assimp)
	typedef NotImplemented STEPRequirement_Assigned_Object; // (not currently used by Assimp)
	typedef NotImplemented STEPRequirement_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPRequirement_Source; // (not currently used by Assimp)
	typedef NotImplemented STEPRequirement_View_Definition_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPResistance_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPResistance_Unit; // (not currently used by Assimp)
	struct STEPRevolved_Area_Solid;
	struct STEPRevolved_Face_Solid;
	struct STEPRevolved_Face_Solid_With_Trim_Conditions;
	struct STEPRight_Angular_Wedge;
	struct STEPRight_Circular_Cone;
	struct STEPRight_Circular_Cylinder;
	typedef NotImplemented STEPRight_To_Usage_Association; // (not currently used by Assimp)
	typedef NotImplemented STEPRole_Association; // (not currently used by Assimp)
	typedef NotImplemented STEPRoundness_Tolerance; // (not currently used by Assimp)
	struct STEPRow_Representation_Item;
	struct STEPRow_Value;
	struct STEPRow_Variable;
	typedef NotImplemented STEPRule_Action; // (not currently used by Assimp)
	struct STEPRule_Condition;
	typedef NotImplemented STEPRule_Set; // (not currently used by Assimp)
	typedef NotImplemented STEPRule_Set_Group; // (not currently used by Assimp)
	typedef NotImplemented STEPRule_Superseded_Assignment; // (not currently used by Assimp)
	typedef NotImplemented STEPRule_Supersedence; // (not currently used by Assimp)
	struct STEPSurface_Curve_Swept_Area_Solid;
	struct STEPRuled_Surface_Swept_Area_Solid;
	typedef NotImplemented STEPRunout_Zone_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPRunout_Zone_Orientation; // (not currently used by Assimp)
	typedef NotImplemented STEPRunout_Zone_Orientation_Reference_Direction; // (not currently used by Assimp)
	typedef NotImplemented STEPSatisfied_Requirement; // (not currently used by Assimp)
	typedef NotImplemented STEPSatisfies_Requirement; // (not currently used by Assimp)
	typedef NotImplemented STEPSatisfying_Item; // (not currently used by Assimp)
	struct STEPScalar_Variable;
	typedef NotImplemented STEPScattering_Parameter; // (not currently used by Assimp)
	struct STEPSculptured_Solid;
	struct STEPSeam_Curve;
	typedef NotImplemented STEPSecurity_Classification; // (not currently used by Assimp)
	typedef NotImplemented STEPSecurity_Classification_Level; // (not currently used by Assimp)
	typedef NotImplemented STEPSerial_Numbered_Effectivity; // (not currently used by Assimp)
	typedef NotImplemented STEPShape_Aspect_Associativity; // (not currently used by Assimp)
	typedef NotImplemented STEPShape_Aspect_Deriving_Relationship; // (not currently used by Assimp)
	struct STEPShape_Definition_Representation;
	struct STEPShape_Dimension_Representation;
	struct STEPShape_Representation_With_Parameters;
	struct STEPShell_Based_Surface_Model;
	struct STEPShell_Based_Wireframe_Model;
	struct STEPShell_Based_Wireframe_Shape_Representation;
	struct STEPSi_Unit;
	struct STEPSi_Absorbed_Dose_Unit;
	struct STEPSi_Capacitance_Unit;
	struct STEPSi_Conductance_Unit;
	struct STEPSi_Dose_Equivalent_Unit;
	struct STEPSi_Electric_Charge_Unit;
	struct STEPSi_Electric_Potential_Unit;
	struct STEPSi_Energy_Unit;
	struct STEPSi_Force_Unit;
	struct STEPSi_Frequency_Unit;
	struct STEPSi_Illuminance_Unit;
	struct STEPSi_Inductance_Unit;
	struct STEPSi_Magnetic_Flux_Density_Unit;
	struct STEPSi_Magnetic_Flux_Unit;
	struct STEPSi_Power_Unit;
	struct STEPSi_Pressure_Unit;
	struct STEPSi_Radioactivity_Unit;
	struct STEPSi_Resistance_Unit;
	typedef NotImplemented STEPSmeared_Material_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPSolid_Angle_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPSolid_Angle_Unit;
	typedef NotImplemented STEPSolid_Curve_Font; // (not currently used by Assimp)
	struct STEPSolid_Replica;
	struct STEPSolid_With_Chamfered_Edges;
	struct STEPSolid_With_Angle_Based_Chamfer;
	struct STEPSolid_With_Shape_Element_Pattern;
	struct STEPSolid_With_Circular_Pattern;
	struct STEPSolid_With_Depression;
	struct STEPSolid_With_Pocket;
	struct STEPSolid_With_Circular_Pocket;
	struct STEPSolid_With_Protrusion;
	struct STEPSolid_With_Circular_Protrusion;
	struct STEPSolid_With_Hole;
	struct STEPSolid_With_Stepped_Round_Hole;
	struct STEPSolid_With_Conical_Bottom_Round_Hole;
	struct STEPSolid_With_Constant_Radius_Edge_Blend;
	struct STEPSolid_With_Slot;
	struct STEPSolid_With_Curved_Slot;
	struct STEPSolid_With_Double_Offset_Chamfer;
	struct STEPSolid_With_Flat_Bottom_Round_Hole;
	struct STEPSolid_With_General_Pocket;
	struct STEPSolid_With_General_Protrusion;
	struct STEPSolid_With_Groove;
	struct STEPSolid_With_Incomplete_Circular_Pattern;
	struct STEPSolid_With_Rectangular_Pattern;
	struct STEPSolid_With_Incomplete_Rectangular_Pattern;
	struct STEPSolid_With_Rectangular_Pocket;
	struct STEPSolid_With_Rectangular_Protrusion;
	struct STEPSolid_With_Single_Offset_Chamfer;
	struct STEPSolid_With_Spherical_Bottom_Round_Hole;
	struct STEPSolid_With_Stepped_Round_Hole_And_Conical_Transitions;
	struct STEPSolid_With_Straight_Slot;
	struct STEPSolid_With_Tee_Section_Slot;
	struct STEPSolid_With_Through_Depression;
	struct STEPSolid_With_Trapezoidal_Section_Slot;
	struct STEPTrack_Blended_Solid;
	struct STEPSolid_With_Variable_Radius_Edge_Blend;
	typedef NotImplemented STEPSource_For_Requirement; // (not currently used by Assimp)
	typedef NotImplemented STEPSourced_Requirement; // (not currently used by Assimp)
	typedef NotImplemented STEPSpecification_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPSpecified_Higher_Usage_Occurrence; // (not currently used by Assimp)
	struct STEPSphere;
	struct STEPSpherical_Surface;
	typedef NotImplemented STEPStart_Request; // (not currently used by Assimp)
	typedef NotImplemented STEPStart_Work; // (not currently used by Assimp)
	typedef NotImplemented STEPStraightness_Tolerance; // (not currently used by Assimp)
	struct STEPStructured_Dimension_Callout;
	struct STEPStructured_Text_Composition;
	struct STEPStructured_Text_Representation;
	struct STEPSubedge;
	struct STEPSubface;
	typedef NotImplemented STEPSupplied_Part_Relationship; // (not currently used by Assimp)
	struct STEPSurface_Condition_Callout;
	struct STEPSwept_Surface;
	struct STEPSurface_Of_Linear_Extrusion;
	struct STEPSurface_Of_Revolution;
	typedef NotImplemented STEPSurface_Patch; // (not currently used by Assimp)
	typedef NotImplemented STEPSurface_Profile_Tolerance; // (not currently used by Assimp)
	typedef NotImplemented STEPSurface_Rendering_Properties; // (not currently used by Assimp)
	struct STEPSurface_Replica;
	struct STEPSurface_Side_Style;
	typedef NotImplemented STEPSurface_Style_Boundary; // (not currently used by Assimp)
	typedef NotImplemented STEPSurface_Style_Control_Grid; // (not currently used by Assimp)
	struct STEPSurface_Style_Fill_Area;
	typedef NotImplemented STEPSurface_Style_Parameter_Line; // (not currently used by Assimp)
	typedef NotImplemented STEPSurface_Style_Reflectance_Ambient; // (not currently used by Assimp)
	typedef NotImplemented STEPSurface_Style_Reflectance_Ambient_Diffuse; // (not currently used by Assimp)
	typedef NotImplemented STEPSurface_Style_Reflectance_Ambient_Diffuse_Specular; // (not currently used by Assimp)
	typedef NotImplemented STEPSurface_Style_Rendering; // (not currently used by Assimp)
	typedef NotImplemented STEPSurface_Style_Rendering_With_Properties; // (not currently used by Assimp)
	typedef NotImplemented STEPSurface_Style_Segmentation_Curve; // (not currently used by Assimp)
	typedef NotImplemented STEPSurface_Style_Silhouette; // (not currently used by Assimp)
	typedef NotImplemented STEPSurface_Style_Transparent; // (not currently used by Assimp)
	struct STEPSurface_Style_Usage;
	struct STEPSurface_Texture_Representation;
	struct STEPSurfaced_Open_Shell;
	struct STEPSwept_Disk_Solid;
	struct STEPSymbol;
	typedef NotImplemented STEPSymbol_Colour; // (not currently used by Assimp)
	struct STEPSymbol_Representation_Map;
	typedef NotImplemented STEPSymbol_Style; // (not currently used by Assimp)
	struct STEPSymbol_Target;
	typedef NotImplemented STEPSymmetric_Shape_Aspect; // (not currently used by Assimp)
	typedef NotImplemented STEPSymmetry_Tolerance; // (not currently used by Assimp)
	struct STEPTable_Representation_Item;
	struct STEPTactile_Appearance_Representation;
	struct STEPTagged_Text_Format;
	struct STEPTagged_Text_Item;
	typedef NotImplemented STEPTangent; // (not currently used by Assimp)
	typedef NotImplemented STEPText_Font; // (not currently used by Assimp)
	typedef NotImplemented STEPText_Font_Family; // (not currently used by Assimp)
	typedef NotImplemented STEPText_Font_In_Family; // (not currently used by Assimp)
	struct STEPText_Literal_With_Associated_Curves;
	struct STEPText_Literal_With_Blanking_Box;
	struct STEPText_Literal_With_Extent;
	struct STEPText_String_Representation;
	typedef NotImplemented STEPText_Style; // (not currently used by Assimp)
	typedef NotImplemented STEPText_Style_For_Defined_Font; // (not currently used by Assimp)
	typedef NotImplemented STEPText_Style_With_Box_Characteristics; // (not currently used by Assimp)
	typedef NotImplemented STEPText_Style_With_Mirror; // (not currently used by Assimp)
	typedef NotImplemented STEPText_Style_With_Spacing; // (not currently used by Assimp)
	typedef NotImplemented STEPThermal_Resistance_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPThermal_Resistance_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPThermodynamic_Temperature_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPThermodynamic_Temperature_Unit;
	struct STEPThickened_Face_Solid;
	typedef NotImplemented STEPThickness_Laminate_Definition; // (not currently used by Assimp)
	typedef NotImplemented STEPThickness_Laminate_Table; // (not currently used by Assimp)
	typedef NotImplemented STEPTime_Interval; // (not currently used by Assimp)
	typedef NotImplemented STEPTime_Interval_Based_Effectivity; // (not currently used by Assimp)
	typedef NotImplemented STEPTime_Interval_Relationship; // (not currently used by Assimp)
	typedef NotImplemented STEPTime_Interval_Role; // (not currently used by Assimp)
	typedef NotImplemented STEPTime_Interval_With_Bounds; // (not currently used by Assimp)
	typedef NotImplemented STEPTime_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPTime_Unit;
	typedef NotImplemented STEPTolerance_Value; // (not currently used by Assimp)
	typedef NotImplemented STEPTolerance_Zone; // (not currently used by Assimp)
	typedef NotImplemented STEPTolerance_Zone_Form; // (not currently used by Assimp)
	struct STEPTorus;
	typedef NotImplemented STEPTotal_Runout_Tolerance; // (not currently used by Assimp)
	struct STEPTrack_Blended_Solid_With_End_Conditions;
	struct STEPTrimmed_Curve;
	struct STEPTwo_Direction_Repeat_Factor;
	typedef NotImplemented STEPType_Qualifier; // (not currently used by Assimp)
	typedef NotImplemented STEPUnary_Generic_Expression; // (not currently used by Assimp)
	typedef NotImplemented STEPUnary_Numeric_Expression; // (not currently used by Assimp)
	struct STEPUncertainty_Assigned_Representation;
	typedef NotImplemented STEPUncertainty_Measure_With_Unit; // (not currently used by Assimp)
	struct STEPUniform_Curve;
	struct STEPUniform_Resource_Identifier;
	struct STEPUniform_Surface;
	typedef NotImplemented STEPUsage_Association; // (not currently used by Assimp)
	struct STEPUser_Defined_Curve_Font;
	struct STEPUser_Defined_Marker;
	struct STEPUser_Defined_Terminator_Symbol;
	struct STEPValue_Range;
	struct STEPValue_Representation_Item;
	struct STEPVector;
	typedef NotImplemented STEPVector_Style; // (not currently used by Assimp)
	typedef NotImplemented STEPVelocity_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPVelocity_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPVersioned_Action_Request; // (not currently used by Assimp)
	struct STEPVertex;
	struct STEPVertex_Loop;
	struct STEPVertex_Point;
	struct STEPVertex_Shell;
	typedef NotImplemented STEPView_Volume; // (not currently used by Assimp)
	struct STEPVisual_Appearance_Representation;
	typedef NotImplemented STEPVolume_Measure_With_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPVolume_Unit; // (not currently used by Assimp)
	typedef NotImplemented STEPWeek_Of_Year_And_Day_Date; // (not currently used by Assimp)
	struct STEPWire_Shell;
	typedef NotImplemented STEPYear_Month; // (not currently used by Assimp)



    // C++ wrapper for STEPRepresentation_Item
    struct STEPRepresentation_Item :  ObjectHelper<STEPRepresentation_Item,1> { STEPRepresentation_Item() : Object("STEPRepresentation_Item") {}
		STEPLabel::Out Name;
    };

    // C++ wrapper for STEPRepresentation
    struct STEPRepresentation :  ObjectHelper<STEPRepresentation,3> { STEPRepresentation() : Object("STEPRepresentation") {}
		STEPLabel::Out Name;
		ListOf< Lazy< STEPRepresentation_Item >, 1, 0 > Items;
		Lazy< STEPRepresentation_Context > ContextOfItems;
    };

    // C++ wrapper for STEPProperty_Definition_Representation
    struct STEPProperty_Definition_Representation :  ObjectHelper<STEPProperty_Definition_Representation,2> { STEPProperty_Definition_Representation() : Object("STEPProperty_Definition_Representation") {}
		STEPRepresented_Definition::Out Definition;
		Lazy< STEPRepresentation > UsedRepresentation;
    };

    // C++ wrapper for STEPAbstract_Variable
    struct STEPAbstract_Variable : STEPProperty_Definition, STEPProperty_Definition_Representation, STEPRepresentation, STEPRepresentation_Item, ObjectHelper<STEPAbstract_Variable,0> { STEPAbstract_Variable() : Object("STEPAbstract_Variable") {}

    };

    // C++ wrapper for STEPShape_Representation
    struct STEPShape_Representation : STEPRepresentation, ObjectHelper<STEPShape_Representation,0> { STEPShape_Representation() : Object("STEPShape_Representation") {}

    };

    // C++ wrapper for STEPAdvanced_Brep_Shape_Representation
    struct STEPAdvanced_Brep_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPAdvanced_Brep_Shape_Representation,0> { STEPAdvanced_Brep_Shape_Representation() : Object("STEPAdvanced_Brep_Shape_Representation") {}

    };

    // C++ wrapper for STEPTopological_Representation_Item
    struct STEPTopological_Representation_Item : STEPRepresentation_Item, ObjectHelper<STEPTopological_Representation_Item,0> { STEPTopological_Representation_Item() : Object("STEPTopological_Representation_Item") {}

    };

    // C++ wrapper for STEPGeometric_Representation_Item
    struct STEPGeometric_Representation_Item : STEPRepresentation_Item, ObjectHelper<STEPGeometric_Representation_Item,0> { STEPGeometric_Representation_Item() : Object("STEPGeometric_Representation_Item") {}

    };

    // C++ wrapper for STEPFace
    struct STEPFace : STEPTopological_Representation_Item, ObjectHelper<STEPFace,1> { STEPFace() : Object("STEPFace") {}
		ListOf< Lazy< STEPFace_Bound >, 1, 0 > Bounds;
    };

    // C++ wrapper for STEPFace_Surface
    struct STEPFace_Surface : STEPFace, STEPGeometric_Representation_Item, ObjectHelper<STEPFace_Surface,2> { STEPFace_Surface() : Object("STEPFace_Surface") {}
		Lazy< STEPSurface > FaceGeometry;
		BOOLEAN::Out SameSense;
    };

    // C++ wrapper for STEPAdvanced_Face
    struct STEPAdvanced_Face : STEPFace_Surface, ObjectHelper<STEPAdvanced_Face,0> { STEPAdvanced_Face() : Object("STEPAdvanced_Face") {}

    };

    // C++ wrapper for STEPNamed_Unit
    struct STEPNamed_Unit :  ObjectHelper<STEPNamed_Unit,1> { STEPNamed_Unit() : Object("STEPNamed_Unit") {}
		Lazy< NotImplemented > Dimensions;
    };

    // C++ wrapper for STEPAmount_Of_Substance_Unit
    struct STEPAmount_Of_Substance_Unit : STEPNamed_Unit, ObjectHelper<STEPAmount_Of_Substance_Unit,0> { STEPAmount_Of_Substance_Unit() : Object("STEPAmount_Of_Substance_Unit") {}

    };

    // C++ wrapper for STEPAngle_Direction_Reference
    struct STEPAngle_Direction_Reference : STEPRepresentation_Item_Relationship, STEPGeometric_Representation_Item, ObjectHelper<STEPAngle_Direction_Reference,0> { STEPAngle_Direction_Reference() : Object("STEPAngle_Direction_Reference") {}

    };

    // C++ wrapper for STEPDraughting_Callout
    struct STEPDraughting_Callout : STEPGeometric_Representation_Item, ObjectHelper<STEPDraughting_Callout,1> { STEPDraughting_Callout() : Object("STEPDraughting_Callout") {}
		ListOf< STEPDraughting_Callout_Element, 1, 0 >::Out Contents;
    };

    // C++ wrapper for STEPDimension_Curve_Directed_Callout
    struct STEPDimension_Curve_Directed_Callout : STEPDraughting_Callout, ObjectHelper<STEPDimension_Curve_Directed_Callout,0> { STEPDimension_Curve_Directed_Callout() : Object("STEPDimension_Curve_Directed_Callout") {}

    };

    // C++ wrapper for STEPAngular_Dimension
    struct STEPAngular_Dimension : STEPDimension_Curve_Directed_Callout, ObjectHelper<STEPAngular_Dimension,0> { STEPAngular_Dimension() : Object("STEPAngular_Dimension") {}

    };

    // C++ wrapper for STEPStyled_Item
    struct STEPStyled_Item : STEPRepresentation_Item, ObjectHelper<STEPStyled_Item,2> { STEPStyled_Item() : Object("STEPStyled_Item") {}
		ListOf< Lazy< STEPPresentation_Style_Assignment >, 1, 0 > Styles;
		Lazy< STEPRepresentation_Item > Item;
    };

    // C++ wrapper for STEPAnnotation_Occurrence
    struct STEPAnnotation_Occurrence : STEPStyled_Item, ObjectHelper<STEPAnnotation_Occurrence,0> { STEPAnnotation_Occurrence() : Object("STEPAnnotation_Occurrence") {}

    };

    // C++ wrapper for STEPAnnotation_Curve_Occurrence
    struct STEPAnnotation_Curve_Occurrence : STEPAnnotation_Occurrence, ObjectHelper<STEPAnnotation_Curve_Occurrence,0> { STEPAnnotation_Curve_Occurrence() : Object("STEPAnnotation_Curve_Occurrence") {}

    };

    // C++ wrapper for STEPAnnotation_Fill_Area
    struct STEPAnnotation_Fill_Area : STEPGeometric_Representation_Item, ObjectHelper<STEPAnnotation_Fill_Area,1> { STEPAnnotation_Fill_Area() : Object("STEPAnnotation_Fill_Area") {}
		ListOf< Lazy< STEPCurve >, 1, 0 > Boundaries;
    };

    // C++ wrapper for STEPAnnotation_Fill_Area_Occurrence
    struct STEPAnnotation_Fill_Area_Occurrence : STEPAnnotation_Occurrence, ObjectHelper<STEPAnnotation_Fill_Area_Occurrence,1> { STEPAnnotation_Fill_Area_Occurrence() : Object("STEPAnnotation_Fill_Area_Occurrence") {}
		Lazy< STEPPoint > FillStyleTarget;
    };

    // C++ wrapper for STEPAnnotation_Plane
    struct STEPAnnotation_Plane : STEPAnnotation_Occurrence, STEPGeometric_Representation_Item, ObjectHelper<STEPAnnotation_Plane,1> { STEPAnnotation_Plane() : Object("STEPAnnotation_Plane") {}
		Maybe< ListOf< STEPAnnotation_Plane_Element, 1, 0 >::Out > Elements;
    };

    // C++ wrapper for STEPAnnotation_Symbol_Occurrence
    struct STEPAnnotation_Symbol_Occurrence : STEPAnnotation_Occurrence, ObjectHelper<STEPAnnotation_Symbol_Occurrence,0> { STEPAnnotation_Symbol_Occurrence() : Object("STEPAnnotation_Symbol_Occurrence") {}

    };

    // C++ wrapper for STEPAnnotation_Subfigure_Occurrence
    struct STEPAnnotation_Subfigure_Occurrence : STEPAnnotation_Symbol_Occurrence, ObjectHelper<STEPAnnotation_Subfigure_Occurrence,0> { STEPAnnotation_Subfigure_Occurrence() : Object("STEPAnnotation_Subfigure_Occurrence") {}

    };

    // C++ wrapper for STEPMapped_Item
    struct STEPMapped_Item : STEPRepresentation_Item, ObjectHelper<STEPMapped_Item,2> { STEPMapped_Item() : Object("STEPMapped_Item") {}
		Lazy< STEPRepresentation_Map > MappingSource;
		Lazy< STEPRepresentation_Item > MappingTarget;
    };

    // C++ wrapper for STEPAnnotation_Symbol
    struct STEPAnnotation_Symbol : STEPMapped_Item, ObjectHelper<STEPAnnotation_Symbol,0> { STEPAnnotation_Symbol() : Object("STEPAnnotation_Symbol") {}

    };

    // C++ wrapper for STEPAnnotation_Text
    struct STEPAnnotation_Text : STEPMapped_Item, ObjectHelper<STEPAnnotation_Text,0> { STEPAnnotation_Text() : Object("STEPAnnotation_Text") {}

    };

    // C++ wrapper for STEPAnnotation_Text_Character
    struct STEPAnnotation_Text_Character : STEPMapped_Item, ObjectHelper<STEPAnnotation_Text_Character,1> { STEPAnnotation_Text_Character() : Object("STEPAnnotation_Text_Character") {}
		STEPText_Alignment::Out Alignment;
    };

    // C++ wrapper for STEPAnnotation_Text_Occurrence
    struct STEPAnnotation_Text_Occurrence : STEPAnnotation_Occurrence, ObjectHelper<STEPAnnotation_Text_Occurrence,0> { STEPAnnotation_Text_Occurrence() : Object("STEPAnnotation_Text_Occurrence") {}

    };

    // C++ wrapper for STEPCompound_Representation_Item
    struct STEPCompound_Representation_Item : STEPRepresentation_Item, ObjectHelper<STEPCompound_Representation_Item,1> { STEPCompound_Representation_Item() : Object("STEPCompound_Representation_Item") {}
		STEPCompound_Item_Definition::Out ItemElement;
    };

    // C++ wrapper for STEPAtomic_Formula
    struct STEPAtomic_Formula : STEPCompound_Representation_Item, ObjectHelper<STEPAtomic_Formula,0> { STEPAtomic_Formula() : Object("STEPAtomic_Formula") {}

    };

    // C++ wrapper for STEPAttribute_Assertion
    struct STEPAttribute_Assertion : STEPFact_Type, STEPProperty_Definition_Representation, STEPRepresentation, ObjectHelper<STEPAttribute_Assertion,0> { STEPAttribute_Assertion() : Object("STEPAttribute_Assertion") {}

    };

    // C++ wrapper for STEPVariational_Representation_Item
    struct STEPVariational_Representation_Item : STEPRepresentation_Item, ObjectHelper<STEPVariational_Representation_Item,0> { STEPVariational_Representation_Item() : Object("STEPVariational_Representation_Item") {}

    };

    // C++ wrapper for STEPAuxiliary_Geometric_Representation_Item
    struct STEPAuxiliary_Geometric_Representation_Item : STEPGeometric_Representation_Item, STEPVariational_Representation_Item, ObjectHelper<STEPAuxiliary_Geometric_Representation_Item,0> { STEPAuxiliary_Geometric_Representation_Item() : Object("STEPAuxiliary_Geometric_Representation_Item") {}

    };

    // C++ wrapper for STEPPlacement
    struct STEPPlacement : STEPGeometric_Representation_Item, ObjectHelper<STEPPlacement,1> { STEPPlacement() : Object("STEPPlacement") {}
		Lazy< STEPCartesian_Point > Location;
    };

    // C++ wrapper for STEPAxis1_Placement
    struct STEPAxis1_Placement : STEPPlacement, ObjectHelper<STEPAxis1_Placement,1> { STEPAxis1_Placement() : Object("STEPAxis1_Placement") {}
		Maybe< Lazy< STEPDirection > > Axis;
    };

    // C++ wrapper for STEPAxis2_Placement_2d
    struct STEPAxis2_Placement_2d : STEPPlacement, ObjectHelper<STEPAxis2_Placement_2d,1> { STEPAxis2_Placement_2d() : Object("STEPAxis2_Placement_2d") {}
		Maybe< Lazy< STEPDirection > > RefDirection;
    };

    // C++ wrapper for STEPAxis2_Placement_3d
    struct STEPAxis2_Placement_3d : STEPPlacement, ObjectHelper<STEPAxis2_Placement_3d,2> { STEPAxis2_Placement_3d() : Object("STEPAxis2_Placement_3d") {}
		Maybe< Lazy< STEPDirection > > Axis;
		Maybe< Lazy< STEPDirection > > RefDirection;
    };

    // C++ wrapper for STEPCurve
    struct STEPCurve : STEPGeometric_Representation_Item, ObjectHelper<STEPCurve,0> { STEPCurve() : Object("STEPCurve") {}

    };

    // C++ wrapper for STEPBounded_Curve
    struct STEPBounded_Curve : STEPCurve, ObjectHelper<STEPBounded_Curve,0> { STEPBounded_Curve() : Object("STEPBounded_Curve") {}

    };

    // C++ wrapper for STEPB_Spline_Curve
    struct STEPB_Spline_Curve : STEPBounded_Curve, ObjectHelper<STEPB_Spline_Curve,5> { STEPB_Spline_Curve() : Object("STEPB_Spline_Curve") {}
		INTEGER::Out Degree;
		ListOf< Lazy< STEPCartesian_Point >, 2, 0 > ControlPointsList;
		STEPB_Spline_Curve_Form::Out CurveForm;
		LOGICAL::Out ClosedCurve;
		LOGICAL::Out SelfIntersect;
    };

    // C++ wrapper for STEPB_Spline_Curve_With_Knots
    struct STEPB_Spline_Curve_With_Knots : STEPB_Spline_Curve, ObjectHelper<STEPB_Spline_Curve_With_Knots,3> { STEPB_Spline_Curve_With_Knots() : Object("STEPB_Spline_Curve_With_Knots") {}
		ListOf< INTEGER, 2, 0 >::Out KnotMultiplicities;
		ListOf< STEPParameter_Value, 2, 0 >::Out Knots;
		STEPKnot_Type::Out KnotSpec;
    };

    // C++ wrapper for STEPSurface
    struct STEPSurface : STEPGeometric_Representation_Item, ObjectHelper<STEPSurface,0> { STEPSurface() : Object("STEPSurface") {}

    };

    // C++ wrapper for STEPBounded_Surface
    struct STEPBounded_Surface : STEPSurface, ObjectHelper<STEPBounded_Surface,0> { STEPBounded_Surface() : Object("STEPBounded_Surface") {}

    };

    // C++ wrapper for STEPB_Spline_Surface
    struct STEPB_Spline_Surface : STEPBounded_Surface, ObjectHelper<STEPB_Spline_Surface,6> { STEPB_Spline_Surface() : Object("STEPB_Spline_Surface") {}
		INTEGER::Out UDegree;
		INTEGER::Out VDegree;
		STEPB_Spline_Surface_Form::Out SurfaceForm;
		LOGICAL::Out UClosed;
		LOGICAL::Out VClosed;
		LOGICAL::Out SelfIntersect;
    };

    // C++ wrapper for STEPB_Spline_Surface_With_Knots
    struct STEPB_Spline_Surface_With_Knots : STEPB_Spline_Surface, ObjectHelper<STEPB_Spline_Surface_With_Knots,5> { STEPB_Spline_Surface_With_Knots() : Object("STEPB_Spline_Surface_With_Knots") {}
		ListOf< INTEGER, 2, 0 >::Out UMultiplicities;
		ListOf< INTEGER, 2, 0 >::Out VMultiplicities;
		ListOf< STEPParameter_Value, 2, 0 >::Out UKnots;
		ListOf< STEPParameter_Value, 2, 0 >::Out VKnots;
		STEPKnot_Type::Out KnotSpec;
    };

    // C++ wrapper for STEPBack_Chaining_Rule_Body
    struct STEPBack_Chaining_Rule_Body : STEPProperty_Definition, STEPProperty_Definition_Representation, STEPRepresentation, ObjectHelper<STEPBack_Chaining_Rule_Body,0> { STEPBack_Chaining_Rule_Body() : Object("STEPBack_Chaining_Rule_Body") {}

    };

    // C++ wrapper for STEPColour
    struct STEPColour :  ObjectHelper<STEPColour,0> { STEPColour() : Object("STEPColour") {}

    };

    // C++ wrapper for STEPBeveled_Sheet_Representation
    struct STEPBeveled_Sheet_Representation : STEPShape_Representation, ObjectHelper<STEPBeveled_Sheet_Representation,0> { STEPBeveled_Sheet_Representation() : Object("STEPBeveled_Sheet_Representation") {}

    };

    // C++ wrapper for STEPBezier_Curve
    struct STEPBezier_Curve : STEPB_Spline_Curve, ObjectHelper<STEPBezier_Curve,0> { STEPBezier_Curve() : Object("STEPBezier_Curve") {}

    };

    // C++ wrapper for STEPBezier_Surface
    struct STEPBezier_Surface : STEPB_Spline_Surface, ObjectHelper<STEPBezier_Surface,0> { STEPBezier_Surface() : Object("STEPBezier_Surface") {}

    };

    // C++ wrapper for STEPBinary_Representation_Item
    struct STEPBinary_Representation_Item : STEPRepresentation_Item, ObjectHelper<STEPBinary_Representation_Item,1> { STEPBinary_Representation_Item() : Object("STEPBinary_Representation_Item") {}
		BINARY::Out BinaryValue;
    };

    // C++ wrapper for STEPBlock
    struct STEPBlock : STEPGeometric_Representation_Item, ObjectHelper<STEPBlock,4> { STEPBlock() : Object("STEPBlock") {}
		Lazy< STEPAxis2_Placement_3d > Position;
		STEPPositive_Length_Measure::Out X;
		STEPPositive_Length_Measure::Out Y;
		STEPPositive_Length_Measure::Out Z;
    };

    // C++ wrapper for STEPBoolean_Representation_Item
    struct STEPBoolean_Representation_Item : STEPRepresentation_Item, STEPBoolean_Literal, ObjectHelper<STEPBoolean_Representation_Item,0> { STEPBoolean_Representation_Item() : Object("STEPBoolean_Representation_Item") {}

    };

    // C++ wrapper for STEPBoolean_Result
    struct STEPBoolean_Result : STEPGeometric_Representation_Item, ObjectHelper<STEPBoolean_Result,3> { STEPBoolean_Result() : Object("STEPBoolean_Result") {}
		STEPBoolean_Operator::Out Operator;
		STEPBoolean_Operand::Out FirstOperand;
		STEPBoolean_Operand::Out SecondOperand;
    };

    // C++ wrapper for STEPComposite_Curve
    struct STEPComposite_Curve : STEPBounded_Curve, ObjectHelper<STEPComposite_Curve,2> { STEPComposite_Curve() : Object("STEPComposite_Curve") {}
		ListOf< Lazy< STEPComposite_Curve_Segment >, 1, 0 > Segments;
		LOGICAL::Out SelfIntersect;
    };

    // C++ wrapper for STEPComposite_Curve_On_Surface
    struct STEPComposite_Curve_On_Surface : STEPComposite_Curve, ObjectHelper<STEPComposite_Curve_On_Surface,0> { STEPComposite_Curve_On_Surface() : Object("STEPComposite_Curve_On_Surface") {}

    };

    // C++ wrapper for STEPBoundary_Curve
    struct STEPBoundary_Curve : STEPComposite_Curve_On_Surface, ObjectHelper<STEPBoundary_Curve,0> { STEPBoundary_Curve() : Object("STEPBoundary_Curve") {}

    };

    // C++ wrapper for STEPPcurve
    struct STEPPcurve : STEPCurve, ObjectHelper<STEPPcurve,2> { STEPPcurve() : Object("STEPPcurve") {}
		Lazy< STEPSurface > BasisSurface;
		Lazy< STEPDefinitional_Representation > ReferenceToCurve;
    };

    // C++ wrapper for STEPBounded_Pcurve
    struct STEPBounded_Pcurve : STEPPcurve, STEPBounded_Curve, ObjectHelper<STEPBounded_Pcurve,0> { STEPBounded_Pcurve() : Object("STEPBounded_Pcurve") {}

    };

    // C++ wrapper for STEPSurface_Curve
    struct STEPSurface_Curve : STEPCurve, ObjectHelper<STEPSurface_Curve,3> { STEPSurface_Curve() : Object("STEPSurface_Curve") {}
		Lazy< STEPCurve > Curve3d;
		ListOf< STEPPcurve_Or_Surface, 1, 2 >::Out AssociatedGeometry;
		STEPPreferred_Surface_Curve_Representation::Out MasterRepresentation;
    };

    // C++ wrapper for STEPBounded_Surface_Curve
    struct STEPBounded_Surface_Curve : STEPSurface_Curve, STEPBounded_Curve, ObjectHelper<STEPBounded_Surface_Curve,0> { STEPBounded_Surface_Curve() : Object("STEPBounded_Surface_Curve") {}

    };

    // C++ wrapper for STEPFounded_Item
    struct STEPFounded_Item :  ObjectHelper<STEPFounded_Item,0> { STEPFounded_Item() : Object("STEPFounded_Item") {}

    };

    // C++ wrapper for STEPHalf_Space_Solid
    struct STEPHalf_Space_Solid : STEPGeometric_Representation_Item, ObjectHelper<STEPHalf_Space_Solid,2> { STEPHalf_Space_Solid() : Object("STEPHalf_Space_Solid") {}
		Lazy< STEPSurface > BaseSurface;
		BOOLEAN::Out AgreementFlag;
    };

    // C++ wrapper for STEPBoxed_Half_Space
    struct STEPBoxed_Half_Space : STEPHalf_Space_Solid, ObjectHelper<STEPBoxed_Half_Space,1> { STEPBoxed_Half_Space() : Object("STEPBoxed_Half_Space") {}
		Lazy< NotImplemented > Enclosure;
    };

    // C++ wrapper for STEPSolid_Model
    struct STEPSolid_Model : STEPGeometric_Representation_Item, ObjectHelper<STEPSolid_Model,0> { STEPSolid_Model() : Object("STEPSolid_Model") {}

    };

    // C++ wrapper for STEPManifold_Solid_Brep
    struct STEPManifold_Solid_Brep : STEPSolid_Model, ObjectHelper<STEPManifold_Solid_Brep,1> { STEPManifold_Solid_Brep() : Object("STEPManifold_Solid_Brep") {}
		Lazy< STEPClosed_Shell > Outer;
    };

    // C++ wrapper for STEPBrep_With_Voids
    struct STEPBrep_With_Voids : STEPManifold_Solid_Brep, ObjectHelper<STEPBrep_With_Voids,1> { STEPBrep_With_Voids() : Object("STEPBrep_With_Voids") {}
		ListOf< Lazy< STEPOriented_Closed_Shell >, 1, 0 > Voids;
    };

    // C++ wrapper for STEPBytes_Representation_Item
    struct STEPBytes_Representation_Item : STEPBinary_Representation_Item, ObjectHelper<STEPBytes_Representation_Item,0> { STEPBytes_Representation_Item() : Object("STEPBytes_Representation_Item") {}

    };

    // C++ wrapper for STEPCamera_Image
    struct STEPCamera_Image : STEPMapped_Item, ObjectHelper<STEPCamera_Image,0> { STEPCamera_Image() : Object("STEPCamera_Image") {}

    };

    // C++ wrapper for STEPCamera_Image_3d_With_Scale
    struct STEPCamera_Image_3d_With_Scale : STEPCamera_Image, ObjectHelper<STEPCamera_Image_3d_With_Scale,0> { STEPCamera_Image_3d_With_Scale() : Object("STEPCamera_Image_3d_With_Scale") {}

    };

    // C++ wrapper for STEPCamera_Model
    struct STEPCamera_Model : STEPGeometric_Representation_Item, ObjectHelper<STEPCamera_Model,0> { STEPCamera_Model() : Object("STEPCamera_Model") {}

    };

    // C++ wrapper for STEPCamera_Model_D3
    struct STEPCamera_Model_D3 : STEPCamera_Model, ObjectHelper<STEPCamera_Model_D3,2> { STEPCamera_Model_D3() : Object("STEPCamera_Model_D3") {}
		Lazy< STEPAxis2_Placement_3d > ViewReferenceSystem;
		Lazy< NotImplemented > PerspectiveOfVolume;
    };

    // C++ wrapper for STEPCamera_Model_D3_Multi_Clipping
    struct STEPCamera_Model_D3_Multi_Clipping : STEPCamera_Model_D3, ObjectHelper<STEPCamera_Model_D3_Multi_Clipping,1> { STEPCamera_Model_D3_Multi_Clipping() : Object("STEPCamera_Model_D3_Multi_Clipping") {}
		ListOf< STEPCamera_Model_D3_Multi_Clipping_Interection_Select, 1, 0 >::Out ShapeClipping;
    };

    // C++ wrapper for STEPCamera_Model_D3_Multi_Clipping_Intersection
    struct STEPCamera_Model_D3_Multi_Clipping_Intersection : STEPGeometric_Representation_Item, ObjectHelper<STEPCamera_Model_D3_Multi_Clipping_Intersection,1> { STEPCamera_Model_D3_Multi_Clipping_Intersection() : Object("STEPCamera_Model_D3_Multi_Clipping_Intersection") {}
		ListOf< STEPCamera_Model_D3_Multi_Clipping_Interection_Select, 2, 0 >::Out ShapeClipping;
    };

    // C++ wrapper for STEPCamera_Model_D3_Multi_Clipping_Union
    struct STEPCamera_Model_D3_Multi_Clipping_Union : STEPGeometric_Representation_Item, ObjectHelper<STEPCamera_Model_D3_Multi_Clipping_Union,1> { STEPCamera_Model_D3_Multi_Clipping_Union() : Object("STEPCamera_Model_D3_Multi_Clipping_Union") {}
		ListOf< STEPCamera_Model_D3_Multi_Clipping_Union_Select, 2, 0 >::Out ShapeClipping;
    };

    // C++ wrapper for STEPCamera_Model_D3_With_Hlhsr
    struct STEPCamera_Model_D3_With_Hlhsr : STEPCamera_Model_D3, ObjectHelper<STEPCamera_Model_D3_With_Hlhsr,1> { STEPCamera_Model_D3_With_Hlhsr() : Object("STEPCamera_Model_D3_With_Hlhsr") {}
		BOOLEAN::Out HiddenLineSurfaceRemoval;
    };

    // C++ wrapper for STEPCamera_Model_With_Light_Sources
    struct STEPCamera_Model_With_Light_Sources : STEPCamera_Model_D3, ObjectHelper<STEPCamera_Model_With_Light_Sources,1> { STEPCamera_Model_With_Light_Sources() : Object("STEPCamera_Model_With_Light_Sources") {}
		ListOf< Lazy< STEPLight_Source >, 1, 0 > Sources;
    };

    // C++ wrapper for STEPRepresentation_Map
    struct STEPRepresentation_Map :  ObjectHelper<STEPRepresentation_Map,2> { STEPRepresentation_Map() : Object("STEPRepresentation_Map") {}
		Lazy< STEPRepresentation_Item > MappingOrigin;
		Lazy< STEPRepresentation > MappedRepresentation;
    };

    // C++ wrapper for STEPCamera_Usage
    struct STEPCamera_Usage : STEPRepresentation_Map, ObjectHelper<STEPCamera_Usage,0> { STEPCamera_Usage() : Object("STEPCamera_Usage") {}

    };

    // C++ wrapper for STEPPoint
    struct STEPPoint : STEPGeometric_Representation_Item, ObjectHelper<STEPPoint,0> { STEPPoint() : Object("STEPPoint") {}

    };

    // C++ wrapper for STEPCartesian_Point
    struct STEPCartesian_Point : STEPPoint, ObjectHelper<STEPCartesian_Point,1> { STEPCartesian_Point() : Object("STEPCartesian_Point") {}
		ListOf< STEPLength_Measure, 1, 3 >::Out Coordinates;
    };

    // C++ wrapper for STEPFunctionally_Defined_Transformation
    struct STEPFunctionally_Defined_Transformation :  ObjectHelper<STEPFunctionally_Defined_Transformation,2> { STEPFunctionally_Defined_Transformation() : Object("STEPFunctionally_Defined_Transformation") {}
		STEPLabel::Out Name;
		Maybe< STEPText::Out > Description;
    };

    // C++ wrapper for STEPCartesian_Transformation_Operator
    struct STEPCartesian_Transformation_Operator : STEPGeometric_Representation_Item, STEPFunctionally_Defined_Transformation, ObjectHelper<STEPCartesian_Transformation_Operator,4> { STEPCartesian_Transformation_Operator() : Object("STEPCartesian_Transformation_Operator") {}
		Maybe< Lazy< STEPDirection > > Axis1;
		Maybe< Lazy< STEPDirection > > Axis2;
		Lazy< STEPCartesian_Point > LocalOrigin;
		Maybe< REAL::Out > Scale;
    };

    // C++ wrapper for STEPCartesian_Transformation_Operator_2d
    struct STEPCartesian_Transformation_Operator_2d : STEPCartesian_Transformation_Operator, ObjectHelper<STEPCartesian_Transformation_Operator_2d,0> { STEPCartesian_Transformation_Operator_2d() : Object("STEPCartesian_Transformation_Operator_2d") {}

    };

    // C++ wrapper for STEPCartesian_Transformation_Operator_3d
    struct STEPCartesian_Transformation_Operator_3d : STEPCartesian_Transformation_Operator, ObjectHelper<STEPCartesian_Transformation_Operator_3d,1> { STEPCartesian_Transformation_Operator_3d() : Object("STEPCartesian_Transformation_Operator_3d") {}
		Maybe< Lazy< STEPDirection > > Axis3;
    };

    // C++ wrapper for STEPSymbol_Representation
    struct STEPSymbol_Representation : STEPRepresentation, ObjectHelper<STEPSymbol_Representation,0> { STEPSymbol_Representation() : Object("STEPSymbol_Representation") {}

    };

    // C++ wrapper for STEPGeneric_Character_Glyph_Symbol
    struct STEPGeneric_Character_Glyph_Symbol : STEPSymbol_Representation, ObjectHelper<STEPGeneric_Character_Glyph_Symbol,0> { STEPGeneric_Character_Glyph_Symbol() : Object("STEPGeneric_Character_Glyph_Symbol") {}

    };

    // C++ wrapper for STEPCharacter_Glyph_Symbol
    struct STEPCharacter_Glyph_Symbol : STEPGeneric_Character_Glyph_Symbol, ObjectHelper<STEPCharacter_Glyph_Symbol,2> { STEPCharacter_Glyph_Symbol() : Object("STEPCharacter_Glyph_Symbol") {}
		Lazy< STEPPlanar_Extent > CharacterBox;
		STEPRatio_Measure::Out BaselineRatio;
    };

    // C++ wrapper for STEPCharacter_Glyph_Symbol_Outline
    struct STEPCharacter_Glyph_Symbol_Outline : STEPCharacter_Glyph_Symbol, ObjectHelper<STEPCharacter_Glyph_Symbol_Outline,1> { STEPCharacter_Glyph_Symbol_Outline() : Object("STEPCharacter_Glyph_Symbol_Outline") {}
		ListOf< Lazy< STEPAnnotation_Fill_Area >, 1, 0 > Outlines;
    };

    // C++ wrapper for STEPCharacter_Glyph_Symbol_Stroke
    struct STEPCharacter_Glyph_Symbol_Stroke : STEPCharacter_Glyph_Symbol, ObjectHelper<STEPCharacter_Glyph_Symbol_Stroke,1> { STEPCharacter_Glyph_Symbol_Stroke() : Object("STEPCharacter_Glyph_Symbol_Stroke") {}
		ListOf< Lazy< STEPCurve >, 1, 0 > Strokes;
    };

    // C++ wrapper for STEPConic
    struct STEPConic : STEPCurve, ObjectHelper<STEPConic,1> { STEPConic() : Object("STEPConic") {}
		STEPAxis2_Placement::Out Position;
    };

    // C++ wrapper for STEPCircle
    struct STEPCircle : STEPConic, ObjectHelper<STEPCircle,1> { STEPCircle() : Object("STEPCircle") {}
		STEPPositive_Length_Measure::Out Radius;
    };

    // C++ wrapper for STEPConnected_Face_Set
    struct STEPConnected_Face_Set : STEPTopological_Representation_Item, ObjectHelper<STEPConnected_Face_Set,1> { STEPConnected_Face_Set() : Object("STEPConnected_Face_Set") {}
		ListOf< Lazy< STEPFace >, 1, 0 > CfsFaces;
    };

    // C++ wrapper for STEPClosed_Shell
    struct STEPClosed_Shell : STEPConnected_Face_Set, ObjectHelper<STEPClosed_Shell,0> { STEPClosed_Shell() : Object("STEPClosed_Shell") {}

    };

    // C++ wrapper for STEPColour_Specification
    struct STEPColour_Specification : STEPColour, ObjectHelper<STEPColour_Specification,1> { STEPColour_Specification() : Object("STEPColour_Specification") {}
		STEPLabel::Out Name;
    };

    // C++ wrapper for STEPColour_Rgb
    struct STEPColour_Rgb : STEPColour_Specification, ObjectHelper<STEPColour_Rgb,3> { STEPColour_Rgb() : Object("STEPColour_Rgb") {}
		REAL::Out Red;
		REAL::Out Green;
		REAL::Out Blue;
    };

    // C++ wrapper for STEPComplex_Clause
    struct STEPComplex_Clause : STEPCompound_Representation_Item, ObjectHelper<STEPComplex_Clause,0> { STEPComplex_Clause() : Object("STEPComplex_Clause") {}

    };

    // C++ wrapper for STEPComplex_Conjunctive_Clause
    struct STEPComplex_Conjunctive_Clause : STEPComplex_Clause, ObjectHelper<STEPComplex_Conjunctive_Clause,0> { STEPComplex_Conjunctive_Clause() : Object("STEPComplex_Conjunctive_Clause") {}

    };

    // C++ wrapper for STEPComplex_Disjunctive_Clause
    struct STEPComplex_Disjunctive_Clause : STEPComplex_Clause, ObjectHelper<STEPComplex_Disjunctive_Clause,0> { STEPComplex_Disjunctive_Clause() : Object("STEPComplex_Disjunctive_Clause") {}

    };

    // C++ wrapper for STEPModified_Solid
    struct STEPModified_Solid : STEPSolid_Model, ObjectHelper<STEPModified_Solid,2> { STEPModified_Solid() : Object("STEPModified_Solid") {}
		STEPText::Out Rationale;
		STEPBase_Solid_Select::Out BaseSolid;
    };

    // C++ wrapper for STEPShelled_Solid
    struct STEPShelled_Solid : STEPModified_Solid, ObjectHelper<STEPShelled_Solid,2> { STEPShelled_Solid() : Object("STEPShelled_Solid") {}
		ListOf< Lazy< STEPFace_Surface >, 1, 0 > DeletedFaceSet;
		STEPLength_Measure::Out Thickness;
    };

    // C++ wrapper for STEPComplex_Shelled_Solid
    struct STEPComplex_Shelled_Solid : STEPShelled_Solid, ObjectHelper<STEPComplex_Shelled_Solid,1> { STEPComplex_Shelled_Solid() : Object("STEPComplex_Shelled_Solid") {}
		ListOf< STEPLength_Measure, 1, 0 >::Out ThicknessList;
    };

    // C++ wrapper for STEPComposite_Curve_Segment
    struct STEPComposite_Curve_Segment : STEPFounded_Item, ObjectHelper<STEPComposite_Curve_Segment,3> { STEPComposite_Curve_Segment() : Object("STEPComposite_Curve_Segment") {}
		STEPTransition_Code::Out Transition;
		BOOLEAN::Out SameSense;
		Lazy< STEPCurve > ParentCurve;
    };

    // C++ wrapper for STEPComposite_Sheet_Representation
    struct STEPComposite_Sheet_Representation : STEPShape_Representation, ObjectHelper<STEPComposite_Sheet_Representation,0> { STEPComposite_Sheet_Representation() : Object("STEPComposite_Sheet_Representation") {}

    };

    // C++ wrapper for STEPComposite_Text
    struct STEPComposite_Text : STEPGeometric_Representation_Item, ObjectHelper<STEPComposite_Text,1> { STEPComposite_Text() : Object("STEPComposite_Text") {}
		ListOf< STEPText_Or_Character, 2, 0 >::Out CollectedText;
    };

    // C++ wrapper for STEPComposite_Text_With_Associated_Curves
    struct STEPComposite_Text_With_Associated_Curves : STEPComposite_Text, ObjectHelper<STEPComposite_Text_With_Associated_Curves,1> { STEPComposite_Text_With_Associated_Curves() : Object("STEPComposite_Text_With_Associated_Curves") {}
		ListOf< Lazy< STEPCurve >, 1, 0 > AssociatedCurves;
    };

    // C++ wrapper for STEPComposite_Text_With_Blanking_Box
    struct STEPComposite_Text_With_Blanking_Box : STEPComposite_Text, ObjectHelper<STEPComposite_Text_With_Blanking_Box,1> { STEPComposite_Text_With_Blanking_Box() : Object("STEPComposite_Text_With_Blanking_Box") {}
		Lazy< STEPPlanar_Box > Blanking;
    };

    // C++ wrapper for STEPComposite_Text_With_Delineation
    struct STEPComposite_Text_With_Delineation : STEPComposite_Text, ObjectHelper<STEPComposite_Text_With_Delineation,1> { STEPComposite_Text_With_Delineation() : Object("STEPComposite_Text_With_Delineation") {}
		STEPText_Delineation::Out Delineation;
    };

    // C++ wrapper for STEPComposite_Text_With_Extent
    struct STEPComposite_Text_With_Extent : STEPComposite_Text, ObjectHelper<STEPComposite_Text_With_Extent,1> { STEPComposite_Text_With_Extent() : Object("STEPComposite_Text_With_Extent") {}
		Lazy< STEPPlanar_Extent > Extent;
    };

    // C++ wrapper for STEPCompound_Shape_Representation
    struct STEPCompound_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPCompound_Shape_Representation,0> { STEPCompound_Shape_Representation() : Object("STEPCompound_Shape_Representation") {}

    };

    // C++ wrapper for STEPConical_Stepped_Hole_Transition
    struct STEPConical_Stepped_Hole_Transition : STEPGeometric_Representation_Item, ObjectHelper<STEPConical_Stepped_Hole_Transition,3> { STEPConical_Stepped_Hole_Transition() : Object("STEPConical_Stepped_Hole_Transition") {}
		STEPPositive_Integer::Out TransitionNumber;
		STEPPlane_Angle_Measure::Out ConeApexAngle;
		STEPPositive_Length_Measure::Out ConeBaseRadius;
    };

    // C++ wrapper for STEPElementary_Surface
    struct STEPElementary_Surface : STEPSurface, ObjectHelper<STEPElementary_Surface,1> { STEPElementary_Surface() : Object("STEPElementary_Surface") {}
		Lazy< STEPAxis2_Placement_3d > Position;
    };

    // C++ wrapper for STEPConical_Surface
    struct STEPConical_Surface : STEPElementary_Surface, ObjectHelper<STEPConical_Surface,2> { STEPConical_Surface() : Object("STEPConical_Surface") {}
		STEPLength_Measure::Out Radius;
		STEPPlane_Angle_Measure::Out SemiAngle;
    };

    // C++ wrapper for STEPConnected_Edge_Set
    struct STEPConnected_Edge_Set : STEPTopological_Representation_Item, ObjectHelper<STEPConnected_Edge_Set,1> { STEPConnected_Edge_Set() : Object("STEPConnected_Edge_Set") {}
		ListOf< Lazy< STEPEdge >, 1, 0 > CesEdges;
    };

    // C++ wrapper for STEPConnected_Face_Sub_Set
    struct STEPConnected_Face_Sub_Set : STEPConnected_Face_Set, ObjectHelper<STEPConnected_Face_Sub_Set,1> { STEPConnected_Face_Sub_Set() : Object("STEPConnected_Face_Sub_Set") {}
		Lazy< STEPConnected_Face_Set > ParentFaceSet;
    };

    // C++ wrapper for STEPConstructive_Geometry_Representation
    struct STEPConstructive_Geometry_Representation : STEPRepresentation, ObjectHelper<STEPConstructive_Geometry_Representation,0> { STEPConstructive_Geometry_Representation() : Object("STEPConstructive_Geometry_Representation") {}

    };

    // C++ wrapper for STEPContact_Ratio_Representation
    struct STEPContact_Ratio_Representation : STEPRepresentation, ObjectHelper<STEPContact_Ratio_Representation,0> { STEPContact_Ratio_Representation() : Object("STEPContact_Ratio_Representation") {}

    };

    // C++ wrapper for STEPOver_Riding_Styled_Item
    struct STEPOver_Riding_Styled_Item : STEPStyled_Item, ObjectHelper<STEPOver_Riding_Styled_Item,1> { STEPOver_Riding_Styled_Item() : Object("STEPOver_Riding_Styled_Item") {}
		Lazy< STEPStyled_Item > OverRiddenStyle;
    };

    // C++ wrapper for STEPContext_Dependent_Over_Riding_Styled_Item
    struct STEPContext_Dependent_Over_Riding_Styled_Item : STEPOver_Riding_Styled_Item, ObjectHelper<STEPContext_Dependent_Over_Riding_Styled_Item,1> { STEPContext_Dependent_Over_Riding_Styled_Item() : Object("STEPContext_Dependent_Over_Riding_Styled_Item") {}
		ListOf< STEPStyle_Context_Select, 1, 0 >::Out StyleContext;
    };

    // C++ wrapper for STEPContext_Dependent_Unit
    struct STEPContext_Dependent_Unit : STEPNamed_Unit, ObjectHelper<STEPContext_Dependent_Unit,1> { STEPContext_Dependent_Unit() : Object("STEPContext_Dependent_Unit") {}
		STEPLabel::Out Name;
    };

    // C++ wrapper for STEPConversion_Based_Unit
    struct STEPConversion_Based_Unit : STEPNamed_Unit, ObjectHelper<STEPConversion_Based_Unit,2> { STEPConversion_Based_Unit() : Object("STEPConversion_Based_Unit") {}
		STEPLabel::Out Name;
		Lazy< NotImplemented > ConversionFactor;
    };

    // C++ wrapper for STEPCsg_Shape_Representation
    struct STEPCsg_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPCsg_Shape_Representation,0> { STEPCsg_Shape_Representation() : Object("STEPCsg_Shape_Representation") {}

    };

    // C++ wrapper for STEPCsg_Solid
    struct STEPCsg_Solid : STEPSolid_Model, ObjectHelper<STEPCsg_Solid,1> { STEPCsg_Solid() : Object("STEPCsg_Solid") {}
		STEPCsg_Select::Out TreeRootExpression;
    };

    // C++ wrapper for STEPCurrency
    struct STEPCurrency : STEPContext_Dependent_Unit, ObjectHelper<STEPCurrency,0> { STEPCurrency() : Object("STEPCurrency") {}

    };

    // C++ wrapper for STEPCurve_Bounded_Surface
    struct STEPCurve_Bounded_Surface : STEPBounded_Surface, ObjectHelper<STEPCurve_Bounded_Surface,3> { STEPCurve_Bounded_Surface() : Object("STEPCurve_Bounded_Surface") {}
		Lazy< STEPSurface > BasisSurface;
		ListOf< Lazy< STEPBoundary_Curve >, 1, 0 > Boundaries;
		BOOLEAN::Out ImplicitOuter;
    };

    // C++ wrapper for STEPCurve_Dimension
    struct STEPCurve_Dimension : STEPDimension_Curve_Directed_Callout, ObjectHelper<STEPCurve_Dimension,0> { STEPCurve_Dimension() : Object("STEPCurve_Dimension") {}

    };

    // C++ wrapper for STEPCurve_Replica
    struct STEPCurve_Replica : STEPCurve, ObjectHelper<STEPCurve_Replica,2> { STEPCurve_Replica() : Object("STEPCurve_Replica") {}
		Lazy< STEPCurve > ParentCurve;
		Lazy< STEPCartesian_Transformation_Operator > Transformation;
    };

    // C++ wrapper for STEPCurve_Swept_Solid_Shape_Representation
    struct STEPCurve_Swept_Solid_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPCurve_Swept_Solid_Shape_Representation,0> { STEPCurve_Swept_Solid_Shape_Representation() : Object("STEPCurve_Swept_Solid_Shape_Representation") {}

    };

    // C++ wrapper for STEPCylindrical_Surface
    struct STEPCylindrical_Surface : STEPElementary_Surface, ObjectHelper<STEPCylindrical_Surface,1> { STEPCylindrical_Surface() : Object("STEPCylindrical_Surface") {}
		STEPPositive_Length_Measure::Out Radius;
    };

    // C++ wrapper for STEPDate_Representation_Item
    struct STEPDate_Representation_Item : STEPRepresentation_Item, STEPDate, ObjectHelper<STEPDate_Representation_Item,0> { STEPDate_Representation_Item() : Object("STEPDate_Representation_Item") {}

    };

    // C++ wrapper for STEPDate_Time_Representation_Item
    struct STEPDate_Time_Representation_Item : STEPRepresentation_Item, STEPDate_And_Time, ObjectHelper<STEPDate_Time_Representation_Item,0> { STEPDate_Time_Representation_Item() : Object("STEPDate_Time_Representation_Item") {}

    };

    // C++ wrapper for STEPDatum_Feature_Callout
    struct STEPDatum_Feature_Callout : STEPDraughting_Callout, ObjectHelper<STEPDatum_Feature_Callout,0> { STEPDatum_Feature_Callout() : Object("STEPDatum_Feature_Callout") {}

    };

    // C++ wrapper for STEPDatum_Target_Callout
    struct STEPDatum_Target_Callout : STEPDraughting_Callout, ObjectHelper<STEPDatum_Target_Callout,0> { STEPDatum_Target_Callout() : Object("STEPDatum_Target_Callout") {}

    };

    // C++ wrapper for STEPDefault_Tolerance_Table
    struct STEPDefault_Tolerance_Table : STEPRepresentation, ObjectHelper<STEPDefault_Tolerance_Table,0> { STEPDefault_Tolerance_Table() : Object("STEPDefault_Tolerance_Table") {}

    };

    // C++ wrapper for STEPDefault_Tolerance_Table_Cell
    struct STEPDefault_Tolerance_Table_Cell : STEPCompound_Representation_Item, ObjectHelper<STEPDefault_Tolerance_Table_Cell,0> { STEPDefault_Tolerance_Table_Cell() : Object("STEPDefault_Tolerance_Table_Cell") {}

    };

    // C++ wrapper for STEPDefined_Symbol
    struct STEPDefined_Symbol : STEPGeometric_Representation_Item, ObjectHelper<STEPDefined_Symbol,2> { STEPDefined_Symbol() : Object("STEPDefined_Symbol") {}
		STEPDefined_Symbol_Select::Out Definition;
		Lazy< STEPSymbol_Target > Target;
    };

    // C++ wrapper for STEPDefinitional_Representation
    struct STEPDefinitional_Representation : STEPRepresentation, ObjectHelper<STEPDefinitional_Representation,0> { STEPDefinitional_Representation() : Object("STEPDefinitional_Representation") {}

    };

    // C++ wrapper for STEPDegenerate_Pcurve
    struct STEPDegenerate_Pcurve : STEPPoint, ObjectHelper<STEPDegenerate_Pcurve,2> { STEPDegenerate_Pcurve() : Object("STEPDegenerate_Pcurve") {}
		Lazy< STEPSurface > BasisSurface;
		Lazy< STEPDefinitional_Representation > ReferenceToCurve;
    };

    // C++ wrapper for STEPToroidal_Surface
    struct STEPToroidal_Surface : STEPElementary_Surface, ObjectHelper<STEPToroidal_Surface,2> { STEPToroidal_Surface() : Object("STEPToroidal_Surface") {}
		STEPPositive_Length_Measure::Out MajorRadius;
		STEPPositive_Length_Measure::Out MinorRadius;
    };

    // C++ wrapper for STEPDegenerate_Toroidal_Surface
    struct STEPDegenerate_Toroidal_Surface : STEPToroidal_Surface, ObjectHelper<STEPDegenerate_Toroidal_Surface,1> { STEPDegenerate_Toroidal_Surface() : Object("STEPDegenerate_Toroidal_Surface") {}
		BOOLEAN::Out SelectOuter;
    };

    // C++ wrapper for STEPDescriptive_Representation_Item
    struct STEPDescriptive_Representation_Item : STEPRepresentation_Item, ObjectHelper<STEPDescriptive_Representation_Item,1> { STEPDescriptive_Representation_Item() : Object("STEPDescriptive_Representation_Item") {}
		STEPText::Out Description;
    };

    // C++ wrapper for STEPDiameter_Dimension
    struct STEPDiameter_Dimension : STEPDimension_Curve_Directed_Callout, ObjectHelper<STEPDiameter_Dimension,0> { STEPDiameter_Dimension() : Object("STEPDiameter_Dimension") {}

    };

    // C++ wrapper for STEPDimension_Callout
    struct STEPDimension_Callout : STEPDraughting_Callout, ObjectHelper<STEPDimension_Callout,0> { STEPDimension_Callout() : Object("STEPDimension_Callout") {}

    };

    // C++ wrapper for STEPDimension_Curve
    struct STEPDimension_Curve : STEPAnnotation_Curve_Occurrence, ObjectHelper<STEPDimension_Curve,0> { STEPDimension_Curve() : Object("STEPDimension_Curve") {}

    };

    // C++ wrapper for STEPTerminator_Symbol
    struct STEPTerminator_Symbol : STEPAnnotation_Symbol_Occurrence, ObjectHelper<STEPTerminator_Symbol,1> { STEPTerminator_Symbol() : Object("STEPTerminator_Symbol") {}
		Lazy< STEPAnnotation_Curve_Occurrence > AnnotatedCurve;
    };

    // C++ wrapper for STEPDimension_Curve_Terminator
    struct STEPDimension_Curve_Terminator : STEPTerminator_Symbol, ObjectHelper<STEPDimension_Curve_Terminator,1> { STEPDimension_Curve_Terminator() : Object("STEPDimension_Curve_Terminator") {}
		STEPDimension_Extent_Usage::Out Role;
    };

    // C++ wrapper for STEPText_Literal
    struct STEPText_Literal : STEPGeometric_Representation_Item, ObjectHelper<STEPText_Literal,5> { STEPText_Literal() : Object("STEPText_Literal") {}
		STEPPresentable_Text::Out Literal;
		STEPAxis2_Placement::Out Placement;
		STEPText_Alignment::Out Alignment;
		STEPText_Path::Out Path;
		STEPFont_Select::Out Font;
    };

    // C++ wrapper for STEPDimension_Text_Associativity
    struct STEPDimension_Text_Associativity : STEPText_Literal, STEPMapped_Item, ObjectHelper<STEPDimension_Text_Associativity,0> { STEPDimension_Text_Associativity() : Object("STEPDimension_Text_Associativity") {}

    };

    // C++ wrapper for STEPDirection
    struct STEPDirection : STEPGeometric_Representation_Item, ObjectHelper<STEPDirection,1> { STEPDirection() : Object("STEPDirection") {}
		ListOf< REAL, 2, 3 >::Out DirectionRatios;
    };

    // C++ wrapper for STEPDouble_Offset_Shelled_Solid
    struct STEPDouble_Offset_Shelled_Solid : STEPShelled_Solid, ObjectHelper<STEPDouble_Offset_Shelled_Solid,1> { STEPDouble_Offset_Shelled_Solid() : Object("STEPDouble_Offset_Shelled_Solid") {}
		STEPLength_Measure::Out Thickness2;
    };

    // C++ wrapper for STEPDraughting_Annotation_Occurrence
    struct STEPDraughting_Annotation_Occurrence : STEPAnnotation_Occurrence, ObjectHelper<STEPDraughting_Annotation_Occurrence,0> { STEPDraughting_Annotation_Occurrence() : Object("STEPDraughting_Annotation_Occurrence") {}

    };

    // C++ wrapper for STEPDraughting_Elements
    struct STEPDraughting_Elements : STEPDraughting_Callout, ObjectHelper<STEPDraughting_Elements,0> { STEPDraughting_Elements() : Object("STEPDraughting_Elements") {}

    };

    // C++ wrapper for STEPDraughting_Model
    struct STEPDraughting_Model : STEPRepresentation, ObjectHelper<STEPDraughting_Model,0> { STEPDraughting_Model() : Object("STEPDraughting_Model") {}

    };

    // C++ wrapper for STEPPre_Defined_Item
    struct STEPPre_Defined_Item :  ObjectHelper<STEPPre_Defined_Item,1> { STEPPre_Defined_Item() : Object("STEPPre_Defined_Item") {}
		STEPLabel::Out Name;
    };

    // C++ wrapper for STEPDraughting_Subfigure_Representation
    struct STEPDraughting_Subfigure_Representation : STEPSymbol_Representation, ObjectHelper<STEPDraughting_Subfigure_Representation,0> { STEPDraughting_Subfigure_Representation() : Object("STEPDraughting_Subfigure_Representation") {}

    };

    // C++ wrapper for STEPDraughting_Symbol_Representation
    struct STEPDraughting_Symbol_Representation : STEPSymbol_Representation, ObjectHelper<STEPDraughting_Symbol_Representation,0> { STEPDraughting_Symbol_Representation() : Object("STEPDraughting_Symbol_Representation") {}

    };

    // C++ wrapper for STEPText_Literal_With_Delineation
    struct STEPText_Literal_With_Delineation : STEPText_Literal, ObjectHelper<STEPText_Literal_With_Delineation,1> { STEPText_Literal_With_Delineation() : Object("STEPText_Literal_With_Delineation") {}
		STEPText_Delineation::Out Delineation;
    };

    // C++ wrapper for STEPDraughting_Text_Literal_With_Delineation
    struct STEPDraughting_Text_Literal_With_Delineation : STEPText_Literal_With_Delineation, ObjectHelper<STEPDraughting_Text_Literal_With_Delineation,0> { STEPDraughting_Text_Literal_With_Delineation() : Object("STEPDraughting_Text_Literal_With_Delineation") {}

    };

    // C++ wrapper for STEPPresentation_Representation
    struct STEPPresentation_Representation : STEPRepresentation, ObjectHelper<STEPPresentation_Representation,0> { STEPPresentation_Representation() : Object("STEPPresentation_Representation") {}

    };

    // C++ wrapper for STEPPresentation_Area
    struct STEPPresentation_Area : STEPPresentation_Representation, ObjectHelper<STEPPresentation_Area,0> { STEPPresentation_Area() : Object("STEPPresentation_Area") {}

    };

    // C++ wrapper for STEPDrawing_Sheet_Revision
    struct STEPDrawing_Sheet_Revision : STEPPresentation_Area, ObjectHelper<STEPDrawing_Sheet_Revision,1> { STEPDrawing_Sheet_Revision() : Object("STEPDrawing_Sheet_Revision") {}
		STEPIdentifier::Out RevisionIdentifier;
    };

    // C++ wrapper for STEPEdge
    struct STEPEdge : STEPTopological_Representation_Item, ObjectHelper<STEPEdge,2> { STEPEdge() : Object("STEPEdge") {}
		Lazy< STEPVertex > EdgeStart;
		Lazy< STEPVertex > EdgeEnd;
    };

    // C++ wrapper for STEPEdge_Based_Wireframe_Model
    struct STEPEdge_Based_Wireframe_Model : STEPGeometric_Representation_Item, ObjectHelper<STEPEdge_Based_Wireframe_Model,1> { STEPEdge_Based_Wireframe_Model() : Object("STEPEdge_Based_Wireframe_Model") {}
		ListOf< Lazy< STEPConnected_Edge_Set >, 1, 0 > EbwmBoundary;
    };

    // C++ wrapper for STEPEdge_Based_Wireframe_Shape_Representation
    struct STEPEdge_Based_Wireframe_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPEdge_Based_Wireframe_Shape_Representation,0> { STEPEdge_Based_Wireframe_Shape_Representation() : Object("STEPEdge_Based_Wireframe_Shape_Representation") {}

    };

    // C++ wrapper for STEPEdge_Blended_Solid
    struct STEPEdge_Blended_Solid : STEPModified_Solid, ObjectHelper<STEPEdge_Blended_Solid,1> { STEPEdge_Blended_Solid() : Object("STEPEdge_Blended_Solid") {}
		ListOf< Lazy< STEPEdge_Curve >, 1, 0 > BlendedEdges;
    };

    // C++ wrapper for STEPEdge_Curve
    struct STEPEdge_Curve : STEPEdge, STEPGeometric_Representation_Item, ObjectHelper<STEPEdge_Curve,2> { STEPEdge_Curve() : Object("STEPEdge_Curve") {}
		Lazy< STEPCurve > EdgeGeometry;
		BOOLEAN::Out SameSense;
    };

    // C++ wrapper for STEPPath
    struct STEPPath : STEPTopological_Representation_Item, ObjectHelper<STEPPath,1> { STEPPath() : Object("STEPPath") {}
		ListOf< Lazy< STEPOriented_Edge >, 1, 0 > EdgeList;
    };

    // C++ wrapper for STEPLoop
    struct STEPLoop : STEPTopological_Representation_Item, ObjectHelper<STEPLoop,0> { STEPLoop() : Object("STEPLoop") {}

    };

    // C++ wrapper for STEPEdge_Loop
    struct STEPEdge_Loop : STEPLoop, STEPPath, ObjectHelper<STEPEdge_Loop,0> { STEPEdge_Loop() : Object("STEPEdge_Loop") {}

    };

    // C++ wrapper for STEPElectric_Current_Unit
    struct STEPElectric_Current_Unit : STEPNamed_Unit, ObjectHelper<STEPElectric_Current_Unit,0> { STEPElectric_Current_Unit() : Object("STEPElectric_Current_Unit") {}

    };

    // C++ wrapper for STEPElementary_Brep_Shape_Representation
    struct STEPElementary_Brep_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPElementary_Brep_Shape_Representation,0> { STEPElementary_Brep_Shape_Representation() : Object("STEPElementary_Brep_Shape_Representation") {}

    };

    // C++ wrapper for STEPEllipse
    struct STEPEllipse : STEPConic, ObjectHelper<STEPEllipse,2> { STEPEllipse() : Object("STEPEllipse") {}
		STEPPositive_Length_Measure::Out SemiAxis1;
		STEPPositive_Length_Measure::Out SemiAxis2;
    };

    // C++ wrapper for STEPEnum_Reference_Prefix
    struct STEPEnum_Reference_Prefix : STEPDescriptive_Representation_Item, ObjectHelper<STEPEnum_Reference_Prefix,0> { STEPEnum_Reference_Prefix() : Object("STEPEnum_Reference_Prefix") {}

    };

    // C++ wrapper for STEPEvaluated_Characteristic
    struct STEPEvaluated_Characteristic : STEPRepresentation, STEPRepresentation_Relationship, ObjectHelper<STEPEvaluated_Characteristic,0> { STEPEvaluated_Characteristic() : Object("STEPEvaluated_Characteristic") {}

    };

    // C++ wrapper for STEPEvaluated_Degenerate_Pcurve
    struct STEPEvaluated_Degenerate_Pcurve : STEPDegenerate_Pcurve, ObjectHelper<STEPEvaluated_Degenerate_Pcurve,1> { STEPEvaluated_Degenerate_Pcurve() : Object("STEPEvaluated_Degenerate_Pcurve") {}
		Lazy< STEPCartesian_Point > EquivalentPoint;
    };

    // C++ wrapper for STEPExpression_Conversion_Based_Unit
    struct STEPExpression_Conversion_Based_Unit : STEPContext_Dependent_Unit, STEPVariable_Semantics, ObjectHelper<STEPExpression_Conversion_Based_Unit,0> { STEPExpression_Conversion_Based_Unit() : Object("STEPExpression_Conversion_Based_Unit") {}

    };

    // C++ wrapper for STEPExternally_Defined_Context_Dependent_Unit
    struct STEPExternally_Defined_Context_Dependent_Unit : STEPContext_Dependent_Unit, STEPExternally_Defined_Item, ObjectHelper<STEPExternally_Defined_Context_Dependent_Unit,0> { STEPExternally_Defined_Context_Dependent_Unit() : Object("STEPExternally_Defined_Context_Dependent_Unit") {}

    };

    // C++ wrapper for STEPExternally_Defined_Conversion_Based_Unit
    struct STEPExternally_Defined_Conversion_Based_Unit : STEPConversion_Based_Unit, STEPExternally_Defined_Item, ObjectHelper<STEPExternally_Defined_Conversion_Based_Unit,0> { STEPExternally_Defined_Conversion_Based_Unit() : Object("STEPExternally_Defined_Conversion_Based_Unit") {}

    };

    // C++ wrapper for STEPExternally_Defined_Currency
    struct STEPExternally_Defined_Currency : STEPCurrency, STEPExternally_Defined_Context_Dependent_Unit, ObjectHelper<STEPExternally_Defined_Currency,0> { STEPExternally_Defined_Currency() : Object("STEPExternally_Defined_Currency") {}

    };

    // C++ wrapper for STEPExternally_Defined_Hatch_Style
    struct STEPExternally_Defined_Hatch_Style : STEPExternally_Defined_Item, STEPGeometric_Representation_Item, ObjectHelper<STEPExternally_Defined_Hatch_Style,0> { STEPExternally_Defined_Hatch_Style() : Object("STEPExternally_Defined_Hatch_Style") {}

    };

    // C++ wrapper for STEPPicture_Representation_Item
    struct STEPPicture_Representation_Item : STEPBytes_Representation_Item, ObjectHelper<STEPPicture_Representation_Item,0> { STEPPicture_Representation_Item() : Object("STEPPicture_Representation_Item") {}

    };

    // C++ wrapper for STEPExternally_Defined_Picture_Representation_Item
    struct STEPExternally_Defined_Picture_Representation_Item : STEPPicture_Representation_Item, ObjectHelper<STEPExternally_Defined_Picture_Representation_Item,0> { STEPExternally_Defined_Picture_Representation_Item() : Object("STEPExternally_Defined_Picture_Representation_Item") {}

    };

    // C++ wrapper for STEPExternally_Defined_Representation_Item
    struct STEPExternally_Defined_Representation_Item : STEPRepresentation_Item, STEPExternally_Defined_Item, ObjectHelper<STEPExternally_Defined_Representation_Item,0> { STEPExternally_Defined_Representation_Item() : Object("STEPExternally_Defined_Representation_Item") {}

    };

    // C++ wrapper for STEPExternally_Defined_String
    struct STEPExternally_Defined_String : STEPExternally_Defined_Representation_Item, ObjectHelper<STEPExternally_Defined_String,0> { STEPExternally_Defined_String() : Object("STEPExternally_Defined_String") {}

    };

    // C++ wrapper for STEPExternally_Defined_Tile_Style
    struct STEPExternally_Defined_Tile_Style : STEPExternally_Defined_Item, STEPGeometric_Representation_Item, ObjectHelper<STEPExternally_Defined_Tile_Style,0> { STEPExternally_Defined_Tile_Style() : Object("STEPExternally_Defined_Tile_Style") {}

    };

    // C++ wrapper for STEPSwept_Area_Solid
    struct STEPSwept_Area_Solid : STEPSolid_Model, ObjectHelper<STEPSwept_Area_Solid,1> { STEPSwept_Area_Solid() : Object("STEPSwept_Area_Solid") {}
		Lazy< STEPCurve_Bounded_Surface > SweptArea;
    };

    // C++ wrapper for STEPExtruded_Area_Solid
    struct STEPExtruded_Area_Solid : STEPSwept_Area_Solid, ObjectHelper<STEPExtruded_Area_Solid,2> { STEPExtruded_Area_Solid() : Object("STEPExtruded_Area_Solid") {}
		Lazy< STEPDirection > ExtrudedDirection;
		STEPPositive_Length_Measure::Out Depth;
    };

    // C++ wrapper for STEPSwept_Face_Solid
    struct STEPSwept_Face_Solid : STEPSolid_Model, ObjectHelper<STEPSwept_Face_Solid,1> { STEPSwept_Face_Solid() : Object("STEPSwept_Face_Solid") {}
		Lazy< STEPFace_Surface > SweptFace;
    };

    // C++ wrapper for STEPExtruded_Face_Solid
    struct STEPExtruded_Face_Solid : STEPSwept_Face_Solid, ObjectHelper<STEPExtruded_Face_Solid,2> { STEPExtruded_Face_Solid() : Object("STEPExtruded_Face_Solid") {}
		Lazy< STEPDirection > ExtrudedDirection;
		STEPPositive_Length_Measure::Out Depth;
    };

    // C++ wrapper for STEPExtruded_Face_Solid_With_Trim_Conditions
    struct STEPExtruded_Face_Solid_With_Trim_Conditions : STEPExtruded_Face_Solid, ObjectHelper<STEPExtruded_Face_Solid_With_Trim_Conditions,6> { STEPExtruded_Face_Solid_With_Trim_Conditions() : Object("STEPExtruded_Face_Solid_With_Trim_Conditions") {}
		STEPTrim_Condition_Select::Out FirstTrimCondition;
		STEPTrim_Condition_Select::Out SecondTrimCondition;
		STEPTrim_Intent::Out FirstTrimIntent;
		STEPTrim_Intent::Out SecondTrimIntent;
		STEPNon_Negative_Length_Measure::Out FirstOffset;
		STEPNon_Negative_Length_Measure::Out SecondOffset;
    };

    // C++ wrapper for STEPExtruded_Face_Solid_With_Draft_Angle
    struct STEPExtruded_Face_Solid_With_Draft_Angle : STEPExtruded_Face_Solid_With_Trim_Conditions, ObjectHelper<STEPExtruded_Face_Solid_With_Draft_Angle,1> { STEPExtruded_Face_Solid_With_Draft_Angle() : Object("STEPExtruded_Face_Solid_With_Draft_Angle") {}
		STEPPlane_Angle_Measure::Out DraftAngle;
    };

    // C++ wrapper for STEPExtruded_Face_Solid_With_Multiple_Draft_Angles
    struct STEPExtruded_Face_Solid_With_Multiple_Draft_Angles : STEPExtruded_Face_Solid_With_Trim_Conditions, ObjectHelper<STEPExtruded_Face_Solid_With_Multiple_Draft_Angles,1> { STEPExtruded_Face_Solid_With_Multiple_Draft_Angles() : Object("STEPExtruded_Face_Solid_With_Multiple_Draft_Angles") {}
		ListOf< STEPPlane_Angle_Measure, 2, 0 >::Out DraftAngles;
    };

    // C++ wrapper for STEPFace_Based_Surface_Model
    struct STEPFace_Based_Surface_Model : STEPGeometric_Representation_Item, ObjectHelper<STEPFace_Based_Surface_Model,1> { STEPFace_Based_Surface_Model() : Object("STEPFace_Based_Surface_Model") {}
		ListOf< Lazy< STEPConnected_Face_Set >, 1, 0 > FbsmFaces;
    };

    // C++ wrapper for STEPFace_Bound
    struct STEPFace_Bound : STEPTopological_Representation_Item, ObjectHelper<STEPFace_Bound,2> { STEPFace_Bound() : Object("STEPFace_Bound") {}
		Lazy< STEPLoop > Bound;
		BOOLEAN::Out Orientation;
    };

    // C++ wrapper for STEPFace_Outer_Bound
    struct STEPFace_Outer_Bound : STEPFace_Bound, ObjectHelper<STEPFace_Outer_Bound,0> { STEPFace_Outer_Bound() : Object("STEPFace_Outer_Bound") {}

    };

    // C++ wrapper for STEPFaceted_Brep
    struct STEPFaceted_Brep : STEPManifold_Solid_Brep, ObjectHelper<STEPFaceted_Brep,0> { STEPFaceted_Brep() : Object("STEPFaceted_Brep") {}

    };

    // C++ wrapper for STEPFaceted_Brep_Shape_Representation
    struct STEPFaceted_Brep_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPFaceted_Brep_Shape_Representation,0> { STEPFaceted_Brep_Shape_Representation() : Object("STEPFaceted_Brep_Shape_Representation") {}

    };

    // C++ wrapper for STEPFill_Area_Style
    struct STEPFill_Area_Style : STEPFounded_Item, ObjectHelper<STEPFill_Area_Style,2> { STEPFill_Area_Style() : Object("STEPFill_Area_Style") {}
		STEPLabel::Out Name;
		ListOf< STEPFill_Style_Select, 1, 0 >::Out FillStyles;
    };

    // C++ wrapper for STEPFill_Area_Style_Colour
    struct STEPFill_Area_Style_Colour :  ObjectHelper<STEPFill_Area_Style_Colour,2> { STEPFill_Area_Style_Colour() : Object("STEPFill_Area_Style_Colour") {}
		STEPLabel::Out Name;
		Lazy< STEPColour > FillColour;
    };

    // C++ wrapper for STEPFill_Area_Style_Hatching
    struct STEPFill_Area_Style_Hatching : STEPGeometric_Representation_Item, ObjectHelper<STEPFill_Area_Style_Hatching,5> { STEPFill_Area_Style_Hatching() : Object("STEPFill_Area_Style_Hatching") {}
		Lazy< NotImplemented > HatchLineAppearance;
		Lazy< STEPOne_Direction_Repeat_Factor > StartOfNextHatchLine;
		Lazy< STEPCartesian_Point > PointOfReferenceHatchLine;
		Lazy< STEPCartesian_Point > PatternStart;
		STEPPlane_Angle_Measure::Out HatchLineAngle;
    };

    // C++ wrapper for STEPFill_Area_Style_Tile_Coloured_Region
    struct STEPFill_Area_Style_Tile_Coloured_Region : STEPGeometric_Representation_Item, ObjectHelper<STEPFill_Area_Style_Tile_Coloured_Region,2> { STEPFill_Area_Style_Tile_Coloured_Region() : Object("STEPFill_Area_Style_Tile_Coloured_Region") {}
		STEPCurve_Or_Annotation_Curve_Occurrence::Out ClosedCurve;
		Lazy< STEPColour > RegionColour;
    };

    // C++ wrapper for STEPFill_Area_Style_Tile_Curve_With_Style
    struct STEPFill_Area_Style_Tile_Curve_With_Style : STEPGeometric_Representation_Item, ObjectHelper<STEPFill_Area_Style_Tile_Curve_With_Style,1> { STEPFill_Area_Style_Tile_Curve_With_Style() : Object("STEPFill_Area_Style_Tile_Curve_With_Style") {}
		Lazy< STEPAnnotation_Curve_Occurrence > StyledCurve;
    };

    // C++ wrapper for STEPFill_Area_Style_Tile_Symbol_With_Style
    struct STEPFill_Area_Style_Tile_Symbol_With_Style : STEPGeometric_Representation_Item, ObjectHelper<STEPFill_Area_Style_Tile_Symbol_With_Style,1> { STEPFill_Area_Style_Tile_Symbol_With_Style() : Object("STEPFill_Area_Style_Tile_Symbol_With_Style") {}
		Lazy< STEPAnnotation_Symbol_Occurrence > Symbol;
    };

    // C++ wrapper for STEPFill_Area_Style_Tiles
    struct STEPFill_Area_Style_Tiles : STEPGeometric_Representation_Item, ObjectHelper<STEPFill_Area_Style_Tiles,3> { STEPFill_Area_Style_Tiles() : Object("STEPFill_Area_Style_Tiles") {}
		Lazy< STEPTwo_Direction_Repeat_Factor > TilingPattern;
		ListOf< STEPFill_Area_Style_Tile_Shape_Select, 1, 0 >::Out Tiles;
		STEPPositive_Ratio_Measure::Out TilingScale;
    };

    // C++ wrapper for STEPForward_Chaining_Rule_Premise
    struct STEPForward_Chaining_Rule_Premise : STEPProperty_Definition, STEPProperty_Definition_Representation, STEPRepresentation, ObjectHelper<STEPForward_Chaining_Rule_Premise,0> { STEPForward_Chaining_Rule_Premise() : Object("STEPForward_Chaining_Rule_Premise") {}

    };

    // C++ wrapper for STEPFunc
    struct STEPFunc : STEPCompound_Representation_Item, ObjectHelper<STEPFunc,0> { STEPFunc() : Object("STEPFunc") {}

    };

    // C++ wrapper for STEPGeometric_Set
    struct STEPGeometric_Set : STEPGeometric_Representation_Item, ObjectHelper<STEPGeometric_Set,1> { STEPGeometric_Set() : Object("STEPGeometric_Set") {}
		ListOf< STEPGeometric_Set_Select, 1, 0 >::Out Elements;
    };

    // C++ wrapper for STEPGeometric_Curve_Set
    struct STEPGeometric_Curve_Set : STEPGeometric_Set, ObjectHelper<STEPGeometric_Curve_Set,0> { STEPGeometric_Curve_Set() : Object("STEPGeometric_Curve_Set") {}

    };

    // C++ wrapper for STEPGeometric_Model_Element_Relationship
    struct STEPGeometric_Model_Element_Relationship : STEPGeometric_Representation_Item, STEPRepresentation_Item_Relationship, ObjectHelper<STEPGeometric_Model_Element_Relationship,0> { STEPGeometric_Model_Element_Relationship() : Object("STEPGeometric_Model_Element_Relationship") {}

    };

    // C++ wrapper for STEPRepresentation_Context
    struct STEPRepresentation_Context :  ObjectHelper<STEPRepresentation_Context,2> { STEPRepresentation_Context() : Object("STEPRepresentation_Context") {}
		STEPIdentifier::Out ContextIdentifier;
		STEPText::Out ContextType;
    };

    // C++ wrapper for STEPGeometric_Representation_Context
    struct STEPGeometric_Representation_Context : STEPRepresentation_Context, ObjectHelper<STEPGeometric_Representation_Context,1> { STEPGeometric_Representation_Context() : Object("STEPGeometric_Representation_Context") {}
		STEPDimension_Count::Out CoordinateSpaceDimension;
    };

    // C++ wrapper for STEPGeometrical_Tolerance_Callout
    struct STEPGeometrical_Tolerance_Callout : STEPDraughting_Callout, ObjectHelper<STEPGeometrical_Tolerance_Callout,0> { STEPGeometrical_Tolerance_Callout() : Object("STEPGeometrical_Tolerance_Callout") {}

    };

    // C++ wrapper for STEPGeometrically_Bounded_2d_Wireframe_Representation
    struct STEPGeometrically_Bounded_2d_Wireframe_Representation : STEPShape_Representation, ObjectHelper<STEPGeometrically_Bounded_2d_Wireframe_Representation,0> { STEPGeometrically_Bounded_2d_Wireframe_Representation() : Object("STEPGeometrically_Bounded_2d_Wireframe_Representation") {}

    };

    // C++ wrapper for STEPGeometrically_Bounded_Surface_Shape_Representation
    struct STEPGeometrically_Bounded_Surface_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPGeometrically_Bounded_Surface_Shape_Representation,0> { STEPGeometrically_Bounded_Surface_Shape_Representation() : Object("STEPGeometrically_Bounded_Surface_Shape_Representation") {}

    };

    // C++ wrapper for STEPGeometrically_Bounded_Wireframe_Shape_Representation
    struct STEPGeometrically_Bounded_Wireframe_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPGeometrically_Bounded_Wireframe_Shape_Representation,0> { STEPGeometrically_Bounded_Wireframe_Shape_Representation() : Object("STEPGeometrically_Bounded_Wireframe_Shape_Representation") {}

    };

    // C++ wrapper for STEPGlobal_Uncertainty_Assigned_Context
    struct STEPGlobal_Uncertainty_Assigned_Context : STEPRepresentation_Context, ObjectHelper<STEPGlobal_Uncertainty_Assigned_Context,1> { STEPGlobal_Uncertainty_Assigned_Context() : Object("STEPGlobal_Uncertainty_Assigned_Context") {}
		ListOf< Lazy< NotImplemented >, 1, 0 > Uncertainty;
    };

    // C++ wrapper for STEPGlobal_Unit_Assigned_Context
    struct STEPGlobal_Unit_Assigned_Context : STEPRepresentation_Context, ObjectHelper<STEPGlobal_Unit_Assigned_Context,1> { STEPGlobal_Unit_Assigned_Context() : Object("STEPGlobal_Unit_Assigned_Context") {}
		ListOf< STEPUnit, 1, 0 >::Out Units;
    };

    // C++ wrapper for STEPGround_Fact
    struct STEPGround_Fact : STEPAtomic_Formula, ObjectHelper<STEPGround_Fact,0> { STEPGround_Fact() : Object("STEPGround_Fact") {}

    };

    // C++ wrapper for STEPHardness_Representation
    struct STEPHardness_Representation : STEPRepresentation, ObjectHelper<STEPHardness_Representation,0> { STEPHardness_Representation() : Object("STEPHardness_Representation") {}

    };

    // C++ wrapper for STEPHidden_Element_Over_Riding_Styled_Item
    struct STEPHidden_Element_Over_Riding_Styled_Item : STEPContext_Dependent_Over_Riding_Styled_Item, ObjectHelper<STEPHidden_Element_Over_Riding_Styled_Item,0> { STEPHidden_Element_Over_Riding_Styled_Item() : Object("STEPHidden_Element_Over_Riding_Styled_Item") {}

    };

    // C++ wrapper for STEPHyperbola
    struct STEPHyperbola : STEPConic, ObjectHelper<STEPHyperbola,2> { STEPHyperbola() : Object("STEPHyperbola") {}
		STEPPositive_Length_Measure::Out SemiAxis;
		STEPPositive_Length_Measure::Out SemiImagAxis;
    };

    // C++ wrapper for STEPIncluded_Text_Block
    struct STEPIncluded_Text_Block : STEPMapped_Item, ObjectHelper<STEPIncluded_Text_Block,0> { STEPIncluded_Text_Block() : Object("STEPIncluded_Text_Block") {}

    };

    // C++ wrapper for STEPUser_Selected_Elements
    struct STEPUser_Selected_Elements : STEPRepresentation_Item, ObjectHelper<STEPUser_Selected_Elements,1> { STEPUser_Selected_Elements() : Object("STEPUser_Selected_Elements") {}
		ListOf< Lazy< STEPRepresentation_Item >, 1, 0 > PickedItems;
    };

    // C++ wrapper for STEPIndirectly_Selected_Elements
    struct STEPIndirectly_Selected_Elements : STEPUser_Selected_Elements, ObjectHelper<STEPIndirectly_Selected_Elements,1> { STEPIndirectly_Selected_Elements() : Object("STEPIndirectly_Selected_Elements") {}
		ListOf< Lazy< STEPRepresentation_Item >, 1, 0 > IndirectlyPickedItems;
    };

    // C++ wrapper for STEPUser_Selected_Shape_Elements
    struct STEPUser_Selected_Shape_Elements : STEPUser_Selected_Elements, ObjectHelper<STEPUser_Selected_Shape_Elements,0> { STEPUser_Selected_Shape_Elements() : Object("STEPUser_Selected_Shape_Elements") {}

    };

    // C++ wrapper for STEPIndirectly_Selected_Shape_Elements
    struct STEPIndirectly_Selected_Shape_Elements : STEPIndirectly_Selected_Elements, STEPUser_Selected_Shape_Elements, ObjectHelper<STEPIndirectly_Selected_Shape_Elements,0> { STEPIndirectly_Selected_Shape_Elements() : Object("STEPIndirectly_Selected_Shape_Elements") {}

    };

    // C++ wrapper for STEPInteger_Representation_Item
    struct STEPInteger_Representation_Item : STEPRepresentation_Item, STEPInt_Literal, ObjectHelper<STEPInteger_Representation_Item,0> { STEPInteger_Representation_Item() : Object("STEPInteger_Representation_Item") {}

    };

    // C++ wrapper for STEPIntersection_Curve
    struct STEPIntersection_Curve : STEPSurface_Curve, ObjectHelper<STEPIntersection_Curve,0> { STEPIntersection_Curve() : Object("STEPIntersection_Curve") {}

    };

    // C++ wrapper for STEPIso4217_Currency
    struct STEPIso4217_Currency : STEPCurrency, ObjectHelper<STEPIso4217_Currency,0> { STEPIso4217_Currency() : Object("STEPIso4217_Currency") {}

    };

    // C++ wrapper for STEPLeader_Curve
    struct STEPLeader_Curve : STEPAnnotation_Curve_Occurrence, ObjectHelper<STEPLeader_Curve,0> { STEPLeader_Curve() : Object("STEPLeader_Curve") {}

    };

    // C++ wrapper for STEPLeader_Directed_Callout
    struct STEPLeader_Directed_Callout : STEPDraughting_Callout, ObjectHelper<STEPLeader_Directed_Callout,0> { STEPLeader_Directed_Callout() : Object("STEPLeader_Directed_Callout") {}

    };

    // C++ wrapper for STEPLeader_Directed_Dimension
    struct STEPLeader_Directed_Dimension : STEPLeader_Directed_Callout, ObjectHelper<STEPLeader_Directed_Dimension,0> { STEPLeader_Directed_Dimension() : Object("STEPLeader_Directed_Dimension") {}

    };

    // C++ wrapper for STEPLeader_Terminator
    struct STEPLeader_Terminator : STEPTerminator_Symbol, ObjectHelper<STEPLeader_Terminator,0> { STEPLeader_Terminator() : Object("STEPLeader_Terminator") {}

    };

    // C++ wrapper for STEPLength_Unit
    struct STEPLength_Unit : STEPNamed_Unit, ObjectHelper<STEPLength_Unit,0> { STEPLength_Unit() : Object("STEPLength_Unit") {}

    };

    // C++ wrapper for STEPLight_Source
    struct STEPLight_Source : STEPGeometric_Representation_Item, ObjectHelper<STEPLight_Source,1> { STEPLight_Source() : Object("STEPLight_Source") {}
		Lazy< STEPColour > LightColour;
    };

    // C++ wrapper for STEPLight_Source_Ambient
    struct STEPLight_Source_Ambient : STEPLight_Source, ObjectHelper<STEPLight_Source_Ambient,0> { STEPLight_Source_Ambient() : Object("STEPLight_Source_Ambient") {}

    };

    // C++ wrapper for STEPLight_Source_Directional
    struct STEPLight_Source_Directional : STEPLight_Source, ObjectHelper<STEPLight_Source_Directional,1> { STEPLight_Source_Directional() : Object("STEPLight_Source_Directional") {}
		Lazy< STEPDirection > Orientation;
    };

    // C++ wrapper for STEPLight_Source_Positional
    struct STEPLight_Source_Positional : STEPLight_Source, ObjectHelper<STEPLight_Source_Positional,3> { STEPLight_Source_Positional() : Object("STEPLight_Source_Positional") {}
		Lazy< STEPCartesian_Point > Position;
		REAL::Out ConstantAttenuation;
		REAL::Out DistanceAttenuation;
    };

    // C++ wrapper for STEPLight_Source_Spot
    struct STEPLight_Source_Spot : STEPLight_Source, ObjectHelper<STEPLight_Source_Spot,6> { STEPLight_Source_Spot() : Object("STEPLight_Source_Spot") {}
		Lazy< STEPCartesian_Point > Position;
		Lazy< STEPDirection > Orientation;
		REAL::Out ConcentrationExponent;
		REAL::Out ConstantAttenuation;
		REAL::Out DistanceAttenuation;
		STEPPositive_Plane_Angle_Measure::Out SpreadAngle;
    };

    // C++ wrapper for STEPLine
    struct STEPLine : STEPCurve, ObjectHelper<STEPLine,2> { STEPLine() : Object("STEPLine") {}
		Lazy< STEPCartesian_Point > Pnt;
		Lazy< STEPVector > Dir;
    };

    // C++ wrapper for STEPLinear_Dimension
    struct STEPLinear_Dimension : STEPDimension_Curve_Directed_Callout, ObjectHelper<STEPLinear_Dimension,0> { STEPLinear_Dimension() : Object("STEPLinear_Dimension") {}

    };

    // C++ wrapper for STEPSimple_Clause
    struct STEPSimple_Clause : STEPCompound_Representation_Item, ObjectHelper<STEPSimple_Clause,0> { STEPSimple_Clause() : Object("STEPSimple_Clause") {}

    };

    // C++ wrapper for STEPLiteral_Conjunction
    struct STEPLiteral_Conjunction : STEPSimple_Clause, ObjectHelper<STEPLiteral_Conjunction,0> { STEPLiteral_Conjunction() : Object("STEPLiteral_Conjunction") {}

    };

    // C++ wrapper for STEPLiteral_Disjunction
    struct STEPLiteral_Disjunction : STEPSimple_Clause, ObjectHelper<STEPLiteral_Disjunction,0> { STEPLiteral_Disjunction() : Object("STEPLiteral_Disjunction") {}

    };

    // C++ wrapper for STEPLogical_Representation_Item
    struct STEPLogical_Representation_Item : STEPRepresentation_Item, STEPLogical_Literal, ObjectHelper<STEPLogical_Representation_Item,0> { STEPLogical_Representation_Item() : Object("STEPLogical_Representation_Item") {}

    };

    // C++ wrapper for STEPLuminous_Flux_Unit
    struct STEPLuminous_Flux_Unit : STEPNamed_Unit, ObjectHelper<STEPLuminous_Flux_Unit,0> { STEPLuminous_Flux_Unit() : Object("STEPLuminous_Flux_Unit") {}

    };

    // C++ wrapper for STEPLuminous_Intensity_Unit
    struct STEPLuminous_Intensity_Unit : STEPNamed_Unit, ObjectHelper<STEPLuminous_Intensity_Unit,0> { STEPLuminous_Intensity_Unit() : Object("STEPLuminous_Intensity_Unit") {}

    };

    // C++ wrapper for STEPManifold_Subsurface_Shape_Representation
    struct STEPManifold_Subsurface_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPManifold_Subsurface_Shape_Representation,0> { STEPManifold_Subsurface_Shape_Representation() : Object("STEPManifold_Subsurface_Shape_Representation") {}

    };

    // C++ wrapper for STEPManifold_Surface_Shape_Representation
    struct STEPManifold_Surface_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPManifold_Surface_Shape_Representation,0> { STEPManifold_Surface_Shape_Representation() : Object("STEPManifold_Surface_Shape_Representation") {}

    };

    // C++ wrapper for STEPMass_Unit
    struct STEPMass_Unit : STEPNamed_Unit, ObjectHelper<STEPMass_Unit,0> { STEPMass_Unit() : Object("STEPMass_Unit") {}

    };

    // C++ wrapper for STEPMeasure_Representation_Item
    struct STEPMeasure_Representation_Item : STEPRepresentation_Item, STEPMeasure_With_Unit, ObjectHelper<STEPMeasure_Representation_Item,0> { STEPMeasure_Representation_Item() : Object("STEPMeasure_Representation_Item") {}

    };

    // C++ wrapper for STEPMechanical_Design_Geometric_Presentation_Area
    struct STEPMechanical_Design_Geometric_Presentation_Area : STEPPresentation_Area, ObjectHelper<STEPMechanical_Design_Geometric_Presentation_Area,0> { STEPMechanical_Design_Geometric_Presentation_Area() : Object("STEPMechanical_Design_Geometric_Presentation_Area") {}

    };

    // C++ wrapper for STEPMechanical_Design_Geometric_Presentation_Representation
    struct STEPMechanical_Design_Geometric_Presentation_Representation : STEPRepresentation, ObjectHelper<STEPMechanical_Design_Geometric_Presentation_Representation,0> { STEPMechanical_Design_Geometric_Presentation_Representation() : Object("STEPMechanical_Design_Geometric_Presentation_Representation") {}

    };

    // C++ wrapper for STEPMechanical_Design_Presentation_Representation_With_Draughting
    struct STEPMechanical_Design_Presentation_Representation_With_Draughting : STEPRepresentation, ObjectHelper<STEPMechanical_Design_Presentation_Representation_With_Draughting,0> { STEPMechanical_Design_Presentation_Representation_With_Draughting() : Object("STEPMechanical_Design_Presentation_Representation_With_Draughting") {}

    };

    // C++ wrapper for STEPMechanical_Design_Shaded_Presentation_Area
    struct STEPMechanical_Design_Shaded_Presentation_Area : STEPPresentation_Area, ObjectHelper<STEPMechanical_Design_Shaded_Presentation_Area,0> { STEPMechanical_Design_Shaded_Presentation_Area() : Object("STEPMechanical_Design_Shaded_Presentation_Area") {}

    };

    // C++ wrapper for STEPMechanical_Design_Shaded_Presentation_Representation
    struct STEPMechanical_Design_Shaded_Presentation_Representation : STEPRepresentation, ObjectHelper<STEPMechanical_Design_Shaded_Presentation_Representation,0> { STEPMechanical_Design_Shaded_Presentation_Representation() : Object("STEPMechanical_Design_Shaded_Presentation_Representation") {}

    };

    // C++ wrapper for STEPMin_And_Major_Ply_Orientation_Basis
    struct STEPMin_And_Major_Ply_Orientation_Basis : STEPRepresentation_Item_Relationship, STEPGeometric_Representation_Item, ObjectHelper<STEPMin_And_Major_Ply_Orientation_Basis,0> { STEPMin_And_Major_Ply_Orientation_Basis() : Object("STEPMin_And_Major_Ply_Orientation_Basis") {}

    };

    // C++ wrapper for STEPModified_Solid_With_Placed_Configuration
    struct STEPModified_Solid_With_Placed_Configuration : STEPModified_Solid, ObjectHelper<STEPModified_Solid_With_Placed_Configuration,1> { STEPModified_Solid_With_Placed_Configuration() : Object("STEPModified_Solid_With_Placed_Configuration") {}
		Lazy< STEPAxis2_Placement_3d > Placing;
    };

    // C++ wrapper for STEPMoments_Of_Inertia_Representation
    struct STEPMoments_Of_Inertia_Representation : STEPRepresentation, ObjectHelper<STEPMoments_Of_Inertia_Representation,0> { STEPMoments_Of_Inertia_Representation() : Object("STEPMoments_Of_Inertia_Representation") {}

    };

    // C++ wrapper for STEPNon_Manifold_Surface_Shape_Representation
    struct STEPNon_Manifold_Surface_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPNon_Manifold_Surface_Shape_Representation,0> { STEPNon_Manifold_Surface_Shape_Representation() : Object("STEPNon_Manifold_Surface_Shape_Representation") {}

    };

    // C++ wrapper for STEPNull_Representation_Item
    struct STEPNull_Representation_Item : STEPRepresentation_Item, ObjectHelper<STEPNull_Representation_Item,0> { STEPNull_Representation_Item() : Object("STEPNull_Representation_Item") {}

    };

    // C++ wrapper for STEPOffset_Curve_2d
    struct STEPOffset_Curve_2d : STEPCurve, ObjectHelper<STEPOffset_Curve_2d,3> { STEPOffset_Curve_2d() : Object("STEPOffset_Curve_2d") {}
		Lazy< STEPCurve > BasisCurve;
		STEPLength_Measure::Out Distance;
		LOGICAL::Out SelfIntersect;
    };

    // C++ wrapper for STEPOffset_Curve_3d
    struct STEPOffset_Curve_3d : STEPCurve, ObjectHelper<STEPOffset_Curve_3d,4> { STEPOffset_Curve_3d() : Object("STEPOffset_Curve_3d") {}
		Lazy< STEPCurve > BasisCurve;
		STEPLength_Measure::Out Distance;
		LOGICAL::Out SelfIntersect;
		Lazy< STEPDirection > RefDirection;
    };

    // C++ wrapper for STEPOffset_Surface
    struct STEPOffset_Surface : STEPSurface, ObjectHelper<STEPOffset_Surface,3> { STEPOffset_Surface() : Object("STEPOffset_Surface") {}
		Lazy< STEPSurface > BasisSurface;
		STEPLength_Measure::Out Distance;
		LOGICAL::Out SelfIntersect;
    };

    // C++ wrapper for STEPOne_Direction_Repeat_Factor
    struct STEPOne_Direction_Repeat_Factor : STEPGeometric_Representation_Item, ObjectHelper<STEPOne_Direction_Repeat_Factor,1> { STEPOne_Direction_Repeat_Factor() : Object("STEPOne_Direction_Repeat_Factor") {}
		Lazy< STEPVector > RepeatFactor;
    };

    // C++ wrapper for STEPOpen_Shell
    struct STEPOpen_Shell : STEPConnected_Face_Set, ObjectHelper<STEPOpen_Shell,0> { STEPOpen_Shell() : Object("STEPOpen_Shell") {}

    };

    // C++ wrapper for STEPProjection_Directed_Callout
    struct STEPProjection_Directed_Callout : STEPDraughting_Callout, ObjectHelper<STEPProjection_Directed_Callout,0> { STEPProjection_Directed_Callout() : Object("STEPProjection_Directed_Callout") {}

    };

    // C++ wrapper for STEPOrdinate_Dimension
    struct STEPOrdinate_Dimension : STEPProjection_Directed_Callout, ObjectHelper<STEPOrdinate_Dimension,0> { STEPOrdinate_Dimension() : Object("STEPOrdinate_Dimension") {}

    };

    // C++ wrapper for STEPOriented_Closed_Shell
    struct STEPOriented_Closed_Shell : STEPClosed_Shell, ObjectHelper<STEPOriented_Closed_Shell,2> { STEPOriented_Closed_Shell() : Object("STEPOriented_Closed_Shell") {}
		Lazy< STEPClosed_Shell > ClosedShellElement;
		BOOLEAN::Out Orientation;
    };

    // C++ wrapper for STEPOriented_Edge
    struct STEPOriented_Edge : STEPEdge, ObjectHelper<STEPOriented_Edge,2> { STEPOriented_Edge() : Object("STEPOriented_Edge") {}
		Lazy< STEPEdge > EdgeElement;
		BOOLEAN::Out Orientation;
    };

    // C++ wrapper for STEPOriented_Face
    struct STEPOriented_Face : STEPFace, ObjectHelper<STEPOriented_Face,2> { STEPOriented_Face() : Object("STEPOriented_Face") {}
		Lazy< STEPFace > FaceElement;
		BOOLEAN::Out Orientation;
    };

    // C++ wrapper for STEPOriented_Open_Shell
    struct STEPOriented_Open_Shell : STEPOpen_Shell, ObjectHelper<STEPOriented_Open_Shell,2> { STEPOriented_Open_Shell() : Object("STEPOriented_Open_Shell") {}
		Lazy< STEPOpen_Shell > OpenShellElement;
		BOOLEAN::Out Orientation;
    };

    // C++ wrapper for STEPOriented_Path
    struct STEPOriented_Path : STEPPath, ObjectHelper<STEPOriented_Path,2> { STEPOriented_Path() : Object("STEPOriented_Path") {}
		Lazy< STEPPath > PathElement;
		BOOLEAN::Out Orientation;
    };

    // C++ wrapper for STEPOriented_Surface
    struct STEPOriented_Surface : STEPSurface, ObjectHelper<STEPOriented_Surface,1> { STEPOriented_Surface() : Object("STEPOriented_Surface") {}
		BOOLEAN::Out Orientation;
    };

    // C++ wrapper for STEPOuter_Boundary_Curve
    struct STEPOuter_Boundary_Curve : STEPBoundary_Curve, ObjectHelper<STEPOuter_Boundary_Curve,0> { STEPOuter_Boundary_Curve() : Object("STEPOuter_Boundary_Curve") {}

    };

    // C++ wrapper for STEPParabola
    struct STEPParabola : STEPConic, ObjectHelper<STEPParabola,1> { STEPParabola() : Object("STEPParabola") {}
		STEPLength_Measure::Out FocalDist;
    };

    // C++ wrapper for STEPParametric_Representation_Context
    struct STEPParametric_Representation_Context : STEPRepresentation_Context, ObjectHelper<STEPParametric_Representation_Context,0> { STEPParametric_Representation_Context() : Object("STEPParametric_Representation_Context") {}

    };

    // C++ wrapper for STEPPresentation_View
    struct STEPPresentation_View : STEPPresentation_Representation, ObjectHelper<STEPPresentation_View,0> { STEPPresentation_View() : Object("STEPPresentation_View") {}

    };

    // C++ wrapper for STEPPicture_Representation
    struct STEPPicture_Representation : STEPPresentation_View, ObjectHelper<STEPPicture_Representation,0> { STEPPicture_Representation() : Object("STEPPicture_Representation") {}

    };

    // C++ wrapper for STEPPlanar_Extent
    struct STEPPlanar_Extent : STEPGeometric_Representation_Item, ObjectHelper<STEPPlanar_Extent,2> { STEPPlanar_Extent() : Object("STEPPlanar_Extent") {}
		STEPLength_Measure::Out SizeInX;
		STEPLength_Measure::Out SizeInY;
    };

    // C++ wrapper for STEPPlanar_Box
    struct STEPPlanar_Box : STEPPlanar_Extent, ObjectHelper<STEPPlanar_Box,1> { STEPPlanar_Box() : Object("STEPPlanar_Box") {}
		STEPAxis2_Placement::Out Placement;
    };

    // C++ wrapper for STEPPlane
    struct STEPPlane : STEPElementary_Surface, ObjectHelper<STEPPlane,0> { STEPPlane() : Object("STEPPlane") {}

    };

    // C++ wrapper for STEPPlane_Angle_Unit
    struct STEPPlane_Angle_Unit : STEPNamed_Unit, ObjectHelper<STEPPlane_Angle_Unit,0> { STEPPlane_Angle_Unit() : Object("STEPPlane_Angle_Unit") {}

    };

    // C++ wrapper for STEPPoint_And_Vector
    struct STEPPoint_And_Vector : STEPCompound_Representation_Item, STEPGeometric_Representation_Item, ObjectHelper<STEPPoint_And_Vector,0> { STEPPoint_And_Vector() : Object("STEPPoint_And_Vector") {}

    };

    // C++ wrapper for STEPPoint_On_Curve
    struct STEPPoint_On_Curve : STEPPoint, ObjectHelper<STEPPoint_On_Curve,2> { STEPPoint_On_Curve() : Object("STEPPoint_On_Curve") {}
		Lazy< STEPCurve > BasisCurve;
		STEPParameter_Value::Out PointParameter;
    };

    // C++ wrapper for STEPPoint_On_Surface
    struct STEPPoint_On_Surface : STEPPoint, ObjectHelper<STEPPoint_On_Surface,3> { STEPPoint_On_Surface() : Object("STEPPoint_On_Surface") {}
		Lazy< STEPSurface > BasisSurface;
		STEPParameter_Value::Out PointParameterU;
		STEPParameter_Value::Out PointParameterV;
    };

    // C++ wrapper for STEPPoint_Path
    struct STEPPoint_Path : STEPCompound_Representation_Item, STEPGeometric_Representation_Item, ObjectHelper<STEPPoint_Path,0> { STEPPoint_Path() : Object("STEPPoint_Path") {}

    };

    // C++ wrapper for STEPPoint_Replica
    struct STEPPoint_Replica : STEPPoint, ObjectHelper<STEPPoint_Replica,2> { STEPPoint_Replica() : Object("STEPPoint_Replica") {}
		Lazy< STEPPoint > ParentPt;
		Lazy< STEPCartesian_Transformation_Operator > Transformation;
    };

    // C++ wrapper for STEPPoly_Loop
    struct STEPPoly_Loop : STEPLoop, STEPGeometric_Representation_Item, ObjectHelper<STEPPoly_Loop,1> { STEPPoly_Loop() : Object("STEPPoly_Loop") {}
		ListOf< Lazy< STEPCartesian_Point >, 3, 0 > Polygon;
    };

    // C++ wrapper for STEPPolyline
    struct STEPPolyline : STEPBounded_Curve, ObjectHelper<STEPPolyline,1> { STEPPolyline() : Object("STEPPolyline") {}
		ListOf< Lazy< STEPCartesian_Point >, 2, 0 > Points;
    };

    // C++ wrapper for STEPPositioned_Sketch
    struct STEPPositioned_Sketch : STEPGeometric_Representation_Item, ObjectHelper<STEPPositioned_Sketch,2> { STEPPositioned_Sketch() : Object("STEPPositioned_Sketch") {}
		STEPSketch_Basis_Select::Out SketchBasis;
		ListOf< Lazy< STEPAuxiliary_Geometric_Representation_Item >, 0, 0 > AuxiliaryElements;
    };

    // C++ wrapper for STEPPre_Defined_Surface_Side_Style
    struct STEPPre_Defined_Surface_Side_Style : STEPPre_Defined_Item, ObjectHelper<STEPPre_Defined_Surface_Side_Style,0> { STEPPre_Defined_Surface_Side_Style() : Object("STEPPre_Defined_Surface_Side_Style") {}

    };

    // C++ wrapper for STEPPredefined_Picture_Representation_Item
    struct STEPPredefined_Picture_Representation_Item : STEPPicture_Representation_Item, ObjectHelper<STEPPredefined_Picture_Representation_Item,0> { STEPPredefined_Picture_Representation_Item() : Object("STEPPredefined_Picture_Representation_Item") {}

    };

    // C++ wrapper for STEPPresentation_Style_Assignment
    struct STEPPresentation_Style_Assignment : STEPFounded_Item, ObjectHelper<STEPPresentation_Style_Assignment,1> { STEPPresentation_Style_Assignment() : Object("STEPPresentation_Style_Assignment") {}
		ListOf< STEPPresentation_Style_Select, 1, 0 >::Out Styles;
    };

    // C++ wrapper for STEPPresentation_Style_By_Context
    struct STEPPresentation_Style_By_Context : STEPPresentation_Style_Assignment, ObjectHelper<STEPPresentation_Style_By_Context,1> { STEPPresentation_Style_By_Context() : Object("STEPPresentation_Style_By_Context") {}
		STEPStyle_Context_Select::Out StyleContext;
    };

    // C++ wrapper for STEPProcedural_Representation
    struct STEPProcedural_Representation : STEPRepresentation, ObjectHelper<STEPProcedural_Representation,0> { STEPProcedural_Representation() : Object("STEPProcedural_Representation") {}

    };

    // C++ wrapper for STEPProcedural_Representation_Sequence
    struct STEPProcedural_Representation_Sequence : STEPRepresentation_Item, ObjectHelper<STEPProcedural_Representation_Sequence,3> { STEPProcedural_Representation_Sequence() : Object("STEPProcedural_Representation_Sequence") {}
		ListOf< Lazy< STEPRepresentation_Item >, 1, 0 > Elements;
		ListOf< Lazy< STEPRepresentation_Item >, 0, 0 > SuppressedItems;
		STEPText::Out Rationale;
    };

    // C++ wrapper for STEPProcedural_Shape_Representation
    struct STEPProcedural_Shape_Representation : STEPProcedural_Representation, STEPShape_Representation, ObjectHelper<STEPProcedural_Shape_Representation,0> { STEPProcedural_Shape_Representation() : Object("STEPProcedural_Shape_Representation") {}

    };

    // C++ wrapper for STEPProcedural_Shape_Representation_Sequence
    struct STEPProcedural_Shape_Representation_Sequence : STEPGeometric_Representation_Item, STEPProcedural_Representation_Sequence, ObjectHelper<STEPProcedural_Shape_Representation_Sequence,0> { STEPProcedural_Shape_Representation_Sequence() : Object("STEPProcedural_Shape_Representation_Sequence") {}

    };

    // C++ wrapper for STEPProjection_Curve
    struct STEPProjection_Curve : STEPAnnotation_Curve_Occurrence, ObjectHelper<STEPProjection_Curve,0> { STEPProjection_Curve() : Object("STEPProjection_Curve") {}

    };

    // C++ wrapper for STEPQualified_Representation_Item
    struct STEPQualified_Representation_Item : STEPRepresentation_Item, ObjectHelper<STEPQualified_Representation_Item,1> { STEPQualified_Representation_Item() : Object("STEPQualified_Representation_Item") {}
		ListOf< STEPValue_Qualifier, 1, 0 >::Out Qualifiers;
    };

    // C++ wrapper for STEPQuasi_Uniform_Curve
    struct STEPQuasi_Uniform_Curve : STEPB_Spline_Curve, ObjectHelper<STEPQuasi_Uniform_Curve,0> { STEPQuasi_Uniform_Curve() : Object("STEPQuasi_Uniform_Curve") {}

    };

    // C++ wrapper for STEPQuasi_Uniform_Surface
    struct STEPQuasi_Uniform_Surface : STEPB_Spline_Surface, ObjectHelper<STEPQuasi_Uniform_Surface,0> { STEPQuasi_Uniform_Surface() : Object("STEPQuasi_Uniform_Surface") {}

    };

    // C++ wrapper for STEPRadius_Dimension
    struct STEPRadius_Dimension : STEPDimension_Curve_Directed_Callout, ObjectHelper<STEPRadius_Dimension,0> { STEPRadius_Dimension() : Object("STEPRadius_Dimension") {}

    };

    // C++ wrapper for STEPRange_Characteristic
    struct STEPRange_Characteristic : STEPRepresentation, STEPDescriptive_Representation_Item, ObjectHelper<STEPRange_Characteristic,0> { STEPRange_Characteristic() : Object("STEPRange_Characteristic") {}

    };

    // C++ wrapper for STEPRatio_Unit
    struct STEPRatio_Unit : STEPNamed_Unit, ObjectHelper<STEPRatio_Unit,0> { STEPRatio_Unit() : Object("STEPRatio_Unit") {}

    };

    // C++ wrapper for STEPRational_B_Spline_Curve
    struct STEPRational_B_Spline_Curve : STEPB_Spline_Curve, ObjectHelper<STEPRational_B_Spline_Curve,1> { STEPRational_B_Spline_Curve() : Object("STEPRational_B_Spline_Curve") {}
		ListOf< REAL, 2, 0 >::Out WeightsData;
    };

    // C++ wrapper for STEPRational_B_Spline_Surface
    struct STEPRational_B_Spline_Surface : STEPB_Spline_Surface, ObjectHelper<STEPRational_B_Spline_Surface,0> { STEPRational_B_Spline_Surface() : Object("STEPRational_B_Spline_Surface") {}

    };

    // C++ wrapper for STEPRational_Representation_Item
    struct STEPRational_Representation_Item : STEPRepresentation_Item, STEPSlash_Expression, ObjectHelper<STEPRational_Representation_Item,0> { STEPRational_Representation_Item() : Object("STEPRational_Representation_Item") {}

    };

    // C++ wrapper for STEPReal_Representation_Item
    struct STEPReal_Representation_Item : STEPRepresentation_Item, STEPReal_Literal, ObjectHelper<STEPReal_Representation_Item,0> { STEPReal_Representation_Item() : Object("STEPReal_Representation_Item") {}

    };

    // C++ wrapper for STEPRectangular_Composite_Surface
    struct STEPRectangular_Composite_Surface : STEPBounded_Surface, ObjectHelper<STEPRectangular_Composite_Surface,0> { STEPRectangular_Composite_Surface() : Object("STEPRectangular_Composite_Surface") {}

    };

    // C++ wrapper for STEPRectangular_Trimmed_Surface
    struct STEPRectangular_Trimmed_Surface : STEPBounded_Surface, ObjectHelper<STEPRectangular_Trimmed_Surface,7> { STEPRectangular_Trimmed_Surface() : Object("STEPRectangular_Trimmed_Surface") {}
		Lazy< STEPSurface > BasisSurface;
		STEPParameter_Value::Out U1;
		STEPParameter_Value::Out U2;
		STEPParameter_Value::Out V1;
		STEPParameter_Value::Out V2;
		BOOLEAN::Out Usense;
		BOOLEAN::Out Vsense;
    };

    // C++ wrapper for STEPRep_Item_Group
    struct STEPRep_Item_Group : STEPGroup, STEPRepresentation_Item, ObjectHelper<STEPRep_Item_Group,0> { STEPRep_Item_Group() : Object("STEPRep_Item_Group") {}

    };

    // C++ wrapper for STEPReparametrised_Composite_Curve_Segment
    struct STEPReparametrised_Composite_Curve_Segment : STEPComposite_Curve_Segment, ObjectHelper<STEPReparametrised_Composite_Curve_Segment,1> { STEPReparametrised_Composite_Curve_Segment() : Object("STEPReparametrised_Composite_Curve_Segment") {}
		STEPParameter_Value::Out ParamLength;
    };

    // C++ wrapper for STEPRevolved_Area_Solid
    struct STEPRevolved_Area_Solid : STEPSwept_Area_Solid, ObjectHelper<STEPRevolved_Area_Solid,2> { STEPRevolved_Area_Solid() : Object("STEPRevolved_Area_Solid") {}
		Lazy< STEPAxis1_Placement > Axis;
		STEPPlane_Angle_Measure::Out Angle;
    };

    // C++ wrapper for STEPRevolved_Face_Solid
    struct STEPRevolved_Face_Solid : STEPSwept_Face_Solid, ObjectHelper<STEPRevolved_Face_Solid,2> { STEPRevolved_Face_Solid() : Object("STEPRevolved_Face_Solid") {}
		Lazy< STEPAxis1_Placement > Axis;
		STEPPlane_Angle_Measure::Out Angle;
    };

    // C++ wrapper for STEPRevolved_Face_Solid_With_Trim_Conditions
    struct STEPRevolved_Face_Solid_With_Trim_Conditions : STEPRevolved_Face_Solid, ObjectHelper<STEPRevolved_Face_Solid_With_Trim_Conditions,2> { STEPRevolved_Face_Solid_With_Trim_Conditions() : Object("STEPRevolved_Face_Solid_With_Trim_Conditions") {}
		STEPTrim_Condition_Select::Out FirstTrimCondition;
		STEPTrim_Condition_Select::Out SecondTrimCondition;
    };

    // C++ wrapper for STEPRight_Angular_Wedge
    struct STEPRight_Angular_Wedge : STEPGeometric_Representation_Item, ObjectHelper<STEPRight_Angular_Wedge,5> { STEPRight_Angular_Wedge() : Object("STEPRight_Angular_Wedge") {}
		Lazy< STEPAxis2_Placement_3d > Position;
		STEPPositive_Length_Measure::Out X;
		STEPPositive_Length_Measure::Out Y;
		STEPPositive_Length_Measure::Out Z;
		STEPLength_Measure::Out Ltx;
    };

    // C++ wrapper for STEPRight_Circular_Cone
    struct STEPRight_Circular_Cone : STEPGeometric_Representation_Item, ObjectHelper<STEPRight_Circular_Cone,4> { STEPRight_Circular_Cone() : Object("STEPRight_Circular_Cone") {}
		Lazy< STEPAxis1_Placement > Position;
		STEPPositive_Length_Measure::Out Height;
		STEPLength_Measure::Out Radius;
		STEPPlane_Angle_Measure::Out SemiAngle;
    };

    // C++ wrapper for STEPRight_Circular_Cylinder
    struct STEPRight_Circular_Cylinder : STEPGeometric_Representation_Item, ObjectHelper<STEPRight_Circular_Cylinder,3> { STEPRight_Circular_Cylinder() : Object("STEPRight_Circular_Cylinder") {}
		Lazy< STEPAxis1_Placement > Position;
		STEPPositive_Length_Measure::Out Height;
		STEPPositive_Length_Measure::Out Radius;
    };

    // C++ wrapper for STEPRow_Representation_Item
    struct STEPRow_Representation_Item : STEPCompound_Representation_Item, ObjectHelper<STEPRow_Representation_Item,0> { STEPRow_Representation_Item() : Object("STEPRow_Representation_Item") {}

    };

    // C++ wrapper for STEPRow_Value
    struct STEPRow_Value : STEPCompound_Representation_Item, ObjectHelper<STEPRow_Value,0> { STEPRow_Value() : Object("STEPRow_Value") {}

    };

    // C++ wrapper for STEPRow_Variable
    struct STEPRow_Variable : STEPAbstract_Variable, ObjectHelper<STEPRow_Variable,0> { STEPRow_Variable() : Object("STEPRow_Variable") {}

    };

    // C++ wrapper for STEPRule_Condition
    struct STEPRule_Condition : STEPAtomic_Formula, ObjectHelper<STEPRule_Condition,0> { STEPRule_Condition() : Object("STEPRule_Condition") {}

    };

    // C++ wrapper for STEPSurface_Curve_Swept_Area_Solid
    struct STEPSurface_Curve_Swept_Area_Solid : STEPSwept_Area_Solid, ObjectHelper<STEPSurface_Curve_Swept_Area_Solid,4> { STEPSurface_Curve_Swept_Area_Solid() : Object("STEPSurface_Curve_Swept_Area_Solid") {}
		Lazy< STEPCurve > Directrix;
		REAL::Out StartParam;
		REAL::Out EndParam;
		Lazy< STEPSurface > ReferenceSurface;
    };

    // C++ wrapper for STEPRuled_Surface_Swept_Area_Solid
    struct STEPRuled_Surface_Swept_Area_Solid : STEPSurface_Curve_Swept_Area_Solid, ObjectHelper<STEPRuled_Surface_Swept_Area_Solid,0> { STEPRuled_Surface_Swept_Area_Solid() : Object("STEPRuled_Surface_Swept_Area_Solid") {}

    };

    // C++ wrapper for STEPScalar_Variable
    struct STEPScalar_Variable : STEPAbstract_Variable, ObjectHelper<STEPScalar_Variable,0> { STEPScalar_Variable() : Object("STEPScalar_Variable") {}

    };

    // C++ wrapper for STEPSculptured_Solid
    struct STEPSculptured_Solid : STEPModified_Solid, ObjectHelper<STEPSculptured_Solid,2> { STEPSculptured_Solid() : Object("STEPSculptured_Solid") {}
		STEPGeneralized_Surface_Select::Out SculpturingElement;
		BOOLEAN::Out PositiveSide;
    };

    // C++ wrapper for STEPSeam_Curve
    struct STEPSeam_Curve : STEPSurface_Curve, ObjectHelper<STEPSeam_Curve,0> { STEPSeam_Curve() : Object("STEPSeam_Curve") {}

    };

    // C++ wrapper for STEPShape_Definition_Representation
    struct STEPShape_Definition_Representation : STEPProperty_Definition_Representation, ObjectHelper<STEPShape_Definition_Representation,0> { STEPShape_Definition_Representation() : Object("STEPShape_Definition_Representation") {}

    };

    // C++ wrapper for STEPShape_Dimension_Representation
    struct STEPShape_Dimension_Representation : STEPShape_Representation, ObjectHelper<STEPShape_Dimension_Representation,0> { STEPShape_Dimension_Representation() : Object("STEPShape_Dimension_Representation") {}

    };

    // C++ wrapper for STEPShape_Representation_With_Parameters
    struct STEPShape_Representation_With_Parameters : STEPShape_Representation, ObjectHelper<STEPShape_Representation_With_Parameters,0> { STEPShape_Representation_With_Parameters() : Object("STEPShape_Representation_With_Parameters") {}

    };

    // C++ wrapper for STEPShell_Based_Surface_Model
    struct STEPShell_Based_Surface_Model : STEPGeometric_Representation_Item, ObjectHelper<STEPShell_Based_Surface_Model,1> { STEPShell_Based_Surface_Model() : Object("STEPShell_Based_Surface_Model") {}
		ListOf< STEPShell, 1, 0 >::Out SbsmBoundary;
    };

    // C++ wrapper for STEPShell_Based_Wireframe_Model
    struct STEPShell_Based_Wireframe_Model : STEPGeometric_Representation_Item, ObjectHelper<STEPShell_Based_Wireframe_Model,1> { STEPShell_Based_Wireframe_Model() : Object("STEPShell_Based_Wireframe_Model") {}
		ListOf< STEPShell, 1, 0 >::Out SbwmBoundary;
    };

    // C++ wrapper for STEPShell_Based_Wireframe_Shape_Representation
    struct STEPShell_Based_Wireframe_Shape_Representation : STEPShape_Representation, ObjectHelper<STEPShell_Based_Wireframe_Shape_Representation,0> { STEPShell_Based_Wireframe_Shape_Representation() : Object("STEPShell_Based_Wireframe_Shape_Representation") {}

    };

    // C++ wrapper for STEPSi_Unit
    struct STEPSi_Unit : STEPNamed_Unit, ObjectHelper<STEPSi_Unit,2> { STEPSi_Unit() : Object("STEPSi_Unit") {}
		Maybe< STEPSi_Prefix::Out > Prefix;
		STEPSi_Unit_Name::Out Name;
    };

    // C++ wrapper for STEPSi_Absorbed_Dose_Unit
    struct STEPSi_Absorbed_Dose_Unit : STEPAbsorbed_Dose_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Absorbed_Dose_Unit,0> { STEPSi_Absorbed_Dose_Unit() : Object("STEPSi_Absorbed_Dose_Unit") {}

    };

    // C++ wrapper for STEPSi_Capacitance_Unit
    struct STEPSi_Capacitance_Unit : STEPCapacitance_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Capacitance_Unit,0> { STEPSi_Capacitance_Unit() : Object("STEPSi_Capacitance_Unit") {}

    };

    // C++ wrapper for STEPSi_Conductance_Unit
    struct STEPSi_Conductance_Unit : STEPConductance_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Conductance_Unit,0> { STEPSi_Conductance_Unit() : Object("STEPSi_Conductance_Unit") {}

    };

    // C++ wrapper for STEPSi_Dose_Equivalent_Unit
    struct STEPSi_Dose_Equivalent_Unit : STEPDose_Equivalent_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Dose_Equivalent_Unit,0> { STEPSi_Dose_Equivalent_Unit() : Object("STEPSi_Dose_Equivalent_Unit") {}

    };

    // C++ wrapper for STEPSi_Electric_Charge_Unit
    struct STEPSi_Electric_Charge_Unit : STEPElectric_Charge_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Electric_Charge_Unit,0> { STEPSi_Electric_Charge_Unit() : Object("STEPSi_Electric_Charge_Unit") {}

    };

    // C++ wrapper for STEPSi_Electric_Potential_Unit
    struct STEPSi_Electric_Potential_Unit : STEPElectric_Potential_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Electric_Potential_Unit,0> { STEPSi_Electric_Potential_Unit() : Object("STEPSi_Electric_Potential_Unit") {}

    };

    // C++ wrapper for STEPSi_Energy_Unit
    struct STEPSi_Energy_Unit : STEPEnergy_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Energy_Unit,0> { STEPSi_Energy_Unit() : Object("STEPSi_Energy_Unit") {}

    };

    // C++ wrapper for STEPSi_Force_Unit
    struct STEPSi_Force_Unit : STEPForce_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Force_Unit,0> { STEPSi_Force_Unit() : Object("STEPSi_Force_Unit") {}

    };

    // C++ wrapper for STEPSi_Frequency_Unit
    struct STEPSi_Frequency_Unit : STEPFrequency_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Frequency_Unit,0> { STEPSi_Frequency_Unit() : Object("STEPSi_Frequency_Unit") {}

    };

    // C++ wrapper for STEPSi_Illuminance_Unit
    struct STEPSi_Illuminance_Unit : STEPIlluminance_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Illuminance_Unit,0> { STEPSi_Illuminance_Unit() : Object("STEPSi_Illuminance_Unit") {}

    };

    // C++ wrapper for STEPSi_Inductance_Unit
    struct STEPSi_Inductance_Unit : STEPInductance_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Inductance_Unit,0> { STEPSi_Inductance_Unit() : Object("STEPSi_Inductance_Unit") {}

    };

    // C++ wrapper for STEPSi_Magnetic_Flux_Density_Unit
    struct STEPSi_Magnetic_Flux_Density_Unit : STEPMagnetic_Flux_Density_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Magnetic_Flux_Density_Unit,0> { STEPSi_Magnetic_Flux_Density_Unit() : Object("STEPSi_Magnetic_Flux_Density_Unit") {}

    };

    // C++ wrapper for STEPSi_Magnetic_Flux_Unit
    struct STEPSi_Magnetic_Flux_Unit : STEPMagnetic_Flux_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Magnetic_Flux_Unit,0> { STEPSi_Magnetic_Flux_Unit() : Object("STEPSi_Magnetic_Flux_Unit") {}

    };

    // C++ wrapper for STEPSi_Power_Unit
    struct STEPSi_Power_Unit : STEPPower_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Power_Unit,0> { STEPSi_Power_Unit() : Object("STEPSi_Power_Unit") {}

    };

    // C++ wrapper for STEPSi_Pressure_Unit
    struct STEPSi_Pressure_Unit : STEPPressure_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Pressure_Unit,0> { STEPSi_Pressure_Unit() : Object("STEPSi_Pressure_Unit") {}

    };

    // C++ wrapper for STEPSi_Radioactivity_Unit
    struct STEPSi_Radioactivity_Unit : STEPRadioactivity_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Radioactivity_Unit,0> { STEPSi_Radioactivity_Unit() : Object("STEPSi_Radioactivity_Unit") {}

    };

    // C++ wrapper for STEPSi_Resistance_Unit
    struct STEPSi_Resistance_Unit : STEPResistance_Unit, STEPSi_Unit, ObjectHelper<STEPSi_Resistance_Unit,0> { STEPSi_Resistance_Unit() : Object("STEPSi_Resistance_Unit") {}

    };

    // C++ wrapper for STEPSolid_Angle_Unit
    struct STEPSolid_Angle_Unit : STEPNamed_Unit, ObjectHelper<STEPSolid_Angle_Unit,0> { STEPSolid_Angle_Unit() : Object("STEPSolid_Angle_Unit") {}

    };

    // C++ wrapper for STEPSolid_Replica
    struct STEPSolid_Replica : STEPSolid_Model, ObjectHelper<STEPSolid_Replica,2> { STEPSolid_Replica() : Object("STEPSolid_Replica") {}
		Lazy< STEPSolid_Model > ParentSolid;
		Lazy< STEPCartesian_Transformation_Operator_3d > Transformation;
    };

    // C++ wrapper for STEPSolid_With_Chamfered_Edges
    struct STEPSolid_With_Chamfered_Edges : STEPEdge_Blended_Solid, ObjectHelper<STEPSolid_With_Chamfered_Edges,0> { STEPSolid_With_Chamfered_Edges() : Object("STEPSolid_With_Chamfered_Edges") {}

    };

    // C++ wrapper for STEPSolid_With_Angle_Based_Chamfer
    struct STEPSolid_With_Angle_Based_Chamfer : STEPSolid_With_Chamfered_Edges, ObjectHelper<STEPSolid_With_Angle_Based_Chamfer,3> { STEPSolid_With_Angle_Based_Chamfer() : Object("STEPSolid_With_Angle_Based_Chamfer") {}
		STEPPositive_Length_Measure::Out OffsetDistance;
		BOOLEAN::Out LeftOffset;
		STEPPositive_Plane_Angle_Measure::Out OffsetAngle;
    };

    // C++ wrapper for STEPSolid_With_Shape_Element_Pattern
    struct STEPSolid_With_Shape_Element_Pattern : STEPModified_Solid_With_Placed_Configuration, ObjectHelper<STEPSolid_With_Shape_Element_Pattern,1> { STEPSolid_With_Shape_Element_Pattern() : Object("STEPSolid_With_Shape_Element_Pattern") {}
		Lazy< STEPModified_Solid_With_Placed_Configuration > ReplicatedElement;
    };

    // C++ wrapper for STEPSolid_With_Circular_Pattern
    struct STEPSolid_With_Circular_Pattern : STEPSolid_With_Shape_Element_Pattern, ObjectHelper<STEPSolid_With_Circular_Pattern,4> { STEPSolid_With_Circular_Pattern() : Object("STEPSolid_With_Circular_Pattern") {}
		STEPPositive_Integer::Out ReplicateCount;
		STEPPlane_Angle_Measure::Out AngularSpacing;
		BOOLEAN::Out RadialAlignment;
		Lazy< STEPPoint > ReferencePoint;
    };

    // C++ wrapper for STEPSolid_With_Depression
    struct STEPSolid_With_Depression : STEPModified_Solid_With_Placed_Configuration, ObjectHelper<STEPSolid_With_Depression,1> { STEPSolid_With_Depression() : Object("STEPSolid_With_Depression") {}
		STEPPositive_Length_Measure::Out Depth;
    };

    // C++ wrapper for STEPSolid_With_Pocket
    struct STEPSolid_With_Pocket : STEPSolid_With_Depression, ObjectHelper<STEPSolid_With_Pocket,2> { STEPSolid_With_Pocket() : Object("STEPSolid_With_Pocket") {}
		STEPNon_Negative_Length_Measure::Out FloorBlendRadius;
		STEPPlane_Angle_Measure::Out DraftAngle;
    };

    // C++ wrapper for STEPSolid_With_Circular_Pocket
    struct STEPSolid_With_Circular_Pocket : STEPSolid_With_Pocket, ObjectHelper<STEPSolid_With_Circular_Pocket,1> { STEPSolid_With_Circular_Pocket() : Object("STEPSolid_With_Circular_Pocket") {}
		STEPPositive_Length_Measure::Out PocketRadius;
    };

    // C++ wrapper for STEPSolid_With_Protrusion
    struct STEPSolid_With_Protrusion : STEPModified_Solid_With_Placed_Configuration, ObjectHelper<STEPSolid_With_Protrusion,2> { STEPSolid_With_Protrusion() : Object("STEPSolid_With_Protrusion") {}
		STEPPositive_Length_Measure::Out ProtrusionHeight;
		STEPPlane_Angle_Measure::Out ProtrusionDraftAngle;
    };

    // C++ wrapper for STEPSolid_With_Circular_Protrusion
    struct STEPSolid_With_Circular_Protrusion : STEPSolid_With_Protrusion, ObjectHelper<STEPSolid_With_Circular_Protrusion,1> { STEPSolid_With_Circular_Protrusion() : Object("STEPSolid_With_Circular_Protrusion") {}
		STEPPositive_Length_Measure::Out ProtrusionRadius;
    };

    // C++ wrapper for STEPSolid_With_Hole
    struct STEPSolid_With_Hole : STEPSolid_With_Depression, ObjectHelper<STEPSolid_With_Hole,0> { STEPSolid_With_Hole() : Object("STEPSolid_With_Hole") {}

    };

    // C++ wrapper for STEPSolid_With_Stepped_Round_Hole
    struct STEPSolid_With_Stepped_Round_Hole : STEPSolid_With_Hole, ObjectHelper<STEPSolid_With_Stepped_Round_Hole,1> { STEPSolid_With_Stepped_Round_Hole() : Object("STEPSolid_With_Stepped_Round_Hole") {}
		STEPPositive_Integer::Out Segments;
    };

    // C++ wrapper for STEPSolid_With_Conical_Bottom_Round_Hole
    struct STEPSolid_With_Conical_Bottom_Round_Hole : STEPSolid_With_Stepped_Round_Hole, ObjectHelper<STEPSolid_With_Conical_Bottom_Round_Hole,2> { STEPSolid_With_Conical_Bottom_Round_Hole() : Object("STEPSolid_With_Conical_Bottom_Round_Hole") {}
		STEPPositive_Plane_Angle_Measure::Out SemiApexAngle;
		STEPNon_Negative_Length_Measure::Out TipRadius;
    };

    // C++ wrapper for STEPSolid_With_Constant_Radius_Edge_Blend
    struct STEPSolid_With_Constant_Radius_Edge_Blend : STEPEdge_Blended_Solid, ObjectHelper<STEPSolid_With_Constant_Radius_Edge_Blend,1> { STEPSolid_With_Constant_Radius_Edge_Blend() : Object("STEPSolid_With_Constant_Radius_Edge_Blend") {}
		STEPPositive_Length_Measure::Out Radius;
    };

    // C++ wrapper for STEPSolid_With_Slot
    struct STEPSolid_With_Slot : STEPSolid_With_Depression, ObjectHelper<STEPSolid_With_Slot,2> { STEPSolid_With_Slot() : Object("STEPSolid_With_Slot") {}
		STEPPositive_Length_Measure::Out SlotWidth;
		ListOf< LOGICAL, 2, 2 >::Out ClosedEnds;
    };

    // C++ wrapper for STEPSolid_With_Curved_Slot
    struct STEPSolid_With_Curved_Slot : STEPSolid_With_Slot, ObjectHelper<STEPSolid_With_Curved_Slot,1> { STEPSolid_With_Curved_Slot() : Object("STEPSolid_With_Curved_Slot") {}
		Lazy< STEPBounded_Curve > SlotCentreline;
    };

    // C++ wrapper for STEPSolid_With_Double_Offset_Chamfer
    struct STEPSolid_With_Double_Offset_Chamfer : STEPSolid_With_Chamfered_Edges, ObjectHelper<STEPSolid_With_Double_Offset_Chamfer,2> { STEPSolid_With_Double_Offset_Chamfer() : Object("STEPSolid_With_Double_Offset_Chamfer") {}
		STEPPositive_Length_Measure::Out LeftOffsetDistance;
		STEPPositive_Length_Measure::Out RightOffsetDistance;
    };

    // C++ wrapper for STEPSolid_With_Flat_Bottom_Round_Hole
    struct STEPSolid_With_Flat_Bottom_Round_Hole : STEPSolid_With_Stepped_Round_Hole, ObjectHelper<STEPSolid_With_Flat_Bottom_Round_Hole,1> { STEPSolid_With_Flat_Bottom_Round_Hole() : Object("STEPSolid_With_Flat_Bottom_Round_Hole") {}
		STEPNon_Negative_Length_Measure::Out FilletRadius;
    };

    // C++ wrapper for STEPSolid_With_General_Pocket
    struct STEPSolid_With_General_Pocket : STEPSolid_With_Pocket, ObjectHelper<STEPSolid_With_General_Pocket,2> { STEPSolid_With_General_Pocket() : Object("STEPSolid_With_General_Pocket") {}
		Lazy< STEPPositioned_Sketch > Profile;
		Lazy< STEPPoint > ReferencePoint;
    };

    // C++ wrapper for STEPSolid_With_General_Protrusion
    struct STEPSolid_With_General_Protrusion : STEPSolid_With_Protrusion, ObjectHelper<STEPSolid_With_General_Protrusion,2> { STEPSolid_With_General_Protrusion() : Object("STEPSolid_With_General_Protrusion") {}
		Lazy< STEPPositioned_Sketch > Profile;
		Lazy< STEPPoint > ReferencePoint;
    };

    // C++ wrapper for STEPSolid_With_Groove
    struct STEPSolid_With_Groove : STEPSolid_With_Depression, ObjectHelper<STEPSolid_With_Groove,5> { STEPSolid_With_Groove() : Object("STEPSolid_With_Groove") {}
		STEPPositive_Length_Measure::Out GrooveRadius;
		STEPPositive_Length_Measure::Out GrooveWidth;
		STEPPlane_Angle_Measure::Out DraftAngle;
		STEPNon_Negative_Length_Measure::Out FloorFilletRadius;
		BOOLEAN::Out ExternalGroove;
    };

    // C++ wrapper for STEPSolid_With_Incomplete_Circular_Pattern
    struct STEPSolid_With_Incomplete_Circular_Pattern : STEPSolid_With_Circular_Pattern, ObjectHelper<STEPSolid_With_Incomplete_Circular_Pattern,1> { STEPSolid_With_Incomplete_Circular_Pattern() : Object("STEPSolid_With_Incomplete_Circular_Pattern") {}
		ListOf< STEPPositive_Integer, 1, 0 >::Out OmittedInstances;
    };

    // C++ wrapper for STEPSolid_With_Rectangular_Pattern
    struct STEPSolid_With_Rectangular_Pattern : STEPSolid_With_Shape_Element_Pattern, ObjectHelper<STEPSolid_With_Rectangular_Pattern,4> { STEPSolid_With_Rectangular_Pattern() : Object("STEPSolid_With_Rectangular_Pattern") {}
		STEPPositive_Integer::Out RowCount;
		STEPPositive_Integer::Out ColumnCount;
		STEPLength_Measure::Out RowSpacing;
		STEPLength_Measure::Out ColumnSpacing;
    };

    // C++ wrapper for STEPSolid_With_Incomplete_Rectangular_Pattern
    struct STEPSolid_With_Incomplete_Rectangular_Pattern : STEPSolid_With_Rectangular_Pattern, ObjectHelper<STEPSolid_With_Incomplete_Rectangular_Pattern,0> { STEPSolid_With_Incomplete_Rectangular_Pattern() : Object("STEPSolid_With_Incomplete_Rectangular_Pattern") {}

    };

    // C++ wrapper for STEPSolid_With_Rectangular_Pocket
    struct STEPSolid_With_Rectangular_Pocket : STEPSolid_With_Pocket, ObjectHelper<STEPSolid_With_Rectangular_Pocket,3> { STEPSolid_With_Rectangular_Pocket() : Object("STEPSolid_With_Rectangular_Pocket") {}
		STEPPositive_Length_Measure::Out PocketLength;
		STEPPositive_Length_Measure::Out PocketWidth;
		STEPNon_Negative_Length_Measure::Out CornerRadius;
    };

    // C++ wrapper for STEPSolid_With_Rectangular_Protrusion
    struct STEPSolid_With_Rectangular_Protrusion : STEPSolid_With_Protrusion, ObjectHelper<STEPSolid_With_Rectangular_Protrusion,3> { STEPSolid_With_Rectangular_Protrusion() : Object("STEPSolid_With_Rectangular_Protrusion") {}
		STEPPositive_Length_Measure::Out ProtrusionLength;
		STEPPositive_Length_Measure::Out ProtrusionWidth;
		STEPNon_Negative_Length_Measure::Out ProtrusionCornerRadius;
    };

    // C++ wrapper for STEPSolid_With_Single_Offset_Chamfer
    struct STEPSolid_With_Single_Offset_Chamfer : STEPSolid_With_Chamfered_Edges, ObjectHelper<STEPSolid_With_Single_Offset_Chamfer,1> { STEPSolid_With_Single_Offset_Chamfer() : Object("STEPSolid_With_Single_Offset_Chamfer") {}
		STEPPositive_Length_Measure::Out OffsetDistance;
    };

    // C++ wrapper for STEPSolid_With_Spherical_Bottom_Round_Hole
    struct STEPSolid_With_Spherical_Bottom_Round_Hole : STEPSolid_With_Stepped_Round_Hole, ObjectHelper<STEPSolid_With_Spherical_Bottom_Round_Hole,1> { STEPSolid_With_Spherical_Bottom_Round_Hole() : Object("STEPSolid_With_Spherical_Bottom_Round_Hole") {}
		STEPPositive_Length_Measure::Out SphereRadius;
    };

    // C++ wrapper for STEPSolid_With_Stepped_Round_Hole_And_Conical_Transitions
    struct STEPSolid_With_Stepped_Round_Hole_And_Conical_Transitions : STEPSolid_With_Stepped_Round_Hole, ObjectHelper<STEPSolid_With_Stepped_Round_Hole_And_Conical_Transitions,1> { STEPSolid_With_Stepped_Round_Hole_And_Conical_Transitions() : Object("STEPSolid_With_Stepped_Round_Hole_And_Conical_Transitions") {}
		ListOf< Lazy< STEPConical_Stepped_Hole_Transition >, 1, 0 > ConicalTransitions;
    };

    // C++ wrapper for STEPSolid_With_Straight_Slot
    struct STEPSolid_With_Straight_Slot : STEPSolid_With_Slot, ObjectHelper<STEPSolid_With_Straight_Slot,1> { STEPSolid_With_Straight_Slot() : Object("STEPSolid_With_Straight_Slot") {}
		STEPPositive_Length_Measure::Out SlotLength;
    };

    // C++ wrapper for STEPSolid_With_Tee_Section_Slot
    struct STEPSolid_With_Tee_Section_Slot : STEPSolid_With_Slot, ObjectHelper<STEPSolid_With_Tee_Section_Slot,2> { STEPSolid_With_Tee_Section_Slot() : Object("STEPSolid_With_Tee_Section_Slot") {}
		STEPPositive_Length_Measure::Out TeeSectionWidth;
		STEPPositive_Length_Measure::Out CollarDepth;
    };

    // C++ wrapper for STEPSolid_With_Through_Depression
    struct STEPSolid_With_Through_Depression : STEPSolid_With_Depression, ObjectHelper<STEPSolid_With_Through_Depression,1> { STEPSolid_With_Through_Depression() : Object("STEPSolid_With_Through_Depression") {}
		ListOf< Lazy< STEPFace_Surface >, 1, 0 > ExitFaces;
    };

    // C++ wrapper for STEPSolid_With_Trapezoidal_Section_Slot
    struct STEPSolid_With_Trapezoidal_Section_Slot : STEPSolid_With_Slot, ObjectHelper<STEPSolid_With_Trapezoidal_Section_Slot,2> { STEPSolid_With_Trapezoidal_Section_Slot() : Object("STEPSolid_With_Trapezoidal_Section_Slot") {}
		STEPPlane_Angle_Measure::Out DraftAngle;
		STEPNon_Negative_Length_Measure::Out FloorFilletRadius;
    };

    // C++ wrapper for STEPTrack_Blended_Solid
    struct STEPTrack_Blended_Solid : STEPEdge_Blended_Solid, ObjectHelper<STEPTrack_Blended_Solid,0> { STEPTrack_Blended_Solid() : Object("STEPTrack_Blended_Solid") {}

    };

    // C++ wrapper for STEPSolid_With_Variable_Radius_Edge_Blend
    struct STEPSolid_With_Variable_Radius_Edge_Blend : STEPTrack_Blended_Solid, ObjectHelper<STEPSolid_With_Variable_Radius_Edge_Blend,3> { STEPSolid_With_Variable_Radius_Edge_Blend() : Object("STEPSolid_With_Variable_Radius_Edge_Blend") {}
		ListOf< Lazy< STEPPoint >, 2, 0 > PointList;
		ListOf< STEPPositive_Length_Measure, 2, 0 >::Out RadiusList;
		ListOf< STEPBlend_Radius_Variation_Type, 1, 0 >::Out EdgeFunctionList;
    };

    // C++ wrapper for STEPSphere
    struct STEPSphere : STEPGeometric_Representation_Item, ObjectHelper<STEPSphere,2> { STEPSphere() : Object("STEPSphere") {}
		STEPPositive_Length_Measure::Out Radius;
		Lazy< STEPPoint > Centre;
    };

    // C++ wrapper for STEPSpherical_Surface
    struct STEPSpherical_Surface : STEPElementary_Surface, ObjectHelper<STEPSpherical_Surface,1> { STEPSpherical_Surface() : Object("STEPSpherical_Surface") {}
		STEPPositive_Length_Measure::Out Radius;
    };

    // C++ wrapper for STEPStructured_Dimension_Callout
    struct STEPStructured_Dimension_Callout : STEPDraughting_Callout, ObjectHelper<STEPStructured_Dimension_Callout,0> { STEPStructured_Dimension_Callout() : Object("STEPStructured_Dimension_Callout") {}

    };

    // C++ wrapper for STEPStructured_Text_Composition
    struct STEPStructured_Text_Composition : STEPCompound_Representation_Item, ObjectHelper<STEPStructured_Text_Composition,0> { STEPStructured_Text_Composition() : Object("STEPStructured_Text_Composition") {}

    };

    // C++ wrapper for STEPStructured_Text_Representation
    struct STEPStructured_Text_Representation : STEPRepresentation, ObjectHelper<STEPStructured_Text_Representation,0> { STEPStructured_Text_Representation() : Object("STEPStructured_Text_Representation") {}

    };

    // C++ wrapper for STEPSubedge
    struct STEPSubedge : STEPEdge, ObjectHelper<STEPSubedge,1> { STEPSubedge() : Object("STEPSubedge") {}
		Lazy< STEPEdge > ParentEdge;
    };

    // C++ wrapper for STEPSubface
    struct STEPSubface : STEPFace, ObjectHelper<STEPSubface,1> { STEPSubface() : Object("STEPSubface") {}
		Lazy< STEPFace > ParentFace;
    };

    // C++ wrapper for STEPSurface_Condition_Callout
    struct STEPSurface_Condition_Callout : STEPDraughting_Callout, ObjectHelper<STEPSurface_Condition_Callout,0> { STEPSurface_Condition_Callout() : Object("STEPSurface_Condition_Callout") {}

    };

    // C++ wrapper for STEPSwept_Surface
    struct STEPSwept_Surface : STEPSurface, ObjectHelper<STEPSwept_Surface,1> { STEPSwept_Surface() : Object("STEPSwept_Surface") {}
		Lazy< STEPCurve > SweptCurve;
    };

    // C++ wrapper for STEPSurface_Of_Linear_Extrusion
    struct STEPSurface_Of_Linear_Extrusion : STEPSwept_Surface, ObjectHelper<STEPSurface_Of_Linear_Extrusion,1> { STEPSurface_Of_Linear_Extrusion() : Object("STEPSurface_Of_Linear_Extrusion") {}
		Lazy< STEPVector > ExtrusionAxis;
    };

    // C++ wrapper for STEPSurface_Of_Revolution
    struct STEPSurface_Of_Revolution : STEPSwept_Surface, ObjectHelper<STEPSurface_Of_Revolution,1> { STEPSurface_Of_Revolution() : Object("STEPSurface_Of_Revolution") {}
		Lazy< STEPAxis1_Placement > AxisPosition;
    };

    // C++ wrapper for STEPSurface_Replica
    struct STEPSurface_Replica : STEPSurface, ObjectHelper<STEPSurface_Replica,2> { STEPSurface_Replica() : Object("STEPSurface_Replica") {}
		Lazy< STEPSurface > ParentSurface;
		Lazy< STEPCartesian_Transformation_Operator_3d > Transformation;
    };

    // C++ wrapper for STEPSurface_Side_Style
    struct STEPSurface_Side_Style : STEPFounded_Item, ObjectHelper<STEPSurface_Side_Style,2> { STEPSurface_Side_Style() : Object("STEPSurface_Side_Style") {}
		STEPLabel::Out Name;
		ListOf< STEPSurface_Style_Element_Select, 1, 7 >::Out Styles;
    };

    // C++ wrapper for STEPSurface_Style_Fill_Area
    struct STEPSurface_Style_Fill_Area : STEPFounded_Item, ObjectHelper<STEPSurface_Style_Fill_Area,1> { STEPSurface_Style_Fill_Area() : Object("STEPSurface_Style_Fill_Area") {}
		Lazy< STEPFill_Area_Style > FillArea;
    };

    // C++ wrapper for STEPSurface_Style_Usage
    struct STEPSurface_Style_Usage : STEPFounded_Item, ObjectHelper<STEPSurface_Style_Usage,2> { STEPSurface_Style_Usage() : Object("STEPSurface_Style_Usage") {}
		STEPSurface_Side::Out Side;
		STEPSurface_Side_Style_Select::Out Style;
    };

    // C++ wrapper for STEPSurface_Texture_Representation
    struct STEPSurface_Texture_Representation : STEPRepresentation, ObjectHelper<STEPSurface_Texture_Representation,0> { STEPSurface_Texture_Representation() : Object("STEPSurface_Texture_Representation") {}

    };

    // C++ wrapper for STEPSurfaced_Open_Shell
    struct STEPSurfaced_Open_Shell : STEPOpen_Shell, ObjectHelper<STEPSurfaced_Open_Shell,0> { STEPSurfaced_Open_Shell() : Object("STEPSurfaced_Open_Shell") {}

    };

    // C++ wrapper for STEPSwept_Disk_Solid
    struct STEPSwept_Disk_Solid : STEPSolid_Model, ObjectHelper<STEPSwept_Disk_Solid,5> { STEPSwept_Disk_Solid() : Object("STEPSwept_Disk_Solid") {}
		Lazy< STEPCurve > Directrix;
		STEPPositive_Length_Measure::Out Radius;
		Maybe< STEPPositive_Length_Measure::Out > InnerRadius;
		REAL::Out StartParam;
		REAL::Out EndParam;
    };

    // C++ wrapper for STEPSymbol
    struct STEPSymbol : STEPRepresentation_Item, ObjectHelper<STEPSymbol,0> { STEPSymbol() : Object("STEPSymbol") {}

    };

    // C++ wrapper for STEPSymbol_Representation_Map
    struct STEPSymbol_Representation_Map : STEPRepresentation_Map, ObjectHelper<STEPSymbol_Representation_Map,0> { STEPSymbol_Representation_Map() : Object("STEPSymbol_Representation_Map") {}

    };

    // C++ wrapper for STEPSymbol_Target
    struct STEPSymbol_Target : STEPGeometric_Representation_Item, ObjectHelper<STEPSymbol_Target,3> { STEPSymbol_Target() : Object("STEPSymbol_Target") {}
		STEPAxis2_Placement::Out Placement;
		STEPPositive_Ratio_Measure::Out XScale;
		STEPPositive_Ratio_Measure::Out YScale;
    };

    // C++ wrapper for STEPTable_Representation_Item
    struct STEPTable_Representation_Item : STEPCompound_Representation_Item, ObjectHelper<STEPTable_Representation_Item,0> { STEPTable_Representation_Item() : Object("STEPTable_Representation_Item") {}

    };

    // C++ wrapper for STEPTactile_Appearance_Representation
    struct STEPTactile_Appearance_Representation : STEPRepresentation, ObjectHelper<STEPTactile_Appearance_Representation,0> { STEPTactile_Appearance_Representation() : Object("STEPTactile_Appearance_Representation") {}

    };

    // C++ wrapper for STEPTagged_Text_Format
    struct STEPTagged_Text_Format : STEPRepresentation_Context, ObjectHelper<STEPTagged_Text_Format,0> { STEPTagged_Text_Format() : Object("STEPTagged_Text_Format") {}

    };

    // C++ wrapper for STEPTagged_Text_Item
    struct STEPTagged_Text_Item : STEPDescriptive_Representation_Item, ObjectHelper<STEPTagged_Text_Item,0> { STEPTagged_Text_Item() : Object("STEPTagged_Text_Item") {}

    };

    // C++ wrapper for STEPText_Literal_With_Associated_Curves
    struct STEPText_Literal_With_Associated_Curves : STEPText_Literal, ObjectHelper<STEPText_Literal_With_Associated_Curves,1> { STEPText_Literal_With_Associated_Curves() : Object("STEPText_Literal_With_Associated_Curves") {}
		ListOf< Lazy< STEPCurve >, 1, 0 > AssociatedCurves;
    };

    // C++ wrapper for STEPText_Literal_With_Blanking_Box
    struct STEPText_Literal_With_Blanking_Box : STEPText_Literal, ObjectHelper<STEPText_Literal_With_Blanking_Box,1> { STEPText_Literal_With_Blanking_Box() : Object("STEPText_Literal_With_Blanking_Box") {}
		Lazy< STEPPlanar_Box > Blanking;
    };

    // C++ wrapper for STEPText_Literal_With_Extent
    struct STEPText_Literal_With_Extent : STEPText_Literal, ObjectHelper<STEPText_Literal_With_Extent,1> { STEPText_Literal_With_Extent() : Object("STEPText_Literal_With_Extent") {}
		Lazy< STEPPlanar_Extent > Extent;
    };

    // C++ wrapper for STEPText_String_Representation
    struct STEPText_String_Representation : STEPRepresentation, ObjectHelper<STEPText_String_Representation,0> { STEPText_String_Representation() : Object("STEPText_String_Representation") {}

    };

    // C++ wrapper for STEPThermodynamic_Temperature_Unit
    struct STEPThermodynamic_Temperature_Unit : STEPNamed_Unit, ObjectHelper<STEPThermodynamic_Temperature_Unit,0> { STEPThermodynamic_Temperature_Unit() : Object("STEPThermodynamic_Temperature_Unit") {}

    };

    // C++ wrapper for STEPThickened_Face_Solid
    struct STEPThickened_Face_Solid : STEPSolid_Model, ObjectHelper<STEPThickened_Face_Solid,3> { STEPThickened_Face_Solid() : Object("STEPThickened_Face_Solid") {}
		STEPGeneralized_Surface_Select::Out BaseElement;
		STEPLength_Measure::Out Offset1;
		STEPLength_Measure::Out Offset2;
    };

    // C++ wrapper for STEPTime_Unit
    struct STEPTime_Unit : STEPNamed_Unit, ObjectHelper<STEPTime_Unit,0> { STEPTime_Unit() : Object("STEPTime_Unit") {}

    };

    // C++ wrapper for STEPTorus
    struct STEPTorus : STEPGeometric_Representation_Item, ObjectHelper<STEPTorus,3> { STEPTorus() : Object("STEPTorus") {}
		Lazy< STEPAxis1_Placement > Position;
		STEPPositive_Length_Measure::Out MajorRadius;
		STEPPositive_Length_Measure::Out MinorRadius;
    };

    // C++ wrapper for STEPTrack_Blended_Solid_With_End_Conditions
    struct STEPTrack_Blended_Solid_With_End_Conditions : STEPTrack_Blended_Solid, ObjectHelper<STEPTrack_Blended_Solid_With_End_Conditions,1> { STEPTrack_Blended_Solid_With_End_Conditions() : Object("STEPTrack_Blended_Solid_With_End_Conditions") {}
		ListOf< STEPBlend_End_Condition_Select, 2, 2 >::Out EndConditions;
    };

    // C++ wrapper for STEPTrimmed_Curve
    struct STEPTrimmed_Curve : STEPBounded_Curve, ObjectHelper<STEPTrimmed_Curve,5> { STEPTrimmed_Curve() : Object("STEPTrimmed_Curve") {}
		Lazy< STEPCurve > BasisCurve;
		ListOf< STEPTrimming_Select, 1, 2 >::Out Trim1;
		ListOf< STEPTrimming_Select, 1, 2 >::Out Trim2;
		BOOLEAN::Out SenseAgreement;
		STEPTrimming_Preference::Out MasterRepresentation;
    };

    // C++ wrapper for STEPTwo_Direction_Repeat_Factor
    struct STEPTwo_Direction_Repeat_Factor : STEPOne_Direction_Repeat_Factor, ObjectHelper<STEPTwo_Direction_Repeat_Factor,1> { STEPTwo_Direction_Repeat_Factor() : Object("STEPTwo_Direction_Repeat_Factor") {}
		Lazy< STEPVector > SecondRepeatFactor;
    };

    // C++ wrapper for STEPUncertainty_Assigned_Representation
    struct STEPUncertainty_Assigned_Representation : STEPRepresentation, ObjectHelper<STEPUncertainty_Assigned_Representation,1> { STEPUncertainty_Assigned_Representation() : Object("STEPUncertainty_Assigned_Representation") {}
		ListOf< Lazy< NotImplemented >, 1, 0 > Uncertainty;
    };

    // C++ wrapper for STEPUniform_Curve
    struct STEPUniform_Curve : STEPB_Spline_Curve, ObjectHelper<STEPUniform_Curve,0> { STEPUniform_Curve() : Object("STEPUniform_Curve") {}

    };

    // C++ wrapper for STEPUniform_Resource_Identifier
    struct STEPUniform_Resource_Identifier : STEPDescriptive_Representation_Item, ObjectHelper<STEPUniform_Resource_Identifier,0> { STEPUniform_Resource_Identifier() : Object("STEPUniform_Resource_Identifier") {}

    };

    // C++ wrapper for STEPUniform_Surface
    struct STEPUniform_Surface : STEPB_Spline_Surface, ObjectHelper<STEPUniform_Surface,0> { STEPUniform_Surface() : Object("STEPUniform_Surface") {}

    };

    // C++ wrapper for STEPUser_Defined_Curve_Font
    struct STEPUser_Defined_Curve_Font : STEPCurve_Style_Font, STEPMapped_Item, ObjectHelper<STEPUser_Defined_Curve_Font,0> { STEPUser_Defined_Curve_Font() : Object("STEPUser_Defined_Curve_Font") {}

    };

    // C++ wrapper for STEPUser_Defined_Marker
    struct STEPUser_Defined_Marker : STEPMapped_Item, STEPPre_Defined_Marker, ObjectHelper<STEPUser_Defined_Marker,0> { STEPUser_Defined_Marker() : Object("STEPUser_Defined_Marker") {}

    };

    // C++ wrapper for STEPUser_Defined_Terminator_Symbol
    struct STEPUser_Defined_Terminator_Symbol : STEPMapped_Item, STEPPre_Defined_Symbol, ObjectHelper<STEPUser_Defined_Terminator_Symbol,0> { STEPUser_Defined_Terminator_Symbol() : Object("STEPUser_Defined_Terminator_Symbol") {}

    };

    // C++ wrapper for STEPValue_Range
    struct STEPValue_Range : STEPCompound_Representation_Item, ObjectHelper<STEPValue_Range,0> { STEPValue_Range() : Object("STEPValue_Range") {}

    };

    // C++ wrapper for STEPValue_Representation_Item
    struct STEPValue_Representation_Item : STEPRepresentation_Item, ObjectHelper<STEPValue_Representation_Item,1> { STEPValue_Representation_Item() : Object("STEPValue_Representation_Item") {}
		STEPMeasure_Value::Out ValueComponent;
    };

    // C++ wrapper for STEPVector
    struct STEPVector : STEPGeometric_Representation_Item, ObjectHelper<STEPVector,2> { STEPVector() : Object("STEPVector") {}
		Lazy< STEPDirection > Orientation;
		STEPLength_Measure::Out Magnitude;
    };

    // C++ wrapper for STEPVertex
    struct STEPVertex : STEPTopological_Representation_Item, ObjectHelper<STEPVertex,0> { STEPVertex() : Object("STEPVertex") {}

    };

    // C++ wrapper for STEPVertex_Loop
    struct STEPVertex_Loop : STEPLoop, ObjectHelper<STEPVertex_Loop,1> { STEPVertex_Loop() : Object("STEPVertex_Loop") {}
		Lazy< STEPVertex > LoopVertex;
    };

    // C++ wrapper for STEPVertex_Point
    struct STEPVertex_Point : STEPVertex, STEPGeometric_Representation_Item, ObjectHelper<STEPVertex_Point,1> { STEPVertex_Point() : Object("STEPVertex_Point") {}
		Lazy< STEPPoint > VertexGeometry;
    };

    // C++ wrapper for STEPVertex_Shell
    struct STEPVertex_Shell : STEPTopological_Representation_Item, ObjectHelper<STEPVertex_Shell,1> { STEPVertex_Shell() : Object("STEPVertex_Shell") {}
		Lazy< STEPVertex_Loop > VertexShellExtent;
    };

    // C++ wrapper for STEPVisual_Appearance_Representation
    struct STEPVisual_Appearance_Representation : STEPRepresentation, ObjectHelper<STEPVisual_Appearance_Representation,0> { STEPVisual_Appearance_Representation() : Object("STEPVisual_Appearance_Representation") {}

    };

    // C++ wrapper for STEPWire_Shell
    struct STEPWire_Shell : STEPTopological_Representation_Item, ObjectHelper<STEPWire_Shell,1> { STEPWire_Shell() : Object("STEPWire_Shell") {}
		ListOf< Lazy< STEPLoop >, 1, 0 > WireShellExtent;
    };

	void GetSchema(EXPRESS::ConversionSchema& out);

} //! STEP
namespace STEP {

	// ******************************************************************************
	// Converter stubs
	// ******************************************************************************
	
#define DECL_CONV_STUB(type) template <> size_t GenericFill<STEP::type>(const STEP::DB& db, const EXPRESS::LIST& params, STEP::type* in)
	
	DECL_CONV_STUB(STEPRepresentation_Item);
	DECL_CONV_STUB(STEPRepresentation);
	DECL_CONV_STUB(STEPProperty_Definition_Representation);
	DECL_CONV_STUB(STEPAbstract_Variable);
	DECL_CONV_STUB(STEPShape_Representation);
	DECL_CONV_STUB(STEPAdvanced_Brep_Shape_Representation);
	DECL_CONV_STUB(STEPTopological_Representation_Item);
	DECL_CONV_STUB(STEPGeometric_Representation_Item);
	DECL_CONV_STUB(STEPFace);
	DECL_CONV_STUB(STEPFace_Surface);
	DECL_CONV_STUB(STEPAdvanced_Face);
	DECL_CONV_STUB(STEPNamed_Unit);
	DECL_CONV_STUB(STEPAmount_Of_Substance_Unit);
	DECL_CONV_STUB(STEPAngle_Direction_Reference);
	DECL_CONV_STUB(STEPDraughting_Callout);
	DECL_CONV_STUB(STEPDimension_Curve_Directed_Callout);
	DECL_CONV_STUB(STEPAngular_Dimension);
	DECL_CONV_STUB(STEPStyled_Item);
	DECL_CONV_STUB(STEPAnnotation_Occurrence);
	DECL_CONV_STUB(STEPAnnotation_Curve_Occurrence);
	DECL_CONV_STUB(STEPAnnotation_Fill_Area);
	DECL_CONV_STUB(STEPAnnotation_Fill_Area_Occurrence);
	DECL_CONV_STUB(STEPAnnotation_Plane);
	DECL_CONV_STUB(STEPAnnotation_Symbol_Occurrence);
	DECL_CONV_STUB(STEPAnnotation_Subfigure_Occurrence);
	DECL_CONV_STUB(STEPMapped_Item);
	DECL_CONV_STUB(STEPAnnotation_Symbol);
	DECL_CONV_STUB(STEPAnnotation_Text);
	DECL_CONV_STUB(STEPAnnotation_Text_Character);
	DECL_CONV_STUB(STEPAnnotation_Text_Occurrence);
	DECL_CONV_STUB(STEPCompound_Representation_Item);
	DECL_CONV_STUB(STEPAtomic_Formula);
	DECL_CONV_STUB(STEPAttribute_Assertion);
	DECL_CONV_STUB(STEPVariational_Representation_Item);
	DECL_CONV_STUB(STEPAuxiliary_Geometric_Representation_Item);
	DECL_CONV_STUB(STEPPlacement);
	DECL_CONV_STUB(STEPAxis1_Placement);
	DECL_CONV_STUB(STEPAxis2_Placement_2d);
	DECL_CONV_STUB(STEPAxis2_Placement_3d);
	DECL_CONV_STUB(STEPCurve);
	DECL_CONV_STUB(STEPBounded_Curve);
	DECL_CONV_STUB(STEPB_Spline_Curve);
	DECL_CONV_STUB(STEPB_Spline_Curve_With_Knots);
	DECL_CONV_STUB(STEPSurface);
	DECL_CONV_STUB(STEPBounded_Surface);
	DECL_CONV_STUB(STEPB_Spline_Surface);
	DECL_CONV_STUB(STEPB_Spline_Surface_With_Knots);
	DECL_CONV_STUB(STEPBack_Chaining_Rule_Body);
	DECL_CONV_STUB(STEPColour);
	DECL_CONV_STUB(STEPBeveled_Sheet_Representation);
	DECL_CONV_STUB(STEPBezier_Curve);
	DECL_CONV_STUB(STEPBezier_Surface);
	DECL_CONV_STUB(STEPBinary_Representation_Item);
	DECL_CONV_STUB(STEPBlock);
	DECL_CONV_STUB(STEPBoolean_Representation_Item);
	DECL_CONV_STUB(STEPBoolean_Result);
	DECL_CONV_STUB(STEPComposite_Curve);
	DECL_CONV_STUB(STEPComposite_Curve_On_Surface);
	DECL_CONV_STUB(STEPBoundary_Curve);
	DECL_CONV_STUB(STEPPcurve);
	DECL_CONV_STUB(STEPBounded_Pcurve);
	DECL_CONV_STUB(STEPSurface_Curve);
	DECL_CONV_STUB(STEPBounded_Surface_Curve);
	DECL_CONV_STUB(STEPFounded_Item);
	DECL_CONV_STUB(STEPHalf_Space_Solid);
	DECL_CONV_STUB(STEPBoxed_Half_Space);
	DECL_CONV_STUB(STEPSolid_Model);
	DECL_CONV_STUB(STEPManifold_Solid_Brep);
	DECL_CONV_STUB(STEPBrep_With_Voids);
	DECL_CONV_STUB(STEPBytes_Representation_Item);
	DECL_CONV_STUB(STEPCamera_Image);
	DECL_CONV_STUB(STEPCamera_Image_3d_With_Scale);
	DECL_CONV_STUB(STEPCamera_Model);
	DECL_CONV_STUB(STEPCamera_Model_D3);
	DECL_CONV_STUB(STEPCamera_Model_D3_Multi_Clipping);
	DECL_CONV_STUB(STEPCamera_Model_D3_Multi_Clipping_Intersection);
	DECL_CONV_STUB(STEPCamera_Model_D3_Multi_Clipping_Union);
	DECL_CONV_STUB(STEPCamera_Model_D3_With_Hlhsr);
	DECL_CONV_STUB(STEPCamera_Model_With_Light_Sources);
	DECL_CONV_STUB(STEPRepresentation_Map);
	DECL_CONV_STUB(STEPCamera_Usage);
	DECL_CONV_STUB(STEPPoint);
	DECL_CONV_STUB(STEPCartesian_Point);
	DECL_CONV_STUB(STEPFunctionally_Defined_Transformation);
	DECL_CONV_STUB(STEPCartesian_Transformation_Operator);
	DECL_CONV_STUB(STEPCartesian_Transformation_Operator_2d);
	DECL_CONV_STUB(STEPCartesian_Transformation_Operator_3d);
	DECL_CONV_STUB(STEPSymbol_Representation);
	DECL_CONV_STUB(STEPGeneric_Character_Glyph_Symbol);
	DECL_CONV_STUB(STEPCharacter_Glyph_Symbol);
	DECL_CONV_STUB(STEPCharacter_Glyph_Symbol_Outline);
	DECL_CONV_STUB(STEPCharacter_Glyph_Symbol_Stroke);
	DECL_CONV_STUB(STEPConic);
	DECL_CONV_STUB(STEPCircle);
	DECL_CONV_STUB(STEPConnected_Face_Set);
	DECL_CONV_STUB(STEPClosed_Shell);
	DECL_CONV_STUB(STEPColour_Specification);
	DECL_CONV_STUB(STEPColour_Rgb);
	DECL_CONV_STUB(STEPComplex_Clause);
	DECL_CONV_STUB(STEPComplex_Conjunctive_Clause);
	DECL_CONV_STUB(STEPComplex_Disjunctive_Clause);
	DECL_CONV_STUB(STEPModified_Solid);
	DECL_CONV_STUB(STEPShelled_Solid);
	DECL_CONV_STUB(STEPComplex_Shelled_Solid);
	DECL_CONV_STUB(STEPComposite_Curve_Segment);
	DECL_CONV_STUB(STEPComposite_Sheet_Representation);
	DECL_CONV_STUB(STEPComposite_Text);
	DECL_CONV_STUB(STEPComposite_Text_With_Associated_Curves);
	DECL_CONV_STUB(STEPComposite_Text_With_Blanking_Box);
	DECL_CONV_STUB(STEPComposite_Text_With_Delineation);
	DECL_CONV_STUB(STEPComposite_Text_With_Extent);
	DECL_CONV_STUB(STEPCompound_Shape_Representation);
	DECL_CONV_STUB(STEPConical_Stepped_Hole_Transition);
	DECL_CONV_STUB(STEPElementary_Surface);
	DECL_CONV_STUB(STEPConical_Surface);
	DECL_CONV_STUB(STEPConnected_Edge_Set);
	DECL_CONV_STUB(STEPConnected_Face_Sub_Set);
	DECL_CONV_STUB(STEPConstructive_Geometry_Representation);
	DECL_CONV_STUB(STEPContact_Ratio_Representation);
	DECL_CONV_STUB(STEPOver_Riding_Styled_Item);
	DECL_CONV_STUB(STEPContext_Dependent_Over_Riding_Styled_Item);
	DECL_CONV_STUB(STEPContext_Dependent_Unit);
	DECL_CONV_STUB(STEPConversion_Based_Unit);
	DECL_CONV_STUB(STEPCsg_Shape_Representation);
	DECL_CONV_STUB(STEPCsg_Solid);
	DECL_CONV_STUB(STEPCurrency);
	DECL_CONV_STUB(STEPCurve_Bounded_Surface);
	DECL_CONV_STUB(STEPCurve_Dimension);
	DECL_CONV_STUB(STEPCurve_Replica);
	DECL_CONV_STUB(STEPCurve_Swept_Solid_Shape_Representation);
	DECL_CONV_STUB(STEPCylindrical_Surface);
	DECL_CONV_STUB(STEPDate_Representation_Item);
	DECL_CONV_STUB(STEPDate_Time_Representation_Item);
	DECL_CONV_STUB(STEPDatum_Feature_Callout);
	DECL_CONV_STUB(STEPDatum_Target_Callout);
	DECL_CONV_STUB(STEPDefault_Tolerance_Table);
	DECL_CONV_STUB(STEPDefault_Tolerance_Table_Cell);
	DECL_CONV_STUB(STEPDefined_Symbol);
	DECL_CONV_STUB(STEPDefinitional_Representation);
	DECL_CONV_STUB(STEPDegenerate_Pcurve);
	DECL_CONV_STUB(STEPToroidal_Surface);
	DECL_CONV_STUB(STEPDegenerate_Toroidal_Surface);
	DECL_CONV_STUB(STEPDescriptive_Representation_Item);
	DECL_CONV_STUB(STEPDiameter_Dimension);
	DECL_CONV_STUB(STEPDimension_Callout);
	DECL_CONV_STUB(STEPDimension_Curve);
	DECL_CONV_STUB(STEPTerminator_Symbol);
	DECL_CONV_STUB(STEPDimension_Curve_Terminator);
	DECL_CONV_STUB(STEPText_Literal);
	DECL_CONV_STUB(STEPDimension_Text_Associativity);
	DECL_CONV_STUB(STEPDirection);
	DECL_CONV_STUB(STEPDouble_Offset_Shelled_Solid);
	DECL_CONV_STUB(STEPDraughting_Annotation_Occurrence);
	DECL_CONV_STUB(STEPDraughting_Elements);
	DECL_CONV_STUB(STEPDraughting_Model);
	DECL_CONV_STUB(STEPPre_Defined_Item);
	DECL_CONV_STUB(STEPDraughting_Subfigure_Representation);
	DECL_CONV_STUB(STEPDraughting_Symbol_Representation);
	DECL_CONV_STUB(STEPText_Literal_With_Delineation);
	DECL_CONV_STUB(STEPDraughting_Text_Literal_With_Delineation);
	DECL_CONV_STUB(STEPPresentation_Representation);
	DECL_CONV_STUB(STEPPresentation_Area);
	DECL_CONV_STUB(STEPDrawing_Sheet_Revision);
	DECL_CONV_STUB(STEPEdge);
	DECL_CONV_STUB(STEPEdge_Based_Wireframe_Model);
	DECL_CONV_STUB(STEPEdge_Based_Wireframe_Shape_Representation);
	DECL_CONV_STUB(STEPEdge_Blended_Solid);
	DECL_CONV_STUB(STEPEdge_Curve);
	DECL_CONV_STUB(STEPPath);
	DECL_CONV_STUB(STEPLoop);
	DECL_CONV_STUB(STEPEdge_Loop);
	DECL_CONV_STUB(STEPElectric_Current_Unit);
	DECL_CONV_STUB(STEPElementary_Brep_Shape_Representation);
	DECL_CONV_STUB(STEPEllipse);
	DECL_CONV_STUB(STEPEnum_Reference_Prefix);
	DECL_CONV_STUB(STEPEvaluated_Characteristic);
	DECL_CONV_STUB(STEPEvaluated_Degenerate_Pcurve);
	DECL_CONV_STUB(STEPExpression_Conversion_Based_Unit);
	DECL_CONV_STUB(STEPExternally_Defined_Context_Dependent_Unit);
	DECL_CONV_STUB(STEPExternally_Defined_Conversion_Based_Unit);
	DECL_CONV_STUB(STEPExternally_Defined_Currency);
	DECL_CONV_STUB(STEPExternally_Defined_Hatch_Style);
	DECL_CONV_STUB(STEPPicture_Representation_Item);
	DECL_CONV_STUB(STEPExternally_Defined_Picture_Representation_Item);
	DECL_CONV_STUB(STEPExternally_Defined_Representation_Item);
	DECL_CONV_STUB(STEPExternally_Defined_String);
	DECL_CONV_STUB(STEPExternally_Defined_Tile_Style);
	DECL_CONV_STUB(STEPSwept_Area_Solid);
	DECL_CONV_STUB(STEPExtruded_Area_Solid);
	DECL_CONV_STUB(STEPSwept_Face_Solid);
	DECL_CONV_STUB(STEPExtruded_Face_Solid);
	DECL_CONV_STUB(STEPExtruded_Face_Solid_With_Trim_Conditions);
	DECL_CONV_STUB(STEPExtruded_Face_Solid_With_Draft_Angle);
	DECL_CONV_STUB(STEPExtruded_Face_Solid_With_Multiple_Draft_Angles);
	DECL_CONV_STUB(STEPFace_Based_Surface_Model);
	DECL_CONV_STUB(STEPFace_Bound);
	DECL_CONV_STUB(STEPFace_Outer_Bound);
	DECL_CONV_STUB(STEPFaceted_Brep);
	DECL_CONV_STUB(STEPFaceted_Brep_Shape_Representation);
	DECL_CONV_STUB(STEPFill_Area_Style);
	DECL_CONV_STUB(STEPFill_Area_Style_Colour);
	DECL_CONV_STUB(STEPFill_Area_Style_Hatching);
	DECL_CONV_STUB(STEPFill_Area_Style_Tile_Coloured_Region);
	DECL_CONV_STUB(STEPFill_Area_Style_Tile_Curve_With_Style);
	DECL_CONV_STUB(STEPFill_Area_Style_Tile_Symbol_With_Style);
	DECL_CONV_STUB(STEPFill_Area_Style_Tiles);
	DECL_CONV_STUB(STEPForward_Chaining_Rule_Premise);
	DECL_CONV_STUB(STEPFunc);
	DECL_CONV_STUB(STEPGeometric_Set);
	DECL_CONV_STUB(STEPGeometric_Curve_Set);
	DECL_CONV_STUB(STEPGeometric_Model_Element_Relationship);
	DECL_CONV_STUB(STEPRepresentation_Context);
	DECL_CONV_STUB(STEPGeometric_Representation_Context);
	DECL_CONV_STUB(STEPGeometrical_Tolerance_Callout);
	DECL_CONV_STUB(STEPGeometrically_Bounded_2d_Wireframe_Representation);
	DECL_CONV_STUB(STEPGeometrically_Bounded_Surface_Shape_Representation);
	DECL_CONV_STUB(STEPGeometrically_Bounded_Wireframe_Shape_Representation);
	DECL_CONV_STUB(STEPGlobal_Uncertainty_Assigned_Context);
	DECL_CONV_STUB(STEPGlobal_Unit_Assigned_Context);
	DECL_CONV_STUB(STEPGround_Fact);
	DECL_CONV_STUB(STEPHardness_Representation);
	DECL_CONV_STUB(STEPHidden_Element_Over_Riding_Styled_Item);
	DECL_CONV_STUB(STEPHyperbola);
	DECL_CONV_STUB(STEPIncluded_Text_Block);
	DECL_CONV_STUB(STEPUser_Selected_Elements);
	DECL_CONV_STUB(STEPIndirectly_Selected_Elements);
	DECL_CONV_STUB(STEPUser_Selected_Shape_Elements);
	DECL_CONV_STUB(STEPIndirectly_Selected_Shape_Elements);
	DECL_CONV_STUB(STEPInteger_Representation_Item);
	DECL_CONV_STUB(STEPIntersection_Curve);
	DECL_CONV_STUB(STEPIso4217_Currency);
	DECL_CONV_STUB(STEPLeader_Curve);
	DECL_CONV_STUB(STEPLeader_Directed_Callout);
	DECL_CONV_STUB(STEPLeader_Directed_Dimension);
	DECL_CONV_STUB(STEPLeader_Terminator);
	DECL_CONV_STUB(STEPLength_Unit);
	DECL_CONV_STUB(STEPLight_Source);
	DECL_CONV_STUB(STEPLight_Source_Ambient);
	DECL_CONV_STUB(STEPLight_Source_Directional);
	DECL_CONV_STUB(STEPLight_Source_Positional);
	DECL_CONV_STUB(STEPLight_Source_Spot);
	DECL_CONV_STUB(STEPLine);
	DECL_CONV_STUB(STEPLinear_Dimension);
	DECL_CONV_STUB(STEPSimple_Clause);
	DECL_CONV_STUB(STEPLiteral_Conjunction);
	DECL_CONV_STUB(STEPLiteral_Disjunction);
	DECL_CONV_STUB(STEPLogical_Representation_Item);
	DECL_CONV_STUB(STEPLuminous_Flux_Unit);
	DECL_CONV_STUB(STEPLuminous_Intensity_Unit);
	DECL_CONV_STUB(STEPManifold_Subsurface_Shape_Representation);
	DECL_CONV_STUB(STEPManifold_Surface_Shape_Representation);
	DECL_CONV_STUB(STEPMass_Unit);
	DECL_CONV_STUB(STEPMeasure_Representation_Item);
	DECL_CONV_STUB(STEPMechanical_Design_Geometric_Presentation_Area);
	DECL_CONV_STUB(STEPMechanical_Design_Geometric_Presentation_Representation);
	DECL_CONV_STUB(STEPMechanical_Design_Presentation_Representation_With_Draughting);
	DECL_CONV_STUB(STEPMechanical_Design_Shaded_Presentation_Area);
	DECL_CONV_STUB(STEPMechanical_Design_Shaded_Presentation_Representation);
	DECL_CONV_STUB(STEPMin_And_Major_Ply_Orientation_Basis);
	DECL_CONV_STUB(STEPModified_Solid_With_Placed_Configuration);
	DECL_CONV_STUB(STEPMoments_Of_Inertia_Representation);
	DECL_CONV_STUB(STEPNon_Manifold_Surface_Shape_Representation);
	DECL_CONV_STUB(STEPNull_Representation_Item);
	DECL_CONV_STUB(STEPOffset_Curve_2d);
	DECL_CONV_STUB(STEPOffset_Curve_3d);
	DECL_CONV_STUB(STEPOffset_Surface);
	DECL_CONV_STUB(STEPOne_Direction_Repeat_Factor);
	DECL_CONV_STUB(STEPOpen_Shell);
	DECL_CONV_STUB(STEPProjection_Directed_Callout);
	DECL_CONV_STUB(STEPOrdinate_Dimension);
	DECL_CONV_STUB(STEPOriented_Closed_Shell);
	DECL_CONV_STUB(STEPOriented_Edge);
	DECL_CONV_STUB(STEPOriented_Face);
	DECL_CONV_STUB(STEPOriented_Open_Shell);
	DECL_CONV_STUB(STEPOriented_Path);
	DECL_CONV_STUB(STEPOriented_Surface);
	DECL_CONV_STUB(STEPOuter_Boundary_Curve);
	DECL_CONV_STUB(STEPParabola);
	DECL_CONV_STUB(STEPParametric_Representation_Context);
	DECL_CONV_STUB(STEPPresentation_View);
	DECL_CONV_STUB(STEPPicture_Representation);
	DECL_CONV_STUB(STEPPlanar_Extent);
	DECL_CONV_STUB(STEPPlanar_Box);
	DECL_CONV_STUB(STEPPlane);
	DECL_CONV_STUB(STEPPlane_Angle_Unit);
	DECL_CONV_STUB(STEPPoint_And_Vector);
	DECL_CONV_STUB(STEPPoint_On_Curve);
	DECL_CONV_STUB(STEPPoint_On_Surface);
	DECL_CONV_STUB(STEPPoint_Path);
	DECL_CONV_STUB(STEPPoint_Replica);
	DECL_CONV_STUB(STEPPoly_Loop);
	DECL_CONV_STUB(STEPPolyline);
	DECL_CONV_STUB(STEPPositioned_Sketch);
	DECL_CONV_STUB(STEPPre_Defined_Surface_Side_Style);
	DECL_CONV_STUB(STEPPredefined_Picture_Representation_Item);
	DECL_CONV_STUB(STEPPresentation_Style_Assignment);
	DECL_CONV_STUB(STEPPresentation_Style_By_Context);
	DECL_CONV_STUB(STEPProcedural_Representation);
	DECL_CONV_STUB(STEPProcedural_Representation_Sequence);
	DECL_CONV_STUB(STEPProcedural_Shape_Representation);
	DECL_CONV_STUB(STEPProcedural_Shape_Representation_Sequence);
	DECL_CONV_STUB(STEPProjection_Curve);
	DECL_CONV_STUB(STEPQualified_Representation_Item);
	DECL_CONV_STUB(STEPQuasi_Uniform_Curve);
	DECL_CONV_STUB(STEPQuasi_Uniform_Surface);
	DECL_CONV_STUB(STEPRadius_Dimension);
	DECL_CONV_STUB(STEPRange_Characteristic);
	DECL_CONV_STUB(STEPRatio_Unit);
	DECL_CONV_STUB(STEPRational_B_Spline_Curve);
	DECL_CONV_STUB(STEPRational_B_Spline_Surface);
	DECL_CONV_STUB(STEPRational_Representation_Item);
	DECL_CONV_STUB(STEPReal_Representation_Item);
	DECL_CONV_STUB(STEPRectangular_Composite_Surface);
	DECL_CONV_STUB(STEPRectangular_Trimmed_Surface);
	DECL_CONV_STUB(STEPRep_Item_Group);
	DECL_CONV_STUB(STEPReparametrised_Composite_Curve_Segment);
	DECL_CONV_STUB(STEPRevolved_Area_Solid);
	DECL_CONV_STUB(STEPRevolved_Face_Solid);
	DECL_CONV_STUB(STEPRevolved_Face_Solid_With_Trim_Conditions);
	DECL_CONV_STUB(STEPRight_Angular_Wedge);
	DECL_CONV_STUB(STEPRight_Circular_Cone);
	DECL_CONV_STUB(STEPRight_Circular_Cylinder);
	DECL_CONV_STUB(STEPRow_Representation_Item);
	DECL_CONV_STUB(STEPRow_Value);
	DECL_CONV_STUB(STEPRow_Variable);
	DECL_CONV_STUB(STEPRule_Condition);
	DECL_CONV_STUB(STEPSurface_Curve_Swept_Area_Solid);
	DECL_CONV_STUB(STEPRuled_Surface_Swept_Area_Solid);
	DECL_CONV_STUB(STEPScalar_Variable);
	DECL_CONV_STUB(STEPSculptured_Solid);
	DECL_CONV_STUB(STEPSeam_Curve);
	DECL_CONV_STUB(STEPShape_Definition_Representation);
	DECL_CONV_STUB(STEPShape_Dimension_Representation);
	DECL_CONV_STUB(STEPShape_Representation_With_Parameters);
	DECL_CONV_STUB(STEPShell_Based_Surface_Model);
	DECL_CONV_STUB(STEPShell_Based_Wireframe_Model);
	DECL_CONV_STUB(STEPShell_Based_Wireframe_Shape_Representation);
	DECL_CONV_STUB(STEPSi_Unit);
	DECL_CONV_STUB(STEPSi_Absorbed_Dose_Unit);
	DECL_CONV_STUB(STEPSi_Capacitance_Unit);
	DECL_CONV_STUB(STEPSi_Conductance_Unit);
	DECL_CONV_STUB(STEPSi_Dose_Equivalent_Unit);
	DECL_CONV_STUB(STEPSi_Electric_Charge_Unit);
	DECL_CONV_STUB(STEPSi_Electric_Potential_Unit);
	DECL_CONV_STUB(STEPSi_Energy_Unit);
	DECL_CONV_STUB(STEPSi_Force_Unit);
	DECL_CONV_STUB(STEPSi_Frequency_Unit);
	DECL_CONV_STUB(STEPSi_Illuminance_Unit);
	DECL_CONV_STUB(STEPSi_Inductance_Unit);
	DECL_CONV_STUB(STEPSi_Magnetic_Flux_Density_Unit);
	DECL_CONV_STUB(STEPSi_Magnetic_Flux_Unit);
	DECL_CONV_STUB(STEPSi_Power_Unit);
	DECL_CONV_STUB(STEPSi_Pressure_Unit);
	DECL_CONV_STUB(STEPSi_Radioactivity_Unit);
	DECL_CONV_STUB(STEPSi_Resistance_Unit);
	DECL_CONV_STUB(STEPSolid_Angle_Unit);
	DECL_CONV_STUB(STEPSolid_Replica);
	DECL_CONV_STUB(STEPSolid_With_Chamfered_Edges);
	DECL_CONV_STUB(STEPSolid_With_Angle_Based_Chamfer);
	DECL_CONV_STUB(STEPSolid_With_Shape_Element_Pattern);
	DECL_CONV_STUB(STEPSolid_With_Circular_Pattern);
	DECL_CONV_STUB(STEPSolid_With_Depression);
	DECL_CONV_STUB(STEPSolid_With_Pocket);
	DECL_CONV_STUB(STEPSolid_With_Circular_Pocket);
	DECL_CONV_STUB(STEPSolid_With_Protrusion);
	DECL_CONV_STUB(STEPSolid_With_Circular_Protrusion);
	DECL_CONV_STUB(STEPSolid_With_Hole);
	DECL_CONV_STUB(STEPSolid_With_Stepped_Round_Hole);
	DECL_CONV_STUB(STEPSolid_With_Conical_Bottom_Round_Hole);
	DECL_CONV_STUB(STEPSolid_With_Constant_Radius_Edge_Blend);
	DECL_CONV_STUB(STEPSolid_With_Slot);
	DECL_CONV_STUB(STEPSolid_With_Curved_Slot);
	DECL_CONV_STUB(STEPSolid_With_Double_Offset_Chamfer);
	DECL_CONV_STUB(STEPSolid_With_Flat_Bottom_Round_Hole);
	DECL_CONV_STUB(STEPSolid_With_General_Pocket);
	DECL_CONV_STUB(STEPSolid_With_General_Protrusion);
	DECL_CONV_STUB(STEPSolid_With_Groove);
	DECL_CONV_STUB(STEPSolid_With_Incomplete_Circular_Pattern);
	DECL_CONV_STUB(STEPSolid_With_Rectangular_Pattern);
	DECL_CONV_STUB(STEPSolid_With_Incomplete_Rectangular_Pattern);
	DECL_CONV_STUB(STEPSolid_With_Rectangular_Pocket);
	DECL_CONV_STUB(STEPSolid_With_Rectangular_Protrusion);
	DECL_CONV_STUB(STEPSolid_With_Single_Offset_Chamfer);
	DECL_CONV_STUB(STEPSolid_With_Spherical_Bottom_Round_Hole);
	DECL_CONV_STUB(STEPSolid_With_Stepped_Round_Hole_And_Conical_Transitions);
	DECL_CONV_STUB(STEPSolid_With_Straight_Slot);
	DECL_CONV_STUB(STEPSolid_With_Tee_Section_Slot);
	DECL_CONV_STUB(STEPSolid_With_Through_Depression);
	DECL_CONV_STUB(STEPSolid_With_Trapezoidal_Section_Slot);
	DECL_CONV_STUB(STEPTrack_Blended_Solid);
	DECL_CONV_STUB(STEPSolid_With_Variable_Radius_Edge_Blend);
	DECL_CONV_STUB(STEPSphere);
	DECL_CONV_STUB(STEPSpherical_Surface);
	DECL_CONV_STUB(STEPStructured_Dimension_Callout);
	DECL_CONV_STUB(STEPStructured_Text_Composition);
	DECL_CONV_STUB(STEPStructured_Text_Representation);
	DECL_CONV_STUB(STEPSubedge);
	DECL_CONV_STUB(STEPSubface);
	DECL_CONV_STUB(STEPSurface_Condition_Callout);
	DECL_CONV_STUB(STEPSwept_Surface);
	DECL_CONV_STUB(STEPSurface_Of_Linear_Extrusion);
	DECL_CONV_STUB(STEPSurface_Of_Revolution);
	DECL_CONV_STUB(STEPSurface_Replica);
	DECL_CONV_STUB(STEPSurface_Side_Style);
	DECL_CONV_STUB(STEPSurface_Style_Fill_Area);
	DECL_CONV_STUB(STEPSurface_Style_Usage);
	DECL_CONV_STUB(STEPSurface_Texture_Representation);
	DECL_CONV_STUB(STEPSurfaced_Open_Shell);
	DECL_CONV_STUB(STEPSwept_Disk_Solid);
	DECL_CONV_STUB(STEPSymbol);
	DECL_CONV_STUB(STEPSymbol_Representation_Map);
	DECL_CONV_STUB(STEPSymbol_Target);
	DECL_CONV_STUB(STEPTable_Representation_Item);
	DECL_CONV_STUB(STEPTactile_Appearance_Representation);
	DECL_CONV_STUB(STEPTagged_Text_Format);
	DECL_CONV_STUB(STEPTagged_Text_Item);
	DECL_CONV_STUB(STEPText_Literal_With_Associated_Curves);
	DECL_CONV_STUB(STEPText_Literal_With_Blanking_Box);
	DECL_CONV_STUB(STEPText_Literal_With_Extent);
	DECL_CONV_STUB(STEPText_String_Representation);
	DECL_CONV_STUB(STEPThermodynamic_Temperature_Unit);
	DECL_CONV_STUB(STEPThickened_Face_Solid);
	DECL_CONV_STUB(STEPTime_Unit);
	DECL_CONV_STUB(STEPTorus);
	DECL_CONV_STUB(STEPTrack_Blended_Solid_With_End_Conditions);
	DECL_CONV_STUB(STEPTrimmed_Curve);
	DECL_CONV_STUB(STEPTwo_Direction_Repeat_Factor);
	DECL_CONV_STUB(STEPUncertainty_Assigned_Representation);
	DECL_CONV_STUB(STEPUniform_Curve);
	DECL_CONV_STUB(STEPUniform_Resource_Identifier);
	DECL_CONV_STUB(STEPUniform_Surface);
	DECL_CONV_STUB(STEPUser_Defined_Curve_Font);
	DECL_CONV_STUB(STEPUser_Defined_Marker);
	DECL_CONV_STUB(STEPUser_Defined_Terminator_Symbol);
	DECL_CONV_STUB(STEPValue_Range);
	DECL_CONV_STUB(STEPValue_Representation_Item);
	DECL_CONV_STUB(STEPVector);
	DECL_CONV_STUB(STEPVertex);
	DECL_CONV_STUB(STEPVertex_Loop);
	DECL_CONV_STUB(STEPVertex_Point);
	DECL_CONV_STUB(STEPVertex_Shell);
	DECL_CONV_STUB(STEPVisual_Appearance_Representation);
	DECL_CONV_STUB(STEPWire_Shell);


#undef DECL_CONV_STUB

} //! STEP
} //! Assimp

#endif // INCLUDED_STEP_READER_GEN_H
